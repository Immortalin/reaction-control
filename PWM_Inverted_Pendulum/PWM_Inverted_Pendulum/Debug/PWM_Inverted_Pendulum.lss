
PWM_Inverted_Pendulum.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00001df2  00001e86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001df2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007a  00800126  00800126  00001eac  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001eac  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000118  00000000  00000000  00001f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012b7  00000000  00000000  00002020  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005bd  00000000  00000000  000032d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000692  00000000  00000000  00003894  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000404  00000000  00000000  00003f28  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004f6  00000000  00000000  0000432c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000011e3  00000000  00000000  00004822  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e8  00000000  00000000  00005a05  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b1 c0       	rjmp	.+354    	; 0x164 <__ctors_end>
       2:	cb c0       	rjmp	.+406    	; 0x19a <__bad_interrupt>
       4:	ca c0       	rjmp	.+404    	; 0x19a <__bad_interrupt>
       6:	c9 c0       	rjmp	.+402    	; 0x19a <__bad_interrupt>
       8:	c8 c0       	rjmp	.+400    	; 0x19a <__bad_interrupt>
       a:	c7 c0       	rjmp	.+398    	; 0x19a <__bad_interrupt>
       c:	c6 c0       	rjmp	.+396    	; 0x19a <__bad_interrupt>
       e:	c5 c0       	rjmp	.+394    	; 0x19a <__bad_interrupt>
      10:	c4 c0       	rjmp	.+392    	; 0x19a <__bad_interrupt>
      12:	c3 c0       	rjmp	.+390    	; 0x19a <__bad_interrupt>
      14:	c2 c0       	rjmp	.+388    	; 0x19a <__bad_interrupt>
      16:	37 c3       	rjmp	.+1646   	; 0x686 <__vector_11>
      18:	c0 c0       	rjmp	.+384    	; 0x19a <__bad_interrupt>
      1a:	bf c0       	rjmp	.+382    	; 0x19a <__bad_interrupt>
      1c:	be c0       	rjmp	.+380    	; 0x19a <__bad_interrupt>
      1e:	bd c0       	rjmp	.+378    	; 0x19a <__bad_interrupt>
      20:	bc c0       	rjmp	.+376    	; 0x19a <__bad_interrupt>
      22:	bb c0       	rjmp	.+374    	; 0x19a <__bad_interrupt>
      24:	ba c0       	rjmp	.+372    	; 0x19a <__bad_interrupt>
      26:	b9 c0       	rjmp	.+370    	; 0x19a <__bad_interrupt>
      28:	b8 c0       	rjmp	.+368    	; 0x19a <__bad_interrupt>
      2a:	b7 c0       	rjmp	.+366    	; 0x19a <__bad_interrupt>
      2c:	b6 c0       	rjmp	.+364    	; 0x19a <__bad_interrupt>
      2e:	b5 c0       	rjmp	.+362    	; 0x19a <__bad_interrupt>
      30:	b4 c0       	rjmp	.+360    	; 0x19a <__bad_interrupt>
      32:	b3 c0       	rjmp	.+358    	; 0x19a <__bad_interrupt>
      34:	08 4a       	sbci	r16, 0xA8	; 168
      36:	d7 3b       	cpi	r29, 0xB7	; 183
      38:	3b ce       	rjmp	.-906    	; 0xfffffcb0 <__eeprom_end+0xff7efcb0>
      3a:	01 6e       	ori	r16, 0xE1	; 225
      3c:	84 bc       	out	0x24, r8	; 36
      3e:	bf fd       	.word	0xfdbf	; ????
      40:	c1 2f       	mov	r28, r17
      42:	3d 6c       	ori	r19, 0xCD	; 205
      44:	74 31       	cpi	r23, 0x14	; 20
      46:	9a bd       	out	0x2a, r25	; 42
      48:	56 83       	std	Z+6, r21	; 0x06
      4a:	3d da       	rcall	.-2950   	; 0xfffff4c6 <__eeprom_end+0xff7ef4c6>
      4c:	3d 00       	.word	0x003d	; ????
      4e:	c7 7f       	andi	r28, 0xF7	; 247
      50:	11 be       	out	0x31, r1	; 49
      52:	d9 e4       	ldi	r29, 0x49	; 73
      54:	bb 4c       	sbci	r27, 0xCB	; 203
      56:	3e 91       	ld	r19, -X
      58:	6b aa       	std	Y+51, r6	; 0x33
      5a:	aa be       	out	0x3a, r10	; 58
      5c:	00 00       	nop
      5e:	00 80       	ld	r0, Z
      60:	3f 00       	.word	0x003f	; ????

00000062 <__trampolines_end>:
      62:	6e 61       	ori	r22, 0x1E	; 30
      64:	6e 00       	.word	0x006e	; ????

00000066 <__c.2159>:
      66:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      76:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      86:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      96:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      a6:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      b6:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      c6:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      d6:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      e6:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      f6:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     106:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     116:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     126:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     136:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     146:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     156:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000164 <__ctors_end>:
     164:	11 24       	eor	r1, r1
     166:	1f be       	out	0x3f, r1	; 63
     168:	cf ef       	ldi	r28, 0xFF	; 255
     16a:	d4 e0       	ldi	r29, 0x04	; 4
     16c:	de bf       	out	0x3e, r29	; 62
     16e:	cd bf       	out	0x3d, r28	; 61

00000170 <__do_copy_data>:
     170:	11 e0       	ldi	r17, 0x01	; 1
     172:	a0 e0       	ldi	r26, 0x00	; 0
     174:	b1 e0       	ldi	r27, 0x01	; 1
     176:	e2 ef       	ldi	r30, 0xF2	; 242
     178:	fd e1       	ldi	r31, 0x1D	; 29
     17a:	02 c0       	rjmp	.+4      	; 0x180 <__do_copy_data+0x10>
     17c:	05 90       	lpm	r0, Z+
     17e:	0d 92       	st	X+, r0
     180:	a6 32       	cpi	r26, 0x26	; 38
     182:	b1 07       	cpc	r27, r17
     184:	d9 f7       	brne	.-10     	; 0x17c <__do_copy_data+0xc>

00000186 <__do_clear_bss>:
     186:	21 e0       	ldi	r18, 0x01	; 1
     188:	a6 e2       	ldi	r26, 0x26	; 38
     18a:	b1 e0       	ldi	r27, 0x01	; 1
     18c:	01 c0       	rjmp	.+2      	; 0x190 <.do_clear_bss_start>

0000018e <.do_clear_bss_loop>:
     18e:	1d 92       	st	X+, r1

00000190 <.do_clear_bss_start>:
     190:	a0 3a       	cpi	r26, 0xA0	; 160
     192:	b2 07       	cpc	r27, r18
     194:	e1 f7       	brne	.-8      	; 0x18e <.do_clear_bss_loop>
     196:	39 d2       	rcall	.+1138   	; 0x60a <main>
     198:	2a ce       	rjmp	.-940    	; 0xfffffdee <__eeprom_end+0xff7efdee>

0000019a <__bad_interrupt>:
     19a:	32 cf       	rjmp	.-412    	; 0x0 <__vectors>

0000019c <mpu6050_readBytes>:
volatile uint8_t buffer[14];

/*
 * read bytes from chip register
 */
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
     19c:	df 92       	push	r13
     19e:	ef 92       	push	r14
     1a0:	ff 92       	push	r15
     1a2:	0f 93       	push	r16
     1a4:	1f 93       	push	r17
     1a6:	cf 93       	push	r28
     1a8:	df 93       	push	r29
     1aa:	18 2f       	mov	r17, r24
     1ac:	d6 2e       	mov	r13, r22
     1ae:	d4 2f       	mov	r29, r20
     1b0:	c5 2f       	mov	r28, r21
	uint8_t i = 0;
	int8_t count = 0;
	if(length > 0) {
     1b2:	66 23       	and	r22, r22
     1b4:	21 f1       	breq	.+72     	; 0x1fe <mpu6050_readBytes+0x62>
		//request register
		i2c_start(MPU6050_ADDR | I2C_WRITE);
     1b6:	80 ed       	ldi	r24, 0xD0	; 208
     1b8:	a1 d5       	rcall	.+2882   	; 0xcfc <i2c_start>
		i2c_write(regAddr);
     1ba:	81 2f       	mov	r24, r17
     1bc:	f5 d5       	rcall	.+3050   	; 0xda8 <i2c_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1be:	83 e0       	ldi	r24, 0x03	; 3
     1c0:	8a 95       	dec	r24
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <mpu6050_readBytes+0x24>
     1c4:	00 00       	nop
		_delay_us(10);
		//read data
		i2c_start(MPU6050_ADDR | I2C_READ);
     1c6:	81 ed       	ldi	r24, 0xD1	; 209
     1c8:	99 d5       	rcall	.+2866   	; 0xcfc <i2c_start>
     1ca:	0d 2f       	mov	r16, r29
     1cc:	1c 2f       	mov	r17, r28
     1ce:	c0 e0       	ldi	r28, 0x00	; 0
     1d0:	d0 e0       	ldi	r29, 0x00	; 0
		for(i=0; i<length; i++) {
			count++;
			if(i==length-1)
     1d2:	ed 2c       	mov	r14, r13
     1d4:	f1 2c       	mov	r15, r1
     1d6:	e1 e0       	ldi	r30, 0x01	; 1
     1d8:	ee 1a       	sub	r14, r30
     1da:	f1 08       	sbc	r15, r1
     1dc:	ce 15       	cp	r28, r14
     1de:	df 05       	cpc	r29, r15
     1e0:	21 f4       	brne	.+8      	; 0x1ea <mpu6050_readBytes+0x4e>
				data[i] = i2c_readNak();
     1e2:	1d d6       	rcall	.+3130   	; 0xe1e <i2c_readNak>
     1e4:	f8 01       	movw	r30, r16
     1e6:	80 83       	st	Z, r24
     1e8:	03 c0       	rjmp	.+6      	; 0x1f0 <mpu6050_readBytes+0x54>
			else
				data[i] = i2c_readAck();
     1ea:	ff d5       	rcall	.+3070   	; 0xdea <i2c_readAck>
     1ec:	f8 01       	movw	r30, r16
     1ee:	80 83       	st	Z, r24
     1f0:	21 96       	adiw	r28, 0x01	; 1
     1f2:	0f 5f       	subi	r16, 0xFF	; 255
     1f4:	1f 4f       	sbci	r17, 0xFF	; 255
		i2c_start(MPU6050_ADDR | I2C_WRITE);
		i2c_write(regAddr);
		_delay_us(10);
		//read data
		i2c_start(MPU6050_ADDR | I2C_READ);
		for(i=0; i<length; i++) {
     1f6:	cd 15       	cp	r28, r13
     1f8:	88 f3       	brcs	.-30     	; 0x1dc <mpu6050_readBytes+0x40>
			if(i==length-1)
				data[i] = i2c_readNak();
			else
				data[i] = i2c_readAck();
		}
		i2c_stop();
     1fa:	c6 d5       	rcall	.+2956   	; 0xd88 <i2c_stop>
     1fc:	01 c0       	rjmp	.+2      	; 0x200 <mpu6050_readBytes+0x64>
/*
 * read bytes from chip register
 */
int8_t mpu6050_readBytes(uint8_t regAddr, uint8_t length, uint8_t *data) {
	uint8_t i = 0;
	int8_t count = 0;
     1fe:	d1 2c       	mov	r13, r1
				data[i] = i2c_readAck();
		}
		i2c_stop();
	}
	return count;
}
     200:	8d 2d       	mov	r24, r13
     202:	df 91       	pop	r29
     204:	cf 91       	pop	r28
     206:	1f 91       	pop	r17
     208:	0f 91       	pop	r16
     20a:	ff 90       	pop	r15
     20c:	ef 90       	pop	r14
     20e:	df 90       	pop	r13
     210:	08 95       	ret

00000212 <mpu6050_readByte>:

/*
 * read 1 byte from chip register
 */
int8_t mpu6050_readByte(uint8_t regAddr, uint8_t *data) {
     212:	ab 01       	movw	r20, r22
    return mpu6050_readBytes(regAddr, 1, data);
     214:	61 e0       	ldi	r22, 0x01	; 1
     216:	c2 df       	rcall	.-124    	; 0x19c <mpu6050_readBytes>
}
     218:	08 95       	ret

0000021a <mpu6050_writeBytes>:

/*
 * write bytes to chip register
 */
void mpu6050_writeBytes(uint8_t regAddr, uint8_t length, uint8_t* data) {
     21a:	ff 92       	push	r15
     21c:	0f 93       	push	r16
     21e:	1f 93       	push	r17
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	c8 2f       	mov	r28, r24
     226:	06 2f       	mov	r16, r22
     228:	f4 2e       	mov	r15, r20
     22a:	15 2f       	mov	r17, r21
	if(length > 0) {
     22c:	66 23       	and	r22, r22
     22e:	69 f0       	breq	.+26     	; 0x24a <mpu6050_writeBytes+0x30>
		//write data
		i2c_start(MPU6050_ADDR | I2C_WRITE);
     230:	80 ed       	ldi	r24, 0xD0	; 208
     232:	64 d5       	rcall	.+2760   	; 0xcfc <i2c_start>
		i2c_write(regAddr); //reg
     234:	8c 2f       	mov	r24, r28
     236:	b8 d5       	rcall	.+2928   	; 0xda8 <i2c_write>
     238:	cf 2d       	mov	r28, r15
     23a:	d1 2f       	mov	r29, r17
		for (uint8_t i = 0; i < length; i++) {
     23c:	10 e0       	ldi	r17, 0x00	; 0
			i2c_write((uint8_t) data[i]);
     23e:	89 91       	ld	r24, Y+
     240:	b3 d5       	rcall	.+2918   	; 0xda8 <i2c_write>
void mpu6050_writeBytes(uint8_t regAddr, uint8_t length, uint8_t* data) {
	if(length > 0) {
		//write data
		i2c_start(MPU6050_ADDR | I2C_WRITE);
		i2c_write(regAddr); //reg
		for (uint8_t i = 0; i < length; i++) {
     242:	1f 5f       	subi	r17, 0xFF	; 255
     244:	10 13       	cpse	r17, r16
     246:	fb cf       	rjmp	.-10     	; 0x23e <mpu6050_writeBytes+0x24>
			i2c_write((uint8_t) data[i]);
		}
		i2c_stop();
     248:	9f d5       	rcall	.+2878   	; 0xd88 <i2c_stop>
	}
}
     24a:	df 91       	pop	r29
     24c:	cf 91       	pop	r28
     24e:	1f 91       	pop	r17
     250:	0f 91       	pop	r16
     252:	ff 90       	pop	r15
     254:	08 95       	ret

00000256 <mpu6050_writeByte>:

/*
 * write 1 byte to chip register
 */
void mpu6050_writeByte(uint8_t regAddr, uint8_t data) {
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	1f 92       	push	r1
     25c:	cd b7       	in	r28, 0x3d	; 61
     25e:	de b7       	in	r29, 0x3e	; 62
     260:	69 83       	std	Y+1, r22	; 0x01
    return mpu6050_writeBytes(regAddr, 1, &data);
     262:	ae 01       	movw	r20, r28
     264:	4f 5f       	subi	r20, 0xFF	; 255
     266:	5f 4f       	sbci	r21, 0xFF	; 255
     268:	61 e0       	ldi	r22, 0x01	; 1
     26a:	d7 df       	rcall	.-82     	; 0x21a <mpu6050_writeBytes>
}
     26c:	0f 90       	pop	r0
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	08 95       	ret

00000274 <mpu6050_writeBits>:
}

/*
 * write bit/bits to chip register
 */
void mpu6050_writeBits(uint8_t regAddr, uint8_t bitStart, uint8_t length, uint8_t data) {
     274:	ef 92       	push	r14
     276:	ff 92       	push	r15
     278:	0f 93       	push	r16
     27a:	1f 93       	push	r17
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	1f 92       	push	r1
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	18 2f       	mov	r17, r24
     288:	e6 2e       	mov	r14, r22
     28a:	f4 2e       	mov	r15, r20
     28c:	02 2f       	mov	r16, r18
    //    xxx   args: bitStart=4, length=3
    // 00011100 mask byte
    // 10101111 original value (sample)
    // 10100011 original & ~mask
    // 10101011 masked | value
	if(length > 0) {
     28e:	44 23       	and	r20, r20
     290:	81 f1       	breq	.+96     	; 0x2f2 <mpu6050_writeBits+0x7e>
		uint8_t b = 0;
     292:	19 82       	std	Y+1, r1	; 0x01
		if (mpu6050_readByte(regAddr, &b) != 0) { //get current data
     294:	be 01       	movw	r22, r28
     296:	6f 5f       	subi	r22, 0xFF	; 255
     298:	7f 4f       	sbci	r23, 0xFF	; 255
     29a:	bb df       	rcall	.-138    	; 0x212 <mpu6050_readByte>
     29c:	88 23       	and	r24, r24
     29e:	49 f1       	breq	.+82     	; 0x2f2 <mpu6050_writeBits+0x7e>
			uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
     2a0:	6e 2d       	mov	r22, r14
     2a2:	70 e0       	ldi	r23, 0x00	; 0
     2a4:	6f 19       	sub	r22, r15
     2a6:	71 09       	sbc	r23, r1
     2a8:	6f 5f       	subi	r22, 0xFF	; 255
     2aa:	7f 4f       	sbci	r23, 0xFF	; 255
     2ac:	e1 e0       	ldi	r30, 0x01	; 1
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	af 01       	movw	r20, r30
     2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <mpu6050_writeBits+0x44>
     2b4:	44 0f       	add	r20, r20
     2b6:	55 1f       	adc	r21, r21
     2b8:	fa 94       	dec	r15
     2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <mpu6050_writeBits+0x40>
     2bc:	41 50       	subi	r20, 0x01	; 1
     2be:	51 09       	sbc	r21, r1
     2c0:	06 2e       	mov	r0, r22
     2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <mpu6050_writeBits+0x54>
     2c4:	44 0f       	add	r20, r20
     2c6:	55 1f       	adc	r21, r21
     2c8:	0a 94       	dec	r0
     2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <mpu6050_writeBits+0x50>
			data <<= (bitStart - length + 1); // shift data into correct position
     2cc:	20 2f       	mov	r18, r16
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	c9 01       	movw	r24, r18
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <mpu6050_writeBits+0x64>
     2d4:	88 0f       	add	r24, r24
     2d6:	99 1f       	adc	r25, r25
     2d8:	6a 95       	dec	r22
     2da:	e2 f7       	brpl	.-8      	; 0x2d4 <mpu6050_writeBits+0x60>
     2dc:	bc 01       	movw	r22, r24
			data &= mask; // zero all non-important bits in data
			b &= ~(mask); // zero all important bits in existing byte
     2de:	94 2f       	mov	r25, r20
     2e0:	90 95       	com	r25
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	89 23       	and	r24, r25
	if(length > 0) {
		uint8_t b = 0;
		if (mpu6050_readByte(regAddr, &b) != 0) { //get current data
			uint8_t mask = ((1 << length) - 1) << (bitStart - length + 1);
			data <<= (bitStart - length + 1); // shift data into correct position
			data &= mask; // zero all non-important bits in data
     2e6:	46 23       	and	r20, r22
			b &= ~(mask); // zero all important bits in existing byte
			b |= data; // combine data with existing byte
     2e8:	68 2f       	mov	r22, r24
     2ea:	64 2b       	or	r22, r20
     2ec:	69 83       	std	Y+1, r22	; 0x01
			mpu6050_writeByte(regAddr, b);
     2ee:	81 2f       	mov	r24, r17
     2f0:	b2 df       	rcall	.-156    	; 0x256 <mpu6050_writeByte>
		}
	}
}
     2f2:	0f 90       	pop	r0
     2f4:	df 91       	pop	r29
     2f6:	cf 91       	pop	r28
     2f8:	1f 91       	pop	r17
     2fa:	0f 91       	pop	r16
     2fc:	ff 90       	pop	r15
     2fe:	ef 90       	pop	r14
     300:	08 95       	ret

00000302 <mpu6050_writeBit>:

/*
 * write one bit to chip register
 */
void mpu6050_writeBit(uint8_t regAddr, uint8_t bitNum, uint8_t data) {
     302:	ff 92       	push	r15
     304:	0f 93       	push	r16
     306:	1f 93       	push	r17
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	1f 92       	push	r1
     30e:	cd b7       	in	r28, 0x3d	; 61
     310:	de b7       	in	r29, 0x3e	; 62
     312:	18 2f       	mov	r17, r24
     314:	06 2f       	mov	r16, r22
     316:	f4 2e       	mov	r15, r20
    uint8_t b;
    mpu6050_readByte(regAddr, &b);
     318:	be 01       	movw	r22, r28
     31a:	6f 5f       	subi	r22, 0xFF	; 255
     31c:	7f 4f       	sbci	r23, 0xFF	; 255
     31e:	79 df       	rcall	.-270    	; 0x212 <mpu6050_readByte>
    b = (data != 0) ? (b | (1 << bitNum)) : (b & ~(1 << bitNum));
     320:	ff 20       	and	r15, r15
     322:	59 f0       	breq	.+22     	; 0x33a <mpu6050_writeBit+0x38>
     324:	21 e0       	ldi	r18, 0x01	; 1
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	b9 01       	movw	r22, r18
     32a:	02 c0       	rjmp	.+4      	; 0x330 <mpu6050_writeBit+0x2e>
     32c:	66 0f       	add	r22, r22
     32e:	77 1f       	adc	r23, r23
     330:	0a 95       	dec	r16
     332:	e2 f7       	brpl	.-8      	; 0x32c <mpu6050_writeBit+0x2a>
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	68 2b       	or	r22, r24
     338:	0b c0       	rjmp	.+22     	; 0x350 <mpu6050_writeBit+0x4e>
     33a:	21 e0       	ldi	r18, 0x01	; 1
     33c:	30 e0       	ldi	r19, 0x00	; 0
     33e:	b9 01       	movw	r22, r18
     340:	02 c0       	rjmp	.+4      	; 0x346 <mpu6050_writeBit+0x44>
     342:	66 0f       	add	r22, r22
     344:	77 1f       	adc	r23, r23
     346:	0a 95       	dec	r16
     348:	e2 f7       	brpl	.-8      	; 0x342 <mpu6050_writeBit+0x40>
     34a:	60 95       	com	r22
     34c:	89 81       	ldd	r24, Y+1	; 0x01
     34e:	68 23       	and	r22, r24
     350:	69 83       	std	Y+1, r22	; 0x01
    mpu6050_writeByte(regAddr, b);
     352:	81 2f       	mov	r24, r17
     354:	80 df       	rcall	.-256    	; 0x256 <mpu6050_writeByte>
}
     356:	0f 90       	pop	r0
     358:	df 91       	pop	r29
     35a:	cf 91       	pop	r28
     35c:	1f 91       	pop	r17
     35e:	0f 91       	pop	r16
     360:	ff 90       	pop	r15
     362:	08 95       	ret

00000364 <mpu6050_setSleepDisabled>:

/*
 * set sleep disabled
 */
void mpu6050_setSleepDisabled() {
	mpu6050_writeBit(MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_SLEEP_BIT, 0);
     364:	40 e0       	ldi	r20, 0x00	; 0
     366:	66 e0       	ldi	r22, 0x06	; 6
     368:	8b e6       	ldi	r24, 0x6B	; 107
     36a:	cb df       	rcall	.-106    	; 0x302 <mpu6050_writeBit>
     36c:	08 95       	ret

0000036e <mpu6050_init>:
 * initialize the accel and gyro
 */
void mpu6050_init() {
	#if MPU6050_I2CINIT == 1
	//init i2c
	i2c_init();
     36e:	c0 d4       	rcall	.+2432   	; 0xcf0 <i2c_init>
     370:	83 e0       	ldi	r24, 0x03	; 3
     372:	8a 95       	dec	r24
     374:	f1 f7       	brne	.-4      	; 0x372 <mpu6050_init+0x4>
     376:	00 00       	nop
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     378:	87 ea       	ldi	r24, 0xA7	; 167
     37a:	91 e6       	ldi	r25, 0x61	; 97
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	f1 f7       	brne	.-4      	; 0x37c <mpu6050_init+0xe>
     380:	00 c0       	rjmp	.+0      	; 0x382 <mpu6050_init+0x14>
     382:	00 00       	nop

	//allow mpu6050 chip clocks to start up
	_delay_ms(100);

	//set sleep disabled
	mpu6050_setSleepDisabled();
     384:	ef df       	rcall	.-34     	; 0x364 <mpu6050_setSleepDisabled>
     386:	83 ec       	ldi	r24, 0xC3	; 195
     388:	99 e0       	ldi	r25, 0x09	; 9
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <mpu6050_init+0x1c>
     38e:	00 c0       	rjmp	.+0      	; 0x390 <mpu6050_init+0x22>
     390:	00 00       	nop
	_delay_ms(10);

	//set clock source
	//  it is highly recommended that the device be configured to use one of the gyroscopes (or an external clock source)
	//  as the clock reference for improved stability
	mpu6050_writeBits(MPU6050_RA_PWR_MGMT_1, MPU6050_PWR1_CLKSEL_BIT, MPU6050_PWR1_CLKSEL_LENGTH, MPU6050_CLOCK_PLL_YGYRO);
     392:	22 e0       	ldi	r18, 0x02	; 2
     394:	43 e0       	ldi	r20, 0x03	; 3
     396:	62 e0       	ldi	r22, 0x02	; 2
     398:	8b e6       	ldi	r24, 0x6B	; 107
     39a:	6c df       	rcall	.-296    	; 0x274 <mpu6050_writeBits>
	//set DLPF bandwidth to 42Hz
	mpu6050_writeBits(MPU6050_RA_CONFIG, MPU6050_CFG_DLPF_CFG_BIT, MPU6050_CFG_DLPF_CFG_LENGTH, MPU6050_DLPF_BW_256);
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	43 e0       	ldi	r20, 0x03	; 3
     3a0:	62 e0       	ldi	r22, 0x02	; 2
     3a2:	8a e1       	ldi	r24, 0x1A	; 26
     3a4:	67 df       	rcall	.-306    	; 0x274 <mpu6050_writeBits>
    //set sampe rate
	mpu6050_writeByte(MPU6050_RA_SMPLRT_DIV, 0); //1khz / (1 + 4) = 200Hz
     3a6:	60 e0       	ldi	r22, 0x00	; 0
     3a8:	89 e1       	ldi	r24, 0x19	; 25
     3aa:	55 df       	rcall	.-342    	; 0x256 <mpu6050_writeByte>
	//set gyro range
	mpu6050_writeBits(MPU6050_RA_GYRO_CONFIG, MPU6050_GCONFIG_FS_SEL_BIT, MPU6050_GCONFIG_FS_SEL_LENGTH, MPU6050_GYRO_FS);
     3ac:	20 e0       	ldi	r18, 0x00	; 0
     3ae:	42 e0       	ldi	r20, 0x02	; 2
     3b0:	64 e0       	ldi	r22, 0x04	; 4
     3b2:	8b e1       	ldi	r24, 0x1B	; 27
     3b4:	5f df       	rcall	.-322    	; 0x274 <mpu6050_writeBits>
	//set accel range
	mpu6050_writeBits(MPU6050_RA_ACCEL_CONFIG, MPU6050_ACONFIG_AFS_SEL_BIT, MPU6050_ACONFIG_AFS_SEL_LENGTH, MPU6050_ACCEL_FS);
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	42 e0       	ldi	r20, 0x02	; 2
     3ba:	64 e0       	ldi	r22, 0x04	; 4
     3bc:	8c e1       	ldi	r24, 0x1C	; 28
     3be:	5a df       	rcall	.-332    	; 0x274 <mpu6050_writeBits>
     3c0:	08 95       	ret

000003c2 <mpu6050_getRawData>:

//can not accept many request if we alreay have getattitude requests
/*
 * get raw data
 */
void mpu6050_getRawData(int16_t* ax, int16_t* ay, int16_t* az, int16_t* gx, int16_t* gy, int16_t* gz) {
     3c2:	8f 92       	push	r8
     3c4:	9f 92       	push	r9
     3c6:	af 92       	push	r10
     3c8:	bf 92       	push	r11
     3ca:	cf 92       	push	r12
     3cc:	df 92       	push	r13
     3ce:	ef 92       	push	r14
     3d0:	ff 92       	push	r15
     3d2:	0f 93       	push	r16
     3d4:	1f 93       	push	r17
     3d6:	cf 93       	push	r28
     3d8:	df 93       	push	r29
     3da:	4c 01       	movw	r8, r24
     3dc:	5b 01       	movw	r10, r22
     3de:	6a 01       	movw	r12, r20
     3e0:	e9 01       	movw	r28, r18
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 14, (uint8_t *)buffer);
     3e2:	48 e3       	ldi	r20, 0x38	; 56
     3e4:	51 e0       	ldi	r21, 0x01	; 1
     3e6:	6e e0       	ldi	r22, 0x0E	; 14
     3e8:	8b e3       	ldi	r24, 0x3B	; 59
     3ea:	d8 de       	rcall	.-592    	; 0x19c <mpu6050_readBytes>

    *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
     3ec:	20 91 38 01 	lds	r18, 0x0138
     3f0:	80 91 39 01 	lds	r24, 0x0139
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	92 2b       	or	r25, r18
     3f8:	f4 01       	movw	r30, r8
     3fa:	91 83       	std	Z+1, r25	; 0x01
     3fc:	80 83       	st	Z, r24
    *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
     3fe:	20 91 3a 01 	lds	r18, 0x013A
     402:	80 91 3b 01 	lds	r24, 0x013B
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	92 2b       	or	r25, r18
     40a:	f5 01       	movw	r30, r10
     40c:	91 83       	std	Z+1, r25	; 0x01
     40e:	80 83       	st	Z, r24
    *az = (((int16_t)buffer[4]) << 8) | buffer[5];
     410:	20 91 3c 01 	lds	r18, 0x013C
     414:	80 91 3d 01 	lds	r24, 0x013D
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	92 2b       	or	r25, r18
     41c:	f6 01       	movw	r30, r12
     41e:	91 83       	std	Z+1, r25	; 0x01
     420:	80 83       	st	Z, r24
    *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
     422:	20 91 40 01 	lds	r18, 0x0140
     426:	80 91 41 01 	lds	r24, 0x0141
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	92 2b       	or	r25, r18
     42e:	99 83       	std	Y+1, r25	; 0x01
     430:	88 83       	st	Y, r24
    *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
     432:	20 91 42 01 	lds	r18, 0x0142
     436:	80 91 43 01 	lds	r24, 0x0143
     43a:	90 e0       	ldi	r25, 0x00	; 0
     43c:	92 2b       	or	r25, r18
     43e:	f8 01       	movw	r30, r16
     440:	91 83       	std	Z+1, r25	; 0x01
     442:	80 83       	st	Z, r24
    *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
     444:	20 91 44 01 	lds	r18, 0x0144
     448:	80 91 45 01 	lds	r24, 0x0145
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	92 2b       	or	r25, r18
     450:	f7 01       	movw	r30, r14
     452:	91 83       	std	Z+1, r25	; 0x01
     454:	80 83       	st	Z, r24
}
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	1f 91       	pop	r17
     45c:	0f 91       	pop	r16
     45e:	ff 90       	pop	r15
     460:	ef 90       	pop	r14
     462:	df 90       	pop	r13
     464:	cf 90       	pop	r12
     466:	bf 90       	pop	r11
     468:	af 90       	pop	r10
     46a:	9f 90       	pop	r9
     46c:	8f 90       	pop	r8
     46e:	08 95       	ret

00000470 <mpu6050_getConvData>:

/*
 * get raw data converted to g and deg/sec values
 */
void mpu6050_getConvData(double* axg, double* ayg, double* azg, double* gxds, double* gyds, double* gzds) {
     470:	2f 92       	push	r2
     472:	3f 92       	push	r3
     474:	4f 92       	push	r4
     476:	5f 92       	push	r5
     478:	6f 92       	push	r6
     47a:	7f 92       	push	r7
     47c:	8f 92       	push	r8
     47e:	9f 92       	push	r9
     480:	af 92       	push	r10
     482:	bf 92       	push	r11
     484:	cf 92       	push	r12
     486:	df 92       	push	r13
     488:	ef 92       	push	r14
     48a:	ff 92       	push	r15
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	cd b7       	in	r28, 0x3d	; 61
     496:	de b7       	in	r29, 0x3e	; 62
     498:	2c 97       	sbiw	r28, 0x0c	; 12
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	f8 94       	cli
     49e:	de bf       	out	0x3e, r29	; 62
     4a0:	0f be       	out	0x3f, r0	; 63
     4a2:	cd bf       	out	0x3d, r28	; 61
     4a4:	3c 01       	movw	r6, r24
     4a6:	4b 01       	movw	r8, r22
     4a8:	5a 01       	movw	r10, r20
     4aa:	69 01       	movw	r12, r18
     4ac:	28 01       	movw	r4, r16
     4ae:	17 01       	movw	r2, r14
	int16_t ax = 0;
     4b0:	1a 82       	std	Y+2, r1	; 0x02
     4b2:	19 82       	std	Y+1, r1	; 0x01
	int16_t ay = 0;
     4b4:	1c 82       	std	Y+4, r1	; 0x04
     4b6:	1b 82       	std	Y+3, r1	; 0x03
	int16_t az = 0;
     4b8:	1e 82       	std	Y+6, r1	; 0x06
     4ba:	1d 82       	std	Y+5, r1	; 0x05
	int16_t gx = 0;
     4bc:	18 86       	std	Y+8, r1	; 0x08
     4be:	1f 82       	std	Y+7, r1	; 0x07
	int16_t gy = 0;
     4c0:	1a 86       	std	Y+10, r1	; 0x0a
     4c2:	19 86       	std	Y+9, r1	; 0x09
	int16_t gz = 0;
     4c4:	1c 86       	std	Y+12, r1	; 0x0c
     4c6:	1b 86       	std	Y+11, r1	; 0x0b
	mpu6050_getRawData(&ax, &ay, &az, &gx, &gy, &gz);
     4c8:	ce 01       	movw	r24, r28
     4ca:	0b 96       	adiw	r24, 0x0b	; 11
     4cc:	7c 01       	movw	r14, r24
     4ce:	8e 01       	movw	r16, r28
     4d0:	07 5f       	subi	r16, 0xF7	; 247
     4d2:	1f 4f       	sbci	r17, 0xFF	; 255
     4d4:	9e 01       	movw	r18, r28
     4d6:	29 5f       	subi	r18, 0xF9	; 249
     4d8:	3f 4f       	sbci	r19, 0xFF	; 255
     4da:	ae 01       	movw	r20, r28
     4dc:	4b 5f       	subi	r20, 0xFB	; 251
     4de:	5f 4f       	sbci	r21, 0xFF	; 255
     4e0:	be 01       	movw	r22, r28
     4e2:	6d 5f       	subi	r22, 0xFD	; 253
     4e4:	7f 4f       	sbci	r23, 0xFF	; 255
     4e6:	0a 97       	sbiw	r24, 0x0a	; 10
     4e8:	6c df       	rcall	.-296    	; 0x3c2 <mpu6050_getRawData>

	#if MPU6050_CALIBRATEDACCGYRO == 1
    *axg = (double)(ax-MPU6050_AXOFFSET)/MPU6050_AXGAIN;
     4ea:	69 81       	ldd	r22, Y+1	; 0x01
     4ec:	7a 81       	ldd	r23, Y+2	; 0x02
     4ee:	88 27       	eor	r24, r24
     4f0:	77 fd       	sbrc	r23, 7
     4f2:	80 95       	com	r24
     4f4:	98 2f       	mov	r25, r24
     4f6:	13 d6       	rcall	.+3110   	; 0x111e <__floatsisf>
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	40 e8       	ldi	r20, 0x80	; 128
     4fe:	58 e3       	ldi	r21, 0x38	; 56
     500:	ee d6       	rcall	.+3548   	; 0x12de <__mulsf3>
     502:	f3 01       	movw	r30, r6
     504:	60 83       	st	Z, r22
     506:	71 83       	std	Z+1, r23	; 0x01
     508:	82 83       	std	Z+2, r24	; 0x02
     50a:	93 83       	std	Z+3, r25	; 0x03
    *ayg = (double)(ay-MPU6050_AYOFFSET)/MPU6050_AYGAIN;
     50c:	6b 81       	ldd	r22, Y+3	; 0x03
     50e:	7c 81       	ldd	r23, Y+4	; 0x04
     510:	88 27       	eor	r24, r24
     512:	77 fd       	sbrc	r23, 7
     514:	80 95       	com	r24
     516:	98 2f       	mov	r25, r24
     518:	02 d6       	rcall	.+3076   	; 0x111e <__floatsisf>
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	40 e8       	ldi	r20, 0x80	; 128
     520:	58 e3       	ldi	r21, 0x38	; 56
     522:	dd d6       	rcall	.+3514   	; 0x12de <__mulsf3>
     524:	f4 01       	movw	r30, r8
     526:	60 83       	st	Z, r22
     528:	71 83       	std	Z+1, r23	; 0x01
     52a:	82 83       	std	Z+2, r24	; 0x02
     52c:	93 83       	std	Z+3, r25	; 0x03
    *azg = (double)(az-MPU6050_AZOFFSET)/MPU6050_AZGAIN;
     52e:	6d 81       	ldd	r22, Y+5	; 0x05
     530:	7e 81       	ldd	r23, Y+6	; 0x06
     532:	88 27       	eor	r24, r24
     534:	77 fd       	sbrc	r23, 7
     536:	80 95       	com	r24
     538:	98 2f       	mov	r25, r24
     53a:	f1 d5       	rcall	.+3042   	; 0x111e <__floatsisf>
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	40 e8       	ldi	r20, 0x80	; 128
     542:	58 e3       	ldi	r21, 0x38	; 56
     544:	cc d6       	rcall	.+3480   	; 0x12de <__mulsf3>
     546:	f5 01       	movw	r30, r10
     548:	60 83       	st	Z, r22
     54a:	71 83       	std	Z+1, r23	; 0x01
     54c:	82 83       	std	Z+2, r24	; 0x02
     54e:	93 83       	std	Z+3, r25	; 0x03
    *gxds = (double)(gx-MPU6050_GXOFFSET)/MPU6050_GXGAIN;
     550:	6f 81       	ldd	r22, Y+7	; 0x07
     552:	78 85       	ldd	r23, Y+8	; 0x08
     554:	88 27       	eor	r24, r24
     556:	77 fd       	sbrc	r23, 7
     558:	80 95       	com	r24
     55a:	98 2f       	mov	r25, r24
     55c:	e0 d5       	rcall	.+3008   	; 0x111e <__floatsisf>
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	43 e0       	ldi	r20, 0x03	; 3
     564:	53 e4       	ldi	r21, 0x43	; 67
     566:	40 d5       	rcall	.+2688   	; 0xfe8 <__divsf3>
     568:	f6 01       	movw	r30, r12
     56a:	60 83       	st	Z, r22
     56c:	71 83       	std	Z+1, r23	; 0x01
     56e:	82 83       	std	Z+2, r24	; 0x02
     570:	93 83       	std	Z+3, r25	; 0x03
	*gyds = (double)(gy-MPU6050_GYOFFSET)/MPU6050_GYGAIN;
     572:	69 85       	ldd	r22, Y+9	; 0x09
     574:	7a 85       	ldd	r23, Y+10	; 0x0a
     576:	88 27       	eor	r24, r24
     578:	77 fd       	sbrc	r23, 7
     57a:	80 95       	com	r24
     57c:	98 2f       	mov	r25, r24
     57e:	cf d5       	rcall	.+2974   	; 0x111e <__floatsisf>
     580:	20 e0       	ldi	r18, 0x00	; 0
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	43 e0       	ldi	r20, 0x03	; 3
     586:	53 e4       	ldi	r21, 0x43	; 67
     588:	2f d5       	rcall	.+2654   	; 0xfe8 <__divsf3>
     58a:	f2 01       	movw	r30, r4
     58c:	60 83       	st	Z, r22
     58e:	71 83       	std	Z+1, r23	; 0x01
     590:	82 83       	std	Z+2, r24	; 0x02
     592:	93 83       	std	Z+3, r25	; 0x03
	*gzds = (double)(gz-MPU6050_GZOFFSET)/MPU6050_GZGAIN;
     594:	6b 85       	ldd	r22, Y+11	; 0x0b
     596:	7c 85       	ldd	r23, Y+12	; 0x0c
     598:	88 27       	eor	r24, r24
     59a:	77 fd       	sbrc	r23, 7
     59c:	80 95       	com	r24
     59e:	98 2f       	mov	r25, r24
     5a0:	be d5       	rcall	.+2940   	; 0x111e <__floatsisf>
     5a2:	20 e0       	ldi	r18, 0x00	; 0
     5a4:	30 e0       	ldi	r19, 0x00	; 0
     5a6:	43 e0       	ldi	r20, 0x03	; 3
     5a8:	53 e4       	ldi	r21, 0x43	; 67
     5aa:	1e d5       	rcall	.+2620   	; 0xfe8 <__divsf3>
     5ac:	f1 01       	movw	r30, r2
     5ae:	60 83       	st	Z, r22
     5b0:	71 83       	std	Z+1, r23	; 0x01
     5b2:	82 83       	std	Z+2, r24	; 0x02
     5b4:	93 83       	std	Z+3, r25	; 0x03
    *azg = (double)(az)/MPU6050_AGAIN;
    *gxds = (double)(gx)/MPU6050_GGAIN;
	*gyds = (double)(gy)/MPU6050_GGAIN;
	*gzds = (double)(gz)/MPU6050_GGAIN;
	#endif
}
     5b6:	2c 96       	adiw	r28, 0x0c	; 12
     5b8:	0f b6       	in	r0, 0x3f	; 63
     5ba:	f8 94       	cli
     5bc:	de bf       	out	0x3e, r29	; 62
     5be:	0f be       	out	0x3f, r0	; 63
     5c0:	cd bf       	out	0x3d, r28	; 61
     5c2:	df 91       	pop	r29
     5c4:	cf 91       	pop	r28
     5c6:	1f 91       	pop	r17
     5c8:	0f 91       	pop	r16
     5ca:	ff 90       	pop	r15
     5cc:	ef 90       	pop	r14
     5ce:	df 90       	pop	r13
     5d0:	cf 90       	pop	r12
     5d2:	bf 90       	pop	r11
     5d4:	af 90       	pop	r10
     5d6:	9f 90       	pop	r9
     5d8:	8f 90       	pop	r8
     5da:	7f 90       	pop	r7
     5dc:	6f 90       	pop	r6
     5de:	5f 90       	pop	r5
     5e0:	4f 90       	pop	r4
     5e2:	3f 90       	pop	r3
     5e4:	2f 90       	pop	r2
     5e6:	08 95       	ret

000005e8 <uart_putchar>:
}

// USART Functions

static int uart_putchar(char c, FILE *stream)
{
     5e8:	cf 93       	push	r28
     5ea:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
     5ec:	8a 30       	cpi	r24, 0x0A	; 10
     5ee:	11 f4       	brne	.+4      	; 0x5f4 <uart_putchar+0xc>
     5f0:	8d e0       	ldi	r24, 0x0D	; 13
     5f2:	fa df       	rcall	.-12     	; 0x5e8 <uart_putchar>
	
	loop_until_bit_is_set(UCSR0A, UDRE0);
     5f4:	e0 ec       	ldi	r30, 0xC0	; 192
     5f6:	f0 e0       	ldi	r31, 0x00	; 0
     5f8:	90 81       	ld	r25, Z
     5fa:	95 ff       	sbrs	r25, 5
     5fc:	fd cf       	rjmp	.-6      	; 0x5f8 <uart_putchar+0x10>
	UDR0 = c;
     5fe:	c0 93 c6 00 	sts	0x00C6, r28
	
	return 0;
}
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	cf 91       	pop	r28
     608:	08 95       	ret

0000060a <main>:


int main (void)
{
		//USART Setup
	UBRR0H = MYUBRR >> 8;
     60a:	10 92 c5 00 	sts	0x00C5, r1
	UBRR0L = MYUBRR;
     60e:	8c e0       	ldi	r24, 0x0C	; 12
     610:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     614:	88 e1       	ldi	r24, 0x18	; 24
     616:	80 93 c1 00 	sts	0x00C1, r24
	stdout = &mystdout;                                          //Required for printf init
     61a:	84 e0       	ldi	r24, 0x04	; 4
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	90 93 9d 01 	sts	0x019D, r25
     622:	80 93 9c 01 	sts	0x019C, r24

	DDRD=0b00000010;                                             //Set Output Port for USART
     626:	82 e0       	ldi	r24, 0x02	; 2
     628:	8a b9       	out	0x0a, r24	; 10
	
	
		// Initialize TWI/I2C
	
	mpu6050_init();
     62a:	a1 de       	rcall	.-702    	; 0x36e <mpu6050_init>

		/// Activate Output Pins
	DDRC |= (1 << 3)|(1 << 2)|(1 << 1)|(1 << 0);                 //activate a clock measurement pin for debugging
     62c:	87 b1       	in	r24, 0x07	; 7
     62e:	8f 60       	ori	r24, 0x0F	; 15
     630:	87 b9       	out	0x07, r24	; 7

		//Port D Activat OC2B, OC0B, OC0A
	DDRD  |= (1 << PORTD3)|(1 << PORTD5)|(1 << PORTD6);          //set data direction 
     632:	8a b1       	in	r24, 0x0a	; 10
     634:	88 66       	ori	r24, 0x68	; 104
     636:	8a b9       	out	0x0a, r24	; 10
	
		//Port B Activate OC1A, OC2A
	DDRB  |= (1 >> PORTB1)|(1 << PORTB3);                        //set data direction 
     638:	23 9a       	sbi	0x04, 3	; 4



	PORTD |= (0 << PORTD5)|(0 << PORTD6);                        //activate pins
     63a:	8b b1       	in	r24, 0x0b	; 11
     63c:	8b b9       	out	0x0b, r24	; 11
	PORTB |= (0 >> PORTB1)|(0 << PORTB3);                        //activate pins
     63e:	85 b1       	in	r24, 0x05	; 5
     640:	85 b9       	out	0x05, r24	; 5
 

		// Interrupt Timer to Timer 1 (16-bit resolution)

	TCCR1A |= (1 << COM1A1);                                     // OC1n clears on compare match (non-inverting PWM mode)
     642:	e0 e8       	ldi	r30, 0x80	; 128
     644:	f0 e0       	ldi	r31, 0x00	; 0
     646:	80 81       	ld	r24, Z
     648:	80 68       	ori	r24, 0x80	; 128
     64a:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12);                                      // sets CTC mode to using OCR1nA as TOP of counter
     64c:	e1 e8       	ldi	r30, 0x81	; 129
     64e:	f0 e0       	ldi	r31, 0x00	; 0
     650:	80 81       	ld	r24, Z
     652:	88 60       	ori	r24, 0x08	; 8
     654:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1A);                                     // Enable CTC interrupt
     656:	ef e6       	ldi	r30, 0x6F	; 111
     658:	f0 e0       	ldi	r31, 0x00	; 0
     65a:	80 81       	ld	r24, Z
     65c:	82 60       	ori	r24, 0x02	; 2
     65e:	80 83       	st	Z, r24
	sei();                                                       // Enable global interrupts
     660:	78 94       	sei
	
	TCCR1B |=(1 << CS10)|(0 << CS11)|(1 << CS12);                // sets the prescaler on the clock frequency to 1024
     662:	e1 e8       	ldi	r30, 0x81	; 129
     664:	f0 e0       	ldi	r31, 0x00	; 0
     666:	80 81       	ld	r24, Z
     668:	85 60       	ori	r24, 0x05	; 5
     66a:	80 83       	st	Z, r24
	
		////  TARGET FREQUENCY CALCULATION ////////////////////
		////  Target Frequency =  F CPU/(2*Prescale*(OCR1A+1)) 
	
	OCR1A = 80;                                                  //This sets frequency of interrupt to about 6 Hz
     66c:	80 e5       	ldi	r24, 0x50	; 80
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	90 93 89 00 	sts	0x0089, r25
     674:	80 93 88 00 	sts	0x0088, r24

	// PWM Timer set to Timer 0 (8-bit resolution)  ** Timer 0 and Timer 1 share the set prescale value
	
	TCCR0A |= (1 << COM0A1)|(0 << COM0A0)|(1 << COM0B1)|(0 << COM0B0)|(1 << WGM00)|(1 << WGM01);   //Setting up Fast PWM with OCR0A and OCROB as compare registers
     678:	84 b5       	in	r24, 0x24	; 36
     67a:	83 6a       	ori	r24, 0xA3	; 163
     67c:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (0 << WGM02)|(1 << CS02)|(0 << CS01)|(0 << CS00);                                    // Defines Fast PWM and activates timer
     67e:	85 b5       	in	r24, 0x25	; 37
     680:	84 60       	ori	r24, 0x04	; 4
     682:	85 bd       	out	0x25, r24	; 37
     684:	ff cf       	rjmp	.-2      	; 0x684 <main+0x7a>

00000686 <__vector_11>:

	}
}

ISR(TIMER1_COMPA_vect)                                      //runs an interrupt comparing timer to OCR1A
{
     686:	1f 92       	push	r1
     688:	0f 92       	push	r0
     68a:	0f b6       	in	r0, 0x3f	; 63
     68c:	0f 92       	push	r0
     68e:	11 24       	eor	r1, r1
     690:	4f 92       	push	r4
     692:	5f 92       	push	r5
     694:	6f 92       	push	r6
     696:	7f 92       	push	r7
     698:	8f 92       	push	r8
     69a:	9f 92       	push	r9
     69c:	af 92       	push	r10
     69e:	bf 92       	push	r11
     6a0:	cf 92       	push	r12
     6a2:	df 92       	push	r13
     6a4:	ef 92       	push	r14
     6a6:	ff 92       	push	r15
     6a8:	0f 93       	push	r16
     6aa:	1f 93       	push	r17
     6ac:	2f 93       	push	r18
     6ae:	3f 93       	push	r19
     6b0:	4f 93       	push	r20
     6b2:	5f 93       	push	r21
     6b4:	6f 93       	push	r22
     6b6:	7f 93       	push	r23
     6b8:	8f 93       	push	r24
     6ba:	9f 93       	push	r25
     6bc:	af 93       	push	r26
     6be:	bf 93       	push	r27
     6c0:	ef 93       	push	r30
     6c2:	ff 93       	push	r31
     6c4:	cf 93       	push	r28
     6c6:	df 93       	push	r29
     6c8:	cd b7       	in	r28, 0x3d	; 61
     6ca:	de b7       	in	r29, 0x3e	; 62
     6cc:	68 97       	sbiw	r28, 0x18	; 24
     6ce:	de bf       	out	0x3e, r29	; 62
     6d0:	cd bf       	out	0x3d, r28	; 61
	PORTC ^= (1 << 0);                                    // Debug toggle switch for interupt frequency check
     6d2:	98 b1       	in	r25, 0x08	; 8
     6d4:	81 e0       	ldi	r24, 0x01	; 1
     6d6:	89 27       	eor	r24, r25
     6d8:	88 b9       	out	0x08, r24	; 8
	
	mpu6050_getConvData(&aXg,&aYg,&aZg,&gXds,&gYds,&gZds);  //reads in accel and gyro data and apply sensitivity conversion and stores in addressed variables
     6da:	0f 2e       	mov	r0, r31
     6dc:	fa e8       	ldi	r31, 0x8A	; 138
     6de:	ef 2e       	mov	r14, r31
     6e0:	f1 e0       	ldi	r31, 0x01	; 1
     6e2:	ff 2e       	mov	r15, r31
     6e4:	f0 2d       	mov	r31, r0
     6e6:	04 e7       	ldi	r16, 0x74	; 116
     6e8:	11 e0       	ldi	r17, 0x01	; 1
     6ea:	20 e7       	ldi	r18, 0x70	; 112
     6ec:	31 e0       	ldi	r19, 0x01	; 1
     6ee:	46 e5       	ldi	r20, 0x56	; 86
     6f0:	51 e0       	ldi	r21, 0x01	; 1
     6f2:	62 e6       	ldi	r22, 0x62	; 98
     6f4:	71 e0       	ldi	r23, 0x01	; 1
     6f6:	8e e4       	ldi	r24, 0x4E	; 78
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	ba de       	rcall	.-652    	; 0x470 <mpu6050_getConvData>
	
			//printf("   %f;   %f;   %f;\n   %f;   %f;   %f;\n\n",aXg,aYg,aZg,gXds,gYds,gZds);
			//_delay_ms(150);
	
	// Integrating angular velocity to get the angle based on gryo data
	Xgyro = gXds*DT;              
     6fc:	60 91 26 01 	lds	r22, 0x0126
     700:	70 91 27 01 	lds	r23, 0x0127
     704:	88 27       	eor	r24, r24
     706:	77 fd       	sbrc	r23, 7
     708:	80 95       	com	r24
     70a:	98 2f       	mov	r25, r24
     70c:	08 d5       	rcall	.+2576   	; 0x111e <__floatsisf>
     70e:	4b 01       	movw	r8, r22
     710:	5c 01       	movw	r10, r24
     712:	80 91 70 01 	lds	r24, 0x0170
     716:	90 91 71 01 	lds	r25, 0x0171
     71a:	a0 91 72 01 	lds	r26, 0x0172
     71e:	b0 91 73 01 	lds	r27, 0x0173
     722:	8d 8b       	std	Y+21, r24	; 0x15
     724:	9e 8b       	std	Y+22, r25	; 0x16
     726:	af 8b       	std	Y+23, r26	; 0x17
     728:	b8 8f       	std	Y+24, r27	; 0x18
     72a:	9c 01       	movw	r18, r24
     72c:	ad 01       	movw	r20, r26
     72e:	c5 01       	movw	r24, r10
     730:	b4 01       	movw	r22, r8
     732:	d5 d5       	rcall	.+2986   	; 0x12de <__mulsf3>
     734:	6b 01       	movw	r12, r22
     736:	7c 01       	movw	r14, r24
     738:	60 93 7c 01 	sts	0x017C, r22
     73c:	70 93 7d 01 	sts	0x017D, r23
     740:	80 93 7e 01 	sts	0x017E, r24
     744:	90 93 7f 01 	sts	0x017F, r25
	Ygyro = gYds*DT;
     748:	20 91 74 01 	lds	r18, 0x0174
     74c:	30 91 75 01 	lds	r19, 0x0175
     750:	40 91 76 01 	lds	r20, 0x0176
     754:	50 91 77 01 	lds	r21, 0x0177
     758:	c5 01       	movw	r24, r10
     75a:	b4 01       	movw	r22, r8
     75c:	c0 d5       	rcall	.+2944   	; 0x12de <__mulsf3>
     75e:	6d 83       	std	Y+5, r22	; 0x05
     760:	7e 83       	std	Y+6, r23	; 0x06
     762:	8f 83       	std	Y+7, r24	; 0x07
     764:	98 87       	std	Y+8, r25	; 0x08
     766:	60 93 78 01 	sts	0x0178, r22
     76a:	70 93 79 01 	sts	0x0179, r23
     76e:	80 93 7a 01 	sts	0x017A, r24
     772:	90 93 7b 01 	sts	0x017B, r25
	Zgyro = gZds*DT;
     776:	20 91 8a 01 	lds	r18, 0x018A
     77a:	30 91 8b 01 	lds	r19, 0x018B
     77e:	40 91 8c 01 	lds	r20, 0x018C
     782:	50 91 8d 01 	lds	r21, 0x018D
     786:	c5 01       	movw	r24, r10
     788:	b4 01       	movw	r22, r8
     78a:	a9 d5       	rcall	.+2898   	; 0x12de <__mulsf3>
     78c:	69 87       	std	Y+9, r22	; 0x09
     78e:	7a 87       	std	Y+10, r23	; 0x0a
     790:	8b 87       	std	Y+11, r24	; 0x0b
     792:	9c 87       	std	Y+12, r25	; 0x0c
     794:	60 93 6a 01 	sts	0x016A, r22
     798:	70 93 6b 01 	sts	0x016B, r23
     79c:	80 93 6c 01 	sts	0x016C, r24
     7a0:	90 93 6d 01 	sts	0x016D, r25
	
				//printf("\nangle X %f;  gXds %f;  Xacc %f;\n",X,gXds,Xacc);
	
	// Finding the angle based on accel data
	Xacc = atan2f(aYg,aZg)*180/M_PI;
     7a4:	40 90 56 01 	lds	r4, 0x0156
     7a8:	50 90 57 01 	lds	r5, 0x0157
     7ac:	60 90 58 01 	lds	r6, 0x0158
     7b0:	70 90 59 01 	lds	r7, 0x0159
     7b4:	80 91 62 01 	lds	r24, 0x0162
     7b8:	90 91 63 01 	lds	r25, 0x0163
     7bc:	a0 91 64 01 	lds	r26, 0x0164
     7c0:	b0 91 65 01 	lds	r27, 0x0165
     7c4:	89 83       	std	Y+1, r24	; 0x01
     7c6:	9a 83       	std	Y+2, r25	; 0x02
     7c8:	ab 83       	std	Y+3, r26	; 0x03
     7ca:	bc 83       	std	Y+4, r27	; 0x04
     7cc:	a3 01       	movw	r20, r6
     7ce:	92 01       	movw	r18, r4
     7d0:	bc 01       	movw	r22, r24
     7d2:	cd 01       	movw	r24, r26
     7d4:	b2 d3       	rcall	.+1892   	; 0xf3a <atan2>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	44 e3       	ldi	r20, 0x34	; 52
     7dc:	53 e4       	ldi	r21, 0x43	; 67
     7de:	7f d5       	rcall	.+2814   	; 0x12de <__mulsf3>
     7e0:	2b ed       	ldi	r18, 0xDB	; 219
     7e2:	3f e0       	ldi	r19, 0x0F	; 15
     7e4:	49 e4       	ldi	r20, 0x49	; 73
     7e6:	50 e4       	ldi	r21, 0x40	; 64
     7e8:	ff d3       	rcall	.+2046   	; 0xfe8 <__divsf3>
     7ea:	6d 87       	std	Y+13, r22	; 0x0d
     7ec:	7e 87       	std	Y+14, r23	; 0x0e
     7ee:	8f 87       	std	Y+15, r24	; 0x0f
     7f0:	98 8b       	std	Y+16, r25	; 0x10
     7f2:	60 93 96 01 	sts	0x0196, r22
     7f6:	70 93 97 01 	sts	0x0197, r23
     7fa:	80 93 98 01 	sts	0x0198, r24
     7fe:	90 93 99 01 	sts	0x0199, r25
	Yacc = atan2f(aXg,aZg)*180/M_PI;
     802:	80 90 4e 01 	lds	r8, 0x014E
     806:	90 90 4f 01 	lds	r9, 0x014F
     80a:	a0 90 50 01 	lds	r10, 0x0150
     80e:	b0 90 51 01 	lds	r11, 0x0151
     812:	a3 01       	movw	r20, r6
     814:	92 01       	movw	r18, r4
     816:	c5 01       	movw	r24, r10
     818:	b4 01       	movw	r22, r8
     81a:	8f d3       	rcall	.+1822   	; 0xf3a <atan2>
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	44 e3       	ldi	r20, 0x34	; 52
     822:	53 e4       	ldi	r21, 0x43	; 67
     824:	5c d5       	rcall	.+2744   	; 0x12de <__mulsf3>
     826:	2b ed       	ldi	r18, 0xDB	; 219
     828:	3f e0       	ldi	r19, 0x0F	; 15
     82a:	49 e4       	ldi	r20, 0x49	; 73
     82c:	50 e4       	ldi	r21, 0x40	; 64
     82e:	dc d3       	rcall	.+1976   	; 0xfe8 <__divsf3>
     830:	69 8b       	std	Y+17, r22	; 0x11
     832:	7a 8b       	std	Y+18, r23	; 0x12
     834:	8b 8b       	std	Y+19, r24	; 0x13
     836:	9c 8b       	std	Y+20, r25	; 0x14
     838:	60 93 66 01 	sts	0x0166, r22
     83c:	70 93 67 01 	sts	0x0167, r23
     840:	80 93 68 01 	sts	0x0168, r24
     844:	90 93 69 01 	sts	0x0169, r25
	Zacc = atan2f(aXg,aYg)*180/M_PI;
     848:	29 81       	ldd	r18, Y+1	; 0x01
     84a:	3a 81       	ldd	r19, Y+2	; 0x02
     84c:	4b 81       	ldd	r20, Y+3	; 0x03
     84e:	5c 81       	ldd	r21, Y+4	; 0x04
     850:	c5 01       	movw	r24, r10
     852:	b4 01       	movw	r22, r8
     854:	72 d3       	rcall	.+1764   	; 0xf3a <atan2>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	44 e3       	ldi	r20, 0x34	; 52
     85c:	53 e4       	ldi	r21, 0x43	; 67
     85e:	3f d5       	rcall	.+2686   	; 0x12de <__mulsf3>
     860:	2b ed       	ldi	r18, 0xDB	; 219
     862:	3f e0       	ldi	r19, 0x0F	; 15
     864:	49 e4       	ldi	r20, 0x49	; 73
     866:	50 e4       	ldi	r21, 0x40	; 64
     868:	bf d3       	rcall	.+1918   	; 0xfe8 <__divsf3>
     86a:	69 83       	std	Y+1, r22	; 0x01
     86c:	7a 83       	std	Y+2, r23	; 0x02
     86e:	8b 83       	std	Y+3, r24	; 0x03
     870:	9c 83       	std	Y+4, r25	; 0x04
     872:	60 93 8e 01 	sts	0x018E, r22
     876:	70 93 8f 01 	sts	0x018F, r23
     87a:	80 93 90 01 	sts	0x0190, r24
     87e:	90 93 91 01 	sts	0x0191, r25
	
	// Complimentary Fitler Equation   ** this is important to remove drift that is a symptom of only using the gyro for angle calculations
	AngleX = A * (AngleX + Xgyro) + (1-A) * Xacc;
     882:	60 90 28 01 	lds	r6, 0x0128
     886:	70 90 29 01 	lds	r7, 0x0129
     88a:	b3 01       	movw	r22, r6
     88c:	88 27       	eor	r24, r24
     88e:	77 fd       	sbrc	r23, 7
     890:	80 95       	com	r24
     892:	98 2f       	mov	r25, r24
     894:	44 d4       	rcall	.+2184   	; 0x111e <__floatsisf>
     896:	4b 01       	movw	r8, r22
     898:	5c 01       	movw	r10, r24
     89a:	61 e0       	ldi	r22, 0x01	; 1
     89c:	70 e0       	ldi	r23, 0x00	; 0
     89e:	66 19       	sub	r22, r6
     8a0:	77 09       	sbc	r23, r7
     8a2:	88 27       	eor	r24, r24
     8a4:	77 fd       	sbrc	r23, 7
     8a6:	80 95       	com	r24
     8a8:	98 2f       	mov	r25, r24
     8aa:	39 d4       	rcall	.+2162   	; 0x111e <__floatsisf>
     8ac:	2b 01       	movw	r4, r22
     8ae:	3c 01       	movw	r6, r24
     8b0:	20 91 34 01 	lds	r18, 0x0134
     8b4:	30 91 35 01 	lds	r19, 0x0135
     8b8:	40 91 36 01 	lds	r20, 0x0136
     8bc:	50 91 37 01 	lds	r21, 0x0137
     8c0:	c7 01       	movw	r24, r14
     8c2:	b6 01       	movw	r22, r12
     8c4:	c7 d2       	rcall	.+1422   	; 0xe54 <__addsf3>
     8c6:	9b 01       	movw	r18, r22
     8c8:	ac 01       	movw	r20, r24
     8ca:	c5 01       	movw	r24, r10
     8cc:	b4 01       	movw	r22, r8
     8ce:	07 d5       	rcall	.+2574   	; 0x12de <__mulsf3>
     8d0:	6b 01       	movw	r12, r22
     8d2:	7c 01       	movw	r14, r24
     8d4:	a3 01       	movw	r20, r6
     8d6:	92 01       	movw	r18, r4
     8d8:	6d 85       	ldd	r22, Y+13	; 0x0d
     8da:	7e 85       	ldd	r23, Y+14	; 0x0e
     8dc:	8f 85       	ldd	r24, Y+15	; 0x0f
     8de:	98 89       	ldd	r25, Y+16	; 0x10
     8e0:	fe d4       	rcall	.+2556   	; 0x12de <__mulsf3>
     8e2:	9b 01       	movw	r18, r22
     8e4:	ac 01       	movw	r20, r24
     8e6:	c7 01       	movw	r24, r14
     8e8:	b6 01       	movw	r22, r12
     8ea:	b4 d2       	rcall	.+1384   	; 0xe54 <__addsf3>
     8ec:	6b 01       	movw	r12, r22
     8ee:	7c 01       	movw	r14, r24
     8f0:	60 93 34 01 	sts	0x0134, r22
     8f4:	70 93 35 01 	sts	0x0135, r23
     8f8:	80 93 36 01 	sts	0x0136, r24
     8fc:	90 93 37 01 	sts	0x0137, r25
	AngleY = A * (AngleY + Ygyro) + (1-A) * Yacc;
     900:	20 91 30 01 	lds	r18, 0x0130
     904:	30 91 31 01 	lds	r19, 0x0131
     908:	40 91 32 01 	lds	r20, 0x0132
     90c:	50 91 33 01 	lds	r21, 0x0133
     910:	6d 81       	ldd	r22, Y+5	; 0x05
     912:	7e 81       	ldd	r23, Y+6	; 0x06
     914:	8f 81       	ldd	r24, Y+7	; 0x07
     916:	98 85       	ldd	r25, Y+8	; 0x08
     918:	9d d2       	rcall	.+1338   	; 0xe54 <__addsf3>
     91a:	9b 01       	movw	r18, r22
     91c:	ac 01       	movw	r20, r24
     91e:	c5 01       	movw	r24, r10
     920:	b4 01       	movw	r22, r8
     922:	dd d4       	rcall	.+2490   	; 0x12de <__mulsf3>
     924:	6d 83       	std	Y+5, r22	; 0x05
     926:	7e 83       	std	Y+6, r23	; 0x06
     928:	8f 83       	std	Y+7, r24	; 0x07
     92a:	98 87       	std	Y+8, r25	; 0x08
     92c:	a3 01       	movw	r20, r6
     92e:	92 01       	movw	r18, r4
     930:	69 89       	ldd	r22, Y+17	; 0x11
     932:	7a 89       	ldd	r23, Y+18	; 0x12
     934:	8b 89       	ldd	r24, Y+19	; 0x13
     936:	9c 89       	ldd	r25, Y+20	; 0x14
     938:	d2 d4       	rcall	.+2468   	; 0x12de <__mulsf3>
     93a:	9b 01       	movw	r18, r22
     93c:	ac 01       	movw	r20, r24
     93e:	6d 81       	ldd	r22, Y+5	; 0x05
     940:	7e 81       	ldd	r23, Y+6	; 0x06
     942:	8f 81       	ldd	r24, Y+7	; 0x07
     944:	98 85       	ldd	r25, Y+8	; 0x08
     946:	86 d2       	rcall	.+1292   	; 0xe54 <__addsf3>
     948:	60 93 30 01 	sts	0x0130, r22
     94c:	70 93 31 01 	sts	0x0131, r23
     950:	80 93 32 01 	sts	0x0132, r24
     954:	90 93 33 01 	sts	0x0133, r25
	AngleZ = A * (AngleZ + Zgyro) + (1-A) * Zacc;
     958:	20 91 2c 01 	lds	r18, 0x012C
     95c:	30 91 2d 01 	lds	r19, 0x012D
     960:	40 91 2e 01 	lds	r20, 0x012E
     964:	50 91 2f 01 	lds	r21, 0x012F
     968:	69 85       	ldd	r22, Y+9	; 0x09
     96a:	7a 85       	ldd	r23, Y+10	; 0x0a
     96c:	8b 85       	ldd	r24, Y+11	; 0x0b
     96e:	9c 85       	ldd	r25, Y+12	; 0x0c
     970:	71 d2       	rcall	.+1250   	; 0xe54 <__addsf3>
     972:	9b 01       	movw	r18, r22
     974:	ac 01       	movw	r20, r24
     976:	c5 01       	movw	r24, r10
     978:	b4 01       	movw	r22, r8
     97a:	b1 d4       	rcall	.+2402   	; 0x12de <__mulsf3>
     97c:	4b 01       	movw	r8, r22
     97e:	5c 01       	movw	r10, r24
     980:	a3 01       	movw	r20, r6
     982:	92 01       	movw	r18, r4
     984:	69 81       	ldd	r22, Y+1	; 0x01
     986:	7a 81       	ldd	r23, Y+2	; 0x02
     988:	8b 81       	ldd	r24, Y+3	; 0x03
     98a:	9c 81       	ldd	r25, Y+4	; 0x04
     98c:	a8 d4       	rcall	.+2384   	; 0x12de <__mulsf3>
     98e:	9b 01       	movw	r18, r22
     990:	ac 01       	movw	r20, r24
     992:	c5 01       	movw	r24, r10
     994:	b4 01       	movw	r22, r8
     996:	5e d2       	rcall	.+1212   	; 0xe54 <__addsf3>
     998:	60 93 2c 01 	sts	0x012C, r22
     99c:	70 93 2d 01 	sts	0x012D, r23
     9a0:	80 93 2e 01 	sts	0x012E, r24
     9a4:	90 93 2f 01 	sts	0x012F, r25
	
	ErrorX = AngleX; 
     9a8:	c0 92 46 01 	sts	0x0146, r12
     9ac:	d0 92 47 01 	sts	0x0147, r13
     9b0:	e0 92 48 01 	sts	0x0148, r14
     9b4:	f0 92 49 01 	sts	0x0149, r15
	//ControlX = Kp*ErrorX;
	//
	ErrorX_m1 = ErrorX;
     9b8:	c0 92 5e 01 	sts	0x015E, r12
     9bc:	d0 92 5f 01 	sts	0x015F, r13
     9c0:	e0 92 60 01 	sts	0x0160, r14
     9c4:	f0 92 61 01 	sts	0x0161, r15
	
	ControlX_m1 = ControlX;
     9c8:	80 91 4a 01 	lds	r24, 0x014A
     9cc:	90 91 4b 01 	lds	r25, 0x014B
     9d0:	a0 91 4c 01 	lds	r26, 0x014C
     9d4:	b0 91 4d 01 	lds	r27, 0x014D
     9d8:	80 93 52 01 	sts	0x0152, r24
     9dc:	90 93 53 01 	sts	0x0153, r25
     9e0:	a0 93 54 01 	sts	0x0154, r26
     9e4:	b0 93 55 01 	sts	0x0155, r27
	
				
	
	// Determining with solenoid to actuate and the duty cycle to use.
	if (AngleX < -165 && -179.6 < AngleX )          //The system can only control from 1.4 to 8 degrees
     9e8:	20 e0       	ldi	r18, 0x00	; 0
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	45 e2       	ldi	r20, 0x25	; 37
     9ee:	53 ec       	ldi	r21, 0xC3	; 195
     9f0:	c7 01       	movw	r24, r14
     9f2:	b6 01       	movw	r22, r12
     9f4:	f5 d2       	rcall	.+1514   	; 0xfe0 <__cmpsf2>
     9f6:	88 23       	and	r24, r24
     9f8:	0c f0       	brlt	.+2      	; 0x9fc <__vector_11+0x376>
     9fa:	a4 c0       	rjmp	.+328    	; 0xb44 <__vector_11+0x4be>
     9fc:	2a e9       	ldi	r18, 0x9A	; 154
     9fe:	39 e9       	ldi	r19, 0x99	; 153
     a00:	43 e3       	ldi	r20, 0x33	; 51
     a02:	53 ec       	ldi	r21, 0xC3	; 195
     a04:	c7 01       	movw	r24, r14
     a06:	b6 01       	movw	r22, r12
     a08:	5f d4       	rcall	.+2238   	; 0x12c8 <__gesf2>
     a0a:	18 16       	cp	r1, r24
     a0c:	0c f0       	brlt	.+2      	; 0xa10 <__vector_11+0x38a>
     a0e:	9a c0       	rjmp	.+308    	; 0xb44 <__vector_11+0x4be>
	{
		AngleX_shift = 1*(AngleX + 180);
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	44 e3       	ldi	r20, 0x34	; 52
     a16:	53 e4       	ldi	r21, 0x43	; 67
     a18:	c7 01       	movw	r24, r14
     a1a:	b6 01       	movw	r22, r12
     a1c:	1b d2       	rcall	.+1078   	; 0xe54 <__addsf3>
     a1e:	6b 01       	movw	r12, r22
     a20:	7c 01       	movw	r14, r24
     a22:	60 93 80 01 	sts	0x0180, r22
     a26:	70 93 81 01 	sts	0x0181, r23
     a2a:	80 93 82 01 	sts	0x0182, r24
     a2e:	90 93 83 01 	sts	0x0183, r25
		ControlX = K1*gXds*M_PI/180 + K2*AngleX_shift*M_PI/180;
     a32:	60 91 02 01 	lds	r22, 0x0102
     a36:	70 91 03 01 	lds	r23, 0x0103
     a3a:	88 27       	eor	r24, r24
     a3c:	77 fd       	sbrc	r23, 7
     a3e:	80 95       	com	r24
     a40:	98 2f       	mov	r25, r24
     a42:	6d d3       	rcall	.+1754   	; 0x111e <__floatsisf>
     a44:	9b 01       	movw	r18, r22
     a46:	ac 01       	movw	r20, r24
     a48:	6d 89       	ldd	r22, Y+21	; 0x15
     a4a:	7e 89       	ldd	r23, Y+22	; 0x16
     a4c:	8f 89       	ldd	r24, Y+23	; 0x17
     a4e:	98 8d       	ldd	r25, Y+24	; 0x18
     a50:	46 d4       	rcall	.+2188   	; 0x12de <__mulsf3>
     a52:	2b ed       	ldi	r18, 0xDB	; 219
     a54:	3f e0       	ldi	r19, 0x0F	; 15
     a56:	49 e4       	ldi	r20, 0x49	; 73
     a58:	50 e4       	ldi	r21, 0x40	; 64
     a5a:	41 d4       	rcall	.+2178   	; 0x12de <__mulsf3>
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	44 e3       	ldi	r20, 0x34	; 52
     a62:	53 e4       	ldi	r21, 0x43	; 67
     a64:	c1 d2       	rcall	.+1410   	; 0xfe8 <__divsf3>
     a66:	4b 01       	movw	r8, r22
     a68:	5c 01       	movw	r10, r24
     a6a:	60 91 00 01 	lds	r22, 0x0100
     a6e:	70 91 01 01 	lds	r23, 0x0101
     a72:	88 27       	eor	r24, r24
     a74:	77 fd       	sbrc	r23, 7
     a76:	80 95       	com	r24
     a78:	98 2f       	mov	r25, r24
     a7a:	51 d3       	rcall	.+1698   	; 0x111e <__floatsisf>
     a7c:	9b 01       	movw	r18, r22
     a7e:	ac 01       	movw	r20, r24
     a80:	c7 01       	movw	r24, r14
     a82:	b6 01       	movw	r22, r12
     a84:	2c d4       	rcall	.+2136   	; 0x12de <__mulsf3>
     a86:	2b ed       	ldi	r18, 0xDB	; 219
     a88:	3f e0       	ldi	r19, 0x0F	; 15
     a8a:	49 e4       	ldi	r20, 0x49	; 73
     a8c:	50 e4       	ldi	r21, 0x40	; 64
     a8e:	27 d4       	rcall	.+2126   	; 0x12de <__mulsf3>
     a90:	20 e0       	ldi	r18, 0x00	; 0
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	44 e3       	ldi	r20, 0x34	; 52
     a96:	53 e4       	ldi	r21, 0x43	; 67
     a98:	a7 d2       	rcall	.+1358   	; 0xfe8 <__divsf3>
     a9a:	9b 01       	movw	r18, r22
     a9c:	ac 01       	movw	r20, r24
     a9e:	c5 01       	movw	r24, r10
     aa0:	b4 01       	movw	r22, r8
     aa2:	d8 d1       	rcall	.+944    	; 0xe54 <__addsf3>
     aa4:	6b 01       	movw	r12, r22
     aa6:	7c 01       	movw	r14, r24
     aa8:	60 93 4a 01 	sts	0x014A, r22
     aac:	70 93 4b 01 	sts	0x014B, r23
     ab0:	80 93 4c 01 	sts	0x014C, r24
     ab4:	90 93 4d 01 	sts	0x014D, r25
		//printf(" %f; %f; %f; \n\n",ControlX, gXds, AngleX_shift);
		
		if (1 < ControlX && ControlX < 5.5 ){ 
     ab8:	20 e0       	ldi	r18, 0x00	; 0
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	40 e8       	ldi	r20, 0x80	; 128
     abe:	5f e3       	ldi	r21, 0x3F	; 63
     ac0:	03 d4       	rcall	.+2054   	; 0x12c8 <__gesf2>
     ac2:	18 16       	cp	r1, r24
     ac4:	0c f0       	brlt	.+2      	; 0xac8 <__vector_11+0x442>
     ac6:	ed c0       	rjmp	.+474    	; 0xca2 <__vector_11+0x61c>
     ac8:	20 e0       	ldi	r18, 0x00	; 0
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	40 eb       	ldi	r20, 0xB0	; 176
     ace:	50 e4       	ldi	r21, 0x40	; 64
     ad0:	c7 01       	movw	r24, r14
     ad2:	b6 01       	movw	r22, r12
     ad4:	85 d2       	rcall	.+1290   	; 0xfe0 <__cmpsf2>
     ad6:	88 23       	and	r24, r24
     ad8:	0c f0       	brlt	.+2      	; 0xadc <__vector_11+0x456>
     ada:	e3 c0       	rjmp	.+454    	; 0xca2 <__vector_11+0x61c>
		PWM =( 0.6/4.5*ControlX + .06667)*256; //Relationship based off experimental data of duty cycle and thrust output
     adc:	29 e8       	ldi	r18, 0x89	; 137
     ade:	38 e8       	ldi	r19, 0x88	; 136
     ae0:	48 e0       	ldi	r20, 0x08	; 8
     ae2:	5e e3       	ldi	r21, 0x3E	; 62
     ae4:	c7 01       	movw	r24, r14
     ae6:	b6 01       	movw	r22, r12
     ae8:	fa d3       	rcall	.+2036   	; 0x12de <__mulsf3>
     aea:	28 e4       	ldi	r18, 0x48	; 72
     aec:	3a e8       	ldi	r19, 0x8A	; 138
     aee:	48 e8       	ldi	r20, 0x88	; 136
     af0:	5d e3       	ldi	r21, 0x3D	; 61
     af2:	b0 d1       	rcall	.+864    	; 0xe54 <__addsf3>
     af4:	20 e0       	ldi	r18, 0x00	; 0
     af6:	30 e0       	ldi	r19, 0x00	; 0
     af8:	40 e8       	ldi	r20, 0x80	; 128
     afa:	53 e4       	ldi	r21, 0x43	; 67
     afc:	f0 d3       	rcall	.+2016   	; 0x12de <__mulsf3>
     afe:	dc d2       	rcall	.+1464   	; 0x10b8 <__fixsfsi>
     b00:	60 93 2a 01 	sts	0x012A, r22
     b04:	70 93 2b 01 	sts	0x012B, r23
		OCR0A = PWM;
     b08:	67 bd       	out	0x27, r22	; 39
		printf("%d;  right     %f;\n", PWM,ControlX);
     b0a:	80 91 4d 01 	lds	r24, 0x014D
     b0e:	8f 93       	push	r24
     b10:	80 91 4c 01 	lds	r24, 0x014C
     b14:	8f 93       	push	r24
     b16:	80 91 4b 01 	lds	r24, 0x014B
     b1a:	8f 93       	push	r24
     b1c:	80 91 4a 01 	lds	r24, 0x014A
     b20:	8f 93       	push	r24
     b22:	80 91 2b 01 	lds	r24, 0x012B
     b26:	8f 93       	push	r24
     b28:	80 91 2a 01 	lds	r24, 0x012A
     b2c:	8f 93       	push	r24
     b2e:	82 e1       	ldi	r24, 0x12	; 18
     b30:	91 e0       	ldi	r25, 0x01	; 1
     b32:	9f 93       	push	r25
     b34:	8f 93       	push	r24
     b36:	ec d8       	rcall	.-3624   	; 0xfffffd10 <__eeprom_end+0xff7efd10>
		
		return;
     b38:	0f b6       	in	r0, 0x3f	; 63
     b3a:	f8 94       	cli
     b3c:	de bf       	out	0x3e, r29	; 62
     b3e:	0f be       	out	0x3f, r0	; 63
     b40:	cd bf       	out	0x3d, r28	; 61
     b42:	af c0       	rjmp	.+350    	; 0xca2 <__vector_11+0x61c>
			return;
		}
	}
	
	
		else if(165 < AngleX && AngleX < 179.6)
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	45 e2       	ldi	r20, 0x25	; 37
     b4a:	53 e4       	ldi	r21, 0x43	; 67
     b4c:	c7 01       	movw	r24, r14
     b4e:	b6 01       	movw	r22, r12
     b50:	bb d3       	rcall	.+1910   	; 0x12c8 <__gesf2>
     b52:	18 16       	cp	r1, r24
     b54:	0c f0       	brlt	.+2      	; 0xb58 <__vector_11+0x4d2>
     b56:	a3 c0       	rjmp	.+326    	; 0xc9e <__vector_11+0x618>
     b58:	2a e9       	ldi	r18, 0x9A	; 154
     b5a:	39 e9       	ldi	r19, 0x99	; 153
     b5c:	43 e3       	ldi	r20, 0x33	; 51
     b5e:	53 e4       	ldi	r21, 0x43	; 67
     b60:	c7 01       	movw	r24, r14
     b62:	b6 01       	movw	r22, r12
     b64:	3d d2       	rcall	.+1146   	; 0xfe0 <__cmpsf2>
     b66:	88 23       	and	r24, r24
     b68:	0c f0       	brlt	.+2      	; 0xb6c <__vector_11+0x4e6>
     b6a:	99 c0       	rjmp	.+306    	; 0xc9e <__vector_11+0x618>
		{
			AngleX_shift = 180 - AngleX;
     b6c:	a7 01       	movw	r20, r14
     b6e:	96 01       	movw	r18, r12
     b70:	60 e0       	ldi	r22, 0x00	; 0
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	84 e3       	ldi	r24, 0x34	; 52
     b76:	93 e4       	ldi	r25, 0x43	; 67
     b78:	6c d1       	rcall	.+728    	; 0xe52 <__subsf3>
     b7a:	6b 01       	movw	r12, r22
     b7c:	7c 01       	movw	r14, r24
     b7e:	60 93 80 01 	sts	0x0180, r22
     b82:	70 93 81 01 	sts	0x0181, r23
     b86:	80 93 82 01 	sts	0x0182, r24
     b8a:	90 93 83 01 	sts	0x0183, r25
			ControlX = K1*gXds*M_PI/180 + K2*AngleX_shift*M_PI/180;
     b8e:	60 91 02 01 	lds	r22, 0x0102
     b92:	70 91 03 01 	lds	r23, 0x0103
     b96:	88 27       	eor	r24, r24
     b98:	77 fd       	sbrc	r23, 7
     b9a:	80 95       	com	r24
     b9c:	98 2f       	mov	r25, r24
     b9e:	bf d2       	rcall	.+1406   	; 0x111e <__floatsisf>
     ba0:	9b 01       	movw	r18, r22
     ba2:	ac 01       	movw	r20, r24
     ba4:	6d 89       	ldd	r22, Y+21	; 0x15
     ba6:	7e 89       	ldd	r23, Y+22	; 0x16
     ba8:	8f 89       	ldd	r24, Y+23	; 0x17
     baa:	98 8d       	ldd	r25, Y+24	; 0x18
     bac:	98 d3       	rcall	.+1840   	; 0x12de <__mulsf3>
     bae:	2b ed       	ldi	r18, 0xDB	; 219
     bb0:	3f e0       	ldi	r19, 0x0F	; 15
     bb2:	49 e4       	ldi	r20, 0x49	; 73
     bb4:	50 e4       	ldi	r21, 0x40	; 64
     bb6:	93 d3       	rcall	.+1830   	; 0x12de <__mulsf3>
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	44 e3       	ldi	r20, 0x34	; 52
     bbe:	53 e4       	ldi	r21, 0x43	; 67
     bc0:	13 d2       	rcall	.+1062   	; 0xfe8 <__divsf3>
     bc2:	4b 01       	movw	r8, r22
     bc4:	5c 01       	movw	r10, r24
     bc6:	60 91 00 01 	lds	r22, 0x0100
     bca:	70 91 01 01 	lds	r23, 0x0101
     bce:	88 27       	eor	r24, r24
     bd0:	77 fd       	sbrc	r23, 7
     bd2:	80 95       	com	r24
     bd4:	98 2f       	mov	r25, r24
     bd6:	a3 d2       	rcall	.+1350   	; 0x111e <__floatsisf>
     bd8:	9b 01       	movw	r18, r22
     bda:	ac 01       	movw	r20, r24
     bdc:	c7 01       	movw	r24, r14
     bde:	b6 01       	movw	r22, r12
     be0:	7e d3       	rcall	.+1788   	; 0x12de <__mulsf3>
     be2:	2b ed       	ldi	r18, 0xDB	; 219
     be4:	3f e0       	ldi	r19, 0x0F	; 15
     be6:	49 e4       	ldi	r20, 0x49	; 73
     be8:	50 e4       	ldi	r21, 0x40	; 64
     bea:	79 d3       	rcall	.+1778   	; 0x12de <__mulsf3>
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	44 e3       	ldi	r20, 0x34	; 52
     bf2:	53 e4       	ldi	r21, 0x43	; 67
     bf4:	f9 d1       	rcall	.+1010   	; 0xfe8 <__divsf3>
     bf6:	9b 01       	movw	r18, r22
     bf8:	ac 01       	movw	r20, r24
     bfa:	c5 01       	movw	r24, r10
     bfc:	b4 01       	movw	r22, r8
     bfe:	2a d1       	rcall	.+596    	; 0xe54 <__addsf3>
     c00:	6b 01       	movw	r12, r22
     c02:	7c 01       	movw	r14, r24
     c04:	60 93 4a 01 	sts	0x014A, r22
     c08:	70 93 4b 01 	sts	0x014B, r23
     c0c:	80 93 4c 01 	sts	0x014C, r24
     c10:	90 93 4d 01 	sts	0x014D, r25
			//printf(" %f; %f; %f; \n\n",ControlX, gXds, AngleX_shift);
			if (1 < ControlX && ControlX < 5.5 ){
     c14:	20 e0       	ldi	r18, 0x00	; 0
     c16:	30 e0       	ldi	r19, 0x00	; 0
     c18:	40 e8       	ldi	r20, 0x80	; 128
     c1a:	5f e3       	ldi	r21, 0x3F	; 63
     c1c:	55 d3       	rcall	.+1706   	; 0x12c8 <__gesf2>
     c1e:	18 16       	cp	r1, r24
     c20:	0c f0       	brlt	.+2      	; 0xc24 <__vector_11+0x59e>
     c22:	3f c0       	rjmp	.+126    	; 0xca2 <__vector_11+0x61c>
     c24:	20 e0       	ldi	r18, 0x00	; 0
     c26:	30 e0       	ldi	r19, 0x00	; 0
     c28:	40 eb       	ldi	r20, 0xB0	; 176
     c2a:	50 e4       	ldi	r21, 0x40	; 64
     c2c:	c7 01       	movw	r24, r14
     c2e:	b6 01       	movw	r22, r12
     c30:	d7 d1       	rcall	.+942    	; 0xfe0 <__cmpsf2>
     c32:	88 23       	and	r24, r24
     c34:	b4 f5       	brge	.+108    	; 0xca2 <__vector_11+0x61c>
				PWM =( 0.6/4.5*ControlX + .06667)*256; //Relationship based off experimental data of duty cycle and thrust output
     c36:	29 e8       	ldi	r18, 0x89	; 137
     c38:	38 e8       	ldi	r19, 0x88	; 136
     c3a:	48 e0       	ldi	r20, 0x08	; 8
     c3c:	5e e3       	ldi	r21, 0x3E	; 62
     c3e:	c7 01       	movw	r24, r14
     c40:	b6 01       	movw	r22, r12
     c42:	4d d3       	rcall	.+1690   	; 0x12de <__mulsf3>
     c44:	28 e4       	ldi	r18, 0x48	; 72
     c46:	3a e8       	ldi	r19, 0x8A	; 138
     c48:	48 e8       	ldi	r20, 0x88	; 136
     c4a:	5d e3       	ldi	r21, 0x3D	; 61
     c4c:	03 d1       	rcall	.+518    	; 0xe54 <__addsf3>
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	40 e8       	ldi	r20, 0x80	; 128
     c54:	53 e4       	ldi	r21, 0x43	; 67
     c56:	43 d3       	rcall	.+1670   	; 0x12de <__mulsf3>
     c58:	2f d2       	rcall	.+1118   	; 0x10b8 <__fixsfsi>
     c5a:	60 93 2a 01 	sts	0x012A, r22
     c5e:	70 93 2b 01 	sts	0x012B, r23
				OCR0B = PWM;
     c62:	68 bd       	out	0x28, r22	; 40
				printf("%d;  right     %f;\n", PWM,ControlX);
     c64:	80 91 4d 01 	lds	r24, 0x014D
     c68:	8f 93       	push	r24
     c6a:	80 91 4c 01 	lds	r24, 0x014C
     c6e:	8f 93       	push	r24
     c70:	80 91 4b 01 	lds	r24, 0x014B
     c74:	8f 93       	push	r24
     c76:	80 91 4a 01 	lds	r24, 0x014A
     c7a:	8f 93       	push	r24
     c7c:	80 91 2b 01 	lds	r24, 0x012B
     c80:	8f 93       	push	r24
     c82:	80 91 2a 01 	lds	r24, 0x012A
     c86:	8f 93       	push	r24
     c88:	82 e1       	ldi	r24, 0x12	; 18
     c8a:	91 e0       	ldi	r25, 0x01	; 1
     c8c:	9f 93       	push	r25
     c8e:	8f 93       	push	r24
     c90:	3f d8       	rcall	.-3970   	; 0xfffffd10 <__eeprom_end+0xff7efd10>
				
				return;
     c92:	0f b6       	in	r0, 0x3f	; 63
     c94:	f8 94       	cli
     c96:	de bf       	out	0x3e, r29	; 62
     c98:	0f be       	out	0x3f, r0	; 63
     c9a:	cd bf       	out	0x3d, r28	; 61
     c9c:	02 c0       	rjmp	.+4      	; 0xca2 <__vector_11+0x61c>
		
		
			else if((ControlX < -179.6 || ControlX > 179.6)&&(ControlX > -165 || ControlX < 165));
			{
				//printf("working??\n");
				OCR0A = 0;
     c9e:	17 bc       	out	0x27, r1	; 39
				OCR0B = 0;
     ca0:	18 bc       	out	0x28, r1	; 40
				return;
			}
}
     ca2:	68 96       	adiw	r28, 0x18	; 24
     ca4:	0f b6       	in	r0, 0x3f	; 63
     ca6:	f8 94       	cli
     ca8:	de bf       	out	0x3e, r29	; 62
     caa:	0f be       	out	0x3f, r0	; 63
     cac:	cd bf       	out	0x3d, r28	; 61
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	ff 91       	pop	r31
     cb4:	ef 91       	pop	r30
     cb6:	bf 91       	pop	r27
     cb8:	af 91       	pop	r26
     cba:	9f 91       	pop	r25
     cbc:	8f 91       	pop	r24
     cbe:	7f 91       	pop	r23
     cc0:	6f 91       	pop	r22
     cc2:	5f 91       	pop	r21
     cc4:	4f 91       	pop	r20
     cc6:	3f 91       	pop	r19
     cc8:	2f 91       	pop	r18
     cca:	1f 91       	pop	r17
     ccc:	0f 91       	pop	r16
     cce:	ff 90       	pop	r15
     cd0:	ef 90       	pop	r14
     cd2:	df 90       	pop	r13
     cd4:	cf 90       	pop	r12
     cd6:	bf 90       	pop	r11
     cd8:	af 90       	pop	r10
     cda:	9f 90       	pop	r9
     cdc:	8f 90       	pop	r8
     cde:	7f 90       	pop	r7
     ce0:	6f 90       	pop	r6
     ce2:	5f 90       	pop	r5
     ce4:	4f 90       	pop	r4
     ce6:	0f 90       	pop	r0
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	0f 90       	pop	r0
     cec:	1f 90       	pop	r1
     cee:	18 95       	reti

00000cf0 <i2c_init>:
     cf0:	10 92 b9 00 	sts	0x00B9, r1
     cf4:	8c e0       	ldi	r24, 0x0C	; 12
     cf6:	80 93 b8 00 	sts	0x00B8, r24
     cfa:	08 95       	ret

00000cfc <i2c_start>:
     cfc:	94 ea       	ldi	r25, 0xA4	; 164
     cfe:	90 93 bc 00 	sts	0x00BC, r25
     d02:	4f ef       	ldi	r20, 0xFF	; 255
     d04:	50 e0       	ldi	r21, 0x00	; 0
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	ec eb       	ldi	r30, 0xBC	; 188
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	90 81       	ld	r25, Z
     d10:	99 23       	and	r25, r25
     d12:	34 f0       	brlt	.+12     	; 0xd20 <i2c_start+0x24>
     d14:	41 50       	subi	r20, 0x01	; 1
     d16:	51 09       	sbc	r21, r1
     d18:	61 09       	sbc	r22, r1
     d1a:	71 09       	sbc	r23, r1
     d1c:	c0 f7       	brcc	.-16     	; 0xd0e <i2c_start+0x12>
     d1e:	04 c0       	rjmp	.+8      	; 0xd28 <i2c_start+0x2c>
     d20:	45 2b       	or	r20, r21
     d22:	46 2b       	or	r20, r22
     d24:	47 2b       	or	r20, r23
     d26:	41 f1       	breq	.+80     	; 0xd78 <i2c_start+0x7c>
     d28:	90 91 b9 00 	lds	r25, 0x00B9
     d2c:	98 7f       	andi	r25, 0xF8	; 248
     d2e:	98 30       	cpi	r25, 0x08	; 8
     d30:	11 f0       	breq	.+4      	; 0xd36 <i2c_start+0x3a>
     d32:	90 31       	cpi	r25, 0x10	; 16
     d34:	19 f5       	brne	.+70     	; 0xd7c <i2c_start+0x80>
     d36:	80 93 bb 00 	sts	0x00BB, r24
     d3a:	84 e8       	ldi	r24, 0x84	; 132
     d3c:	80 93 bc 00 	sts	0x00BC, r24
     d40:	8f ef       	ldi	r24, 0xFF	; 255
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	a0 e0       	ldi	r26, 0x00	; 0
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	ec eb       	ldi	r30, 0xBC	; 188
     d4a:	f0 e0       	ldi	r31, 0x00	; 0
     d4c:	20 81       	ld	r18, Z
     d4e:	22 23       	and	r18, r18
     d50:	2c f0       	brlt	.+10     	; 0xd5c <i2c_start+0x60>
     d52:	01 97       	sbiw	r24, 0x01	; 1
     d54:	a1 09       	sbc	r26, r1
     d56:	b1 09       	sbc	r27, r1
     d58:	c8 f7       	brcc	.-14     	; 0xd4c <i2c_start+0x50>
     d5a:	04 c0       	rjmp	.+8      	; 0xd64 <i2c_start+0x68>
     d5c:	89 2b       	or	r24, r25
     d5e:	8a 2b       	or	r24, r26
     d60:	8b 2b       	or	r24, r27
     d62:	71 f0       	breq	.+28     	; 0xd80 <i2c_start+0x84>
     d64:	90 91 b9 00 	lds	r25, 0x00B9
     d68:	98 7f       	andi	r25, 0xF8	; 248
     d6a:	98 31       	cpi	r25, 0x18	; 24
     d6c:	59 f0       	breq	.+22     	; 0xd84 <i2c_start+0x88>
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	90 34       	cpi	r25, 0x40	; 64
     d72:	49 f4       	brne	.+18     	; 0xd86 <i2c_start+0x8a>
     d74:	80 e0       	ldi	r24, 0x00	; 0
     d76:	08 95       	ret
     d78:	81 e0       	ldi	r24, 0x01	; 1
     d7a:	08 95       	ret
     d7c:	81 e0       	ldi	r24, 0x01	; 1
     d7e:	08 95       	ret
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	08 95       	ret
     d84:	80 e0       	ldi	r24, 0x00	; 0
     d86:	08 95       	ret

00000d88 <i2c_stop>:
     d88:	84 e9       	ldi	r24, 0x94	; 148
     d8a:	80 93 bc 00 	sts	0x00BC, r24
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	ec eb       	ldi	r30, 0xBC	; 188
     d94:	f0 e0       	ldi	r31, 0x00	; 0
     d96:	20 81       	ld	r18, Z
     d98:	24 ff       	sbrs	r18, 4
     d9a:	05 c0       	rjmp	.+10     	; 0xda6 <i2c_stop+0x1e>
     d9c:	01 96       	adiw	r24, 0x01	; 1
     d9e:	81 15       	cp	r24, r1
     da0:	21 e0       	ldi	r18, 0x01	; 1
     da2:	92 07       	cpc	r25, r18
     da4:	c1 f7       	brne	.-16     	; 0xd96 <i2c_stop+0xe>
     da6:	08 95       	ret

00000da8 <i2c_write>:
     da8:	80 93 bb 00 	sts	0x00BB, r24
     dac:	84 e8       	ldi	r24, 0x84	; 132
     dae:	80 93 bc 00 	sts	0x00BC, r24
     db2:	8f ef       	ldi	r24, 0xFF	; 255
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	a0 e0       	ldi	r26, 0x00	; 0
     db8:	b0 e0       	ldi	r27, 0x00	; 0
     dba:	ec eb       	ldi	r30, 0xBC	; 188
     dbc:	f0 e0       	ldi	r31, 0x00	; 0
     dbe:	20 81       	ld	r18, Z
     dc0:	22 23       	and	r18, r18
     dc2:	2c f0       	brlt	.+10     	; 0xdce <i2c_write+0x26>
     dc4:	01 97       	sbiw	r24, 0x01	; 1
     dc6:	a1 09       	sbc	r26, r1
     dc8:	b1 09       	sbc	r27, r1
     dca:	c8 f7       	brcc	.-14     	; 0xdbe <i2c_write+0x16>
     dcc:	04 c0       	rjmp	.+8      	; 0xdd6 <i2c_write+0x2e>
     dce:	89 2b       	or	r24, r25
     dd0:	8a 2b       	or	r24, r26
     dd2:	8b 2b       	or	r24, r27
     dd4:	41 f0       	breq	.+16     	; 0xde6 <i2c_write+0x3e>
     dd6:	90 91 b9 00 	lds	r25, 0x00B9
     dda:	98 7f       	andi	r25, 0xF8	; 248
     ddc:	81 e0       	ldi	r24, 0x01	; 1
     dde:	98 32       	cpi	r25, 0x28	; 40
     de0:	19 f4       	brne	.+6      	; 0xde8 <i2c_write+0x40>
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	08 95       	ret
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	08 95       	ret

00000dea <i2c_readAck>:
     dea:	84 ec       	ldi	r24, 0xC4	; 196
     dec:	80 93 bc 00 	sts	0x00BC, r24
     df0:	8f ef       	ldi	r24, 0xFF	; 255
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	a0 e0       	ldi	r26, 0x00	; 0
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	ec eb       	ldi	r30, 0xBC	; 188
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	20 81       	ld	r18, Z
     dfe:	22 23       	and	r18, r18
     e00:	2c f0       	brlt	.+10     	; 0xe0c <i2c_readAck+0x22>
     e02:	01 97       	sbiw	r24, 0x01	; 1
     e04:	a1 09       	sbc	r26, r1
     e06:	b1 09       	sbc	r27, r1
     e08:	c8 f7       	brcc	.-14     	; 0xdfc <i2c_readAck+0x12>
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <i2c_readAck+0x2a>
     e0c:	89 2b       	or	r24, r25
     e0e:	8a 2b       	or	r24, r26
     e10:	8b 2b       	or	r24, r27
     e12:	19 f0       	breq	.+6      	; 0xe1a <i2c_readAck+0x30>
     e14:	80 91 bb 00 	lds	r24, 0x00BB
     e18:	08 95       	ret
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	08 95       	ret

00000e1e <i2c_readNak>:
     e1e:	84 e8       	ldi	r24, 0x84	; 132
     e20:	80 93 bc 00 	sts	0x00BC, r24
     e24:	8f ef       	ldi	r24, 0xFF	; 255
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	a0 e0       	ldi	r26, 0x00	; 0
     e2a:	b0 e0       	ldi	r27, 0x00	; 0
     e2c:	ec eb       	ldi	r30, 0xBC	; 188
     e2e:	f0 e0       	ldi	r31, 0x00	; 0
     e30:	20 81       	ld	r18, Z
     e32:	22 23       	and	r18, r18
     e34:	2c f0       	brlt	.+10     	; 0xe40 <i2c_readNak+0x22>
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	a1 09       	sbc	r26, r1
     e3a:	b1 09       	sbc	r27, r1
     e3c:	c8 f7       	brcc	.-14     	; 0xe30 <i2c_readNak+0x12>
     e3e:	04 c0       	rjmp	.+8      	; 0xe48 <i2c_readNak+0x2a>
     e40:	89 2b       	or	r24, r25
     e42:	8a 2b       	or	r24, r26
     e44:	8b 2b       	or	r24, r27
     e46:	19 f0       	breq	.+6      	; 0xe4e <i2c_readNak+0x30>
     e48:	80 91 bb 00 	lds	r24, 0x00BB
     e4c:	08 95       	ret
     e4e:	80 e0       	ldi	r24, 0x00	; 0
     e50:	08 95       	ret

00000e52 <__subsf3>:
     e52:	50 58       	subi	r21, 0x80	; 128

00000e54 <__addsf3>:
     e54:	bb 27       	eor	r27, r27
     e56:	aa 27       	eor	r26, r26
     e58:	0e d0       	rcall	.+28     	; 0xe76 <__addsf3x>
     e5a:	fc c1       	rjmp	.+1016   	; 0x1254 <__fp_round>
     e5c:	ed d1       	rcall	.+986    	; 0x1238 <__fp_pscA>
     e5e:	30 f0       	brcs	.+12     	; 0xe6c <__addsf3+0x18>
     e60:	f2 d1       	rcall	.+996    	; 0x1246 <__fp_pscB>
     e62:	20 f0       	brcs	.+8      	; 0xe6c <__addsf3+0x18>
     e64:	31 f4       	brne	.+12     	; 0xe72 <__addsf3+0x1e>
     e66:	9f 3f       	cpi	r25, 0xFF	; 255
     e68:	11 f4       	brne	.+4      	; 0xe6e <__addsf3+0x1a>
     e6a:	1e f4       	brtc	.+6      	; 0xe72 <__addsf3+0x1e>
     e6c:	bd c1       	rjmp	.+890    	; 0x11e8 <__fp_nan>
     e6e:	0e f4       	brtc	.+2      	; 0xe72 <__addsf3+0x1e>
     e70:	e0 95       	com	r30
     e72:	e7 fb       	bst	r30, 7
     e74:	b3 c1       	rjmp	.+870    	; 0x11dc <__fp_inf>

00000e76 <__addsf3x>:
     e76:	e9 2f       	mov	r30, r25
     e78:	fe d1       	rcall	.+1020   	; 0x1276 <__fp_split3>
     e7a:	80 f3       	brcs	.-32     	; 0xe5c <__addsf3+0x8>
     e7c:	ba 17       	cp	r27, r26
     e7e:	62 07       	cpc	r22, r18
     e80:	73 07       	cpc	r23, r19
     e82:	84 07       	cpc	r24, r20
     e84:	95 07       	cpc	r25, r21
     e86:	18 f0       	brcs	.+6      	; 0xe8e <__addsf3x+0x18>
     e88:	71 f4       	brne	.+28     	; 0xea6 <__addsf3x+0x30>
     e8a:	9e f5       	brtc	.+102    	; 0xef2 <__addsf3x+0x7c>
     e8c:	16 c2       	rjmp	.+1068   	; 0x12ba <__fp_zero>
     e8e:	0e f4       	brtc	.+2      	; 0xe92 <__addsf3x+0x1c>
     e90:	e0 95       	com	r30
     e92:	0b 2e       	mov	r0, r27
     e94:	ba 2f       	mov	r27, r26
     e96:	a0 2d       	mov	r26, r0
     e98:	0b 01       	movw	r0, r22
     e9a:	b9 01       	movw	r22, r18
     e9c:	90 01       	movw	r18, r0
     e9e:	0c 01       	movw	r0, r24
     ea0:	ca 01       	movw	r24, r20
     ea2:	a0 01       	movw	r20, r0
     ea4:	11 24       	eor	r1, r1
     ea6:	ff 27       	eor	r31, r31
     ea8:	59 1b       	sub	r21, r25
     eaa:	99 f0       	breq	.+38     	; 0xed2 <__addsf3x+0x5c>
     eac:	59 3f       	cpi	r21, 0xF9	; 249
     eae:	50 f4       	brcc	.+20     	; 0xec4 <__addsf3x+0x4e>
     eb0:	50 3e       	cpi	r21, 0xE0	; 224
     eb2:	68 f1       	brcs	.+90     	; 0xf0e <__addsf3x+0x98>
     eb4:	1a 16       	cp	r1, r26
     eb6:	f0 40       	sbci	r31, 0x00	; 0
     eb8:	a2 2f       	mov	r26, r18
     eba:	23 2f       	mov	r18, r19
     ebc:	34 2f       	mov	r19, r20
     ebe:	44 27       	eor	r20, r20
     ec0:	58 5f       	subi	r21, 0xF8	; 248
     ec2:	f3 cf       	rjmp	.-26     	; 0xeaa <__addsf3x+0x34>
     ec4:	46 95       	lsr	r20
     ec6:	37 95       	ror	r19
     ec8:	27 95       	ror	r18
     eca:	a7 95       	ror	r26
     ecc:	f0 40       	sbci	r31, 0x00	; 0
     ece:	53 95       	inc	r21
     ed0:	c9 f7       	brne	.-14     	; 0xec4 <__addsf3x+0x4e>
     ed2:	7e f4       	brtc	.+30     	; 0xef2 <__addsf3x+0x7c>
     ed4:	1f 16       	cp	r1, r31
     ed6:	ba 0b       	sbc	r27, r26
     ed8:	62 0b       	sbc	r22, r18
     eda:	73 0b       	sbc	r23, r19
     edc:	84 0b       	sbc	r24, r20
     ede:	ba f0       	brmi	.+46     	; 0xf0e <__addsf3x+0x98>
     ee0:	91 50       	subi	r25, 0x01	; 1
     ee2:	a1 f0       	breq	.+40     	; 0xf0c <__addsf3x+0x96>
     ee4:	ff 0f       	add	r31, r31
     ee6:	bb 1f       	adc	r27, r27
     ee8:	66 1f       	adc	r22, r22
     eea:	77 1f       	adc	r23, r23
     eec:	88 1f       	adc	r24, r24
     eee:	c2 f7       	brpl	.-16     	; 0xee0 <__addsf3x+0x6a>
     ef0:	0e c0       	rjmp	.+28     	; 0xf0e <__addsf3x+0x98>
     ef2:	ba 0f       	add	r27, r26
     ef4:	62 1f       	adc	r22, r18
     ef6:	73 1f       	adc	r23, r19
     ef8:	84 1f       	adc	r24, r20
     efa:	48 f4       	brcc	.+18     	; 0xf0e <__addsf3x+0x98>
     efc:	87 95       	ror	r24
     efe:	77 95       	ror	r23
     f00:	67 95       	ror	r22
     f02:	b7 95       	ror	r27
     f04:	f7 95       	ror	r31
     f06:	9e 3f       	cpi	r25, 0xFE	; 254
     f08:	08 f0       	brcs	.+2      	; 0xf0c <__addsf3x+0x96>
     f0a:	b3 cf       	rjmp	.-154    	; 0xe72 <__addsf3+0x1e>
     f0c:	93 95       	inc	r25
     f0e:	88 0f       	add	r24, r24
     f10:	08 f0       	brcs	.+2      	; 0xf14 <__addsf3x+0x9e>
     f12:	99 27       	eor	r25, r25
     f14:	ee 0f       	add	r30, r30
     f16:	97 95       	ror	r25
     f18:	87 95       	ror	r24
     f1a:	08 95       	ret
     f1c:	8d d1       	rcall	.+794    	; 0x1238 <__fp_pscA>
     f1e:	58 f0       	brcs	.+22     	; 0xf36 <__addsf3x+0xc0>
     f20:	80 e8       	ldi	r24, 0x80	; 128
     f22:	91 e0       	ldi	r25, 0x01	; 1
     f24:	09 f4       	brne	.+2      	; 0xf28 <__addsf3x+0xb2>
     f26:	9e ef       	ldi	r25, 0xFE	; 254
     f28:	8e d1       	rcall	.+796    	; 0x1246 <__fp_pscB>
     f2a:	28 f0       	brcs	.+10     	; 0xf36 <__addsf3x+0xc0>
     f2c:	40 e8       	ldi	r20, 0x80	; 128
     f2e:	51 e0       	ldi	r21, 0x01	; 1
     f30:	59 f4       	brne	.+22     	; 0xf48 <atan2+0xe>
     f32:	5e ef       	ldi	r21, 0xFE	; 254
     f34:	09 c0       	rjmp	.+18     	; 0xf48 <atan2+0xe>
     f36:	58 c1       	rjmp	.+688    	; 0x11e8 <__fp_nan>
     f38:	c0 c1       	rjmp	.+896    	; 0x12ba <__fp_zero>

00000f3a <atan2>:
     f3a:	e9 2f       	mov	r30, r25
     f3c:	e0 78       	andi	r30, 0x80	; 128
     f3e:	9b d1       	rcall	.+822    	; 0x1276 <__fp_split3>
     f40:	68 f3       	brcs	.-38     	; 0xf1c <__addsf3x+0xa6>
     f42:	09 2e       	mov	r0, r25
     f44:	05 2a       	or	r0, r21
     f46:	c1 f3       	breq	.-16     	; 0xf38 <__addsf3x+0xc2>
     f48:	26 17       	cp	r18, r22
     f4a:	37 07       	cpc	r19, r23
     f4c:	48 07       	cpc	r20, r24
     f4e:	59 07       	cpc	r21, r25
     f50:	38 f0       	brcs	.+14     	; 0xf60 <atan2+0x26>
     f52:	0e 2e       	mov	r0, r30
     f54:	07 f8       	bld	r0, 7
     f56:	e0 25       	eor	r30, r0
     f58:	69 f0       	breq	.+26     	; 0xf74 <atan2+0x3a>
     f5a:	e0 25       	eor	r30, r0
     f5c:	e0 64       	ori	r30, 0x40	; 64
     f5e:	0a c0       	rjmp	.+20     	; 0xf74 <atan2+0x3a>
     f60:	ef 63       	ori	r30, 0x3F	; 63
     f62:	07 f8       	bld	r0, 7
     f64:	00 94       	com	r0
     f66:	07 fa       	bst	r0, 7
     f68:	db 01       	movw	r26, r22
     f6a:	b9 01       	movw	r22, r18
     f6c:	9d 01       	movw	r18, r26
     f6e:	dc 01       	movw	r26, r24
     f70:	ca 01       	movw	r24, r20
     f72:	ad 01       	movw	r20, r26
     f74:	ef 93       	push	r30
     f76:	47 d0       	rcall	.+142    	; 0x1006 <__divsf3_pse>
     f78:	6d d1       	rcall	.+730    	; 0x1254 <__fp_round>
     f7a:	0a d0       	rcall	.+20     	; 0xf90 <atan>
     f7c:	5f 91       	pop	r21
     f7e:	55 23       	and	r21, r21
     f80:	31 f0       	breq	.+12     	; 0xf8e <atan2+0x54>
     f82:	2b ed       	ldi	r18, 0xDB	; 219
     f84:	3f e0       	ldi	r19, 0x0F	; 15
     f86:	49 e4       	ldi	r20, 0x49	; 73
     f88:	50 fd       	sbrc	r21, 0
     f8a:	49 ec       	ldi	r20, 0xC9	; 201
     f8c:	63 cf       	rjmp	.-314    	; 0xe54 <__addsf3>
     f8e:	08 95       	ret

00000f90 <atan>:
     f90:	df 93       	push	r29
     f92:	dd 27       	eor	r29, r29
     f94:	b9 2f       	mov	r27, r25
     f96:	bf 77       	andi	r27, 0x7F	; 127
     f98:	40 e8       	ldi	r20, 0x80	; 128
     f9a:	5f e3       	ldi	r21, 0x3F	; 63
     f9c:	16 16       	cp	r1, r22
     f9e:	17 06       	cpc	r1, r23
     fa0:	48 07       	cpc	r20, r24
     fa2:	5b 07       	cpc	r21, r27
     fa4:	10 f4       	brcc	.+4      	; 0xfaa <atan+0x1a>
     fa6:	d9 2f       	mov	r29, r25
     fa8:	93 d1       	rcall	.+806    	; 0x12d0 <inverse>
     faa:	9f 93       	push	r25
     fac:	8f 93       	push	r24
     fae:	7f 93       	push	r23
     fb0:	6f 93       	push	r22
     fb2:	f8 d1       	rcall	.+1008   	; 0x13a4 <square>
     fb4:	e4 e3       	ldi	r30, 0x34	; 52
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	1a d1       	rcall	.+564    	; 0x11ee <__fp_powser>
     fba:	4c d1       	rcall	.+664    	; 0x1254 <__fp_round>
     fbc:	2f 91       	pop	r18
     fbe:	3f 91       	pop	r19
     fc0:	4f 91       	pop	r20
     fc2:	5f 91       	pop	r21
     fc4:	98 d1       	rcall	.+816    	; 0x12f6 <__mulsf3x>
     fc6:	dd 23       	and	r29, r29
     fc8:	49 f0       	breq	.+18     	; 0xfdc <atan+0x4c>
     fca:	90 58       	subi	r25, 0x80	; 128
     fcc:	a2 ea       	ldi	r26, 0xA2	; 162
     fce:	2a ed       	ldi	r18, 0xDA	; 218
     fd0:	3f e0       	ldi	r19, 0x0F	; 15
     fd2:	49 ec       	ldi	r20, 0xC9	; 201
     fd4:	5f e3       	ldi	r21, 0x3F	; 63
     fd6:	d0 78       	andi	r29, 0x80	; 128
     fd8:	5d 27       	eor	r21, r29
     fda:	4d df       	rcall	.-358    	; 0xe76 <__addsf3x>
     fdc:	df 91       	pop	r29
     fde:	3a c1       	rjmp	.+628    	; 0x1254 <__fp_round>

00000fe0 <__cmpsf2>:
     fe0:	d9 d0       	rcall	.+434    	; 0x1194 <__fp_cmp>
     fe2:	08 f4       	brcc	.+2      	; 0xfe6 <__cmpsf2+0x6>
     fe4:	81 e0       	ldi	r24, 0x01	; 1
     fe6:	08 95       	ret

00000fe8 <__divsf3>:
     fe8:	0c d0       	rcall	.+24     	; 0x1002 <__divsf3x>
     fea:	34 c1       	rjmp	.+616    	; 0x1254 <__fp_round>
     fec:	2c d1       	rcall	.+600    	; 0x1246 <__fp_pscB>
     fee:	40 f0       	brcs	.+16     	; 0x1000 <__divsf3+0x18>
     ff0:	23 d1       	rcall	.+582    	; 0x1238 <__fp_pscA>
     ff2:	30 f0       	brcs	.+12     	; 0x1000 <__divsf3+0x18>
     ff4:	21 f4       	brne	.+8      	; 0xffe <__divsf3+0x16>
     ff6:	5f 3f       	cpi	r21, 0xFF	; 255
     ff8:	19 f0       	breq	.+6      	; 0x1000 <__divsf3+0x18>
     ffa:	f0 c0       	rjmp	.+480    	; 0x11dc <__fp_inf>
     ffc:	51 11       	cpse	r21, r1
     ffe:	5e c1       	rjmp	.+700    	; 0x12bc <__fp_szero>
    1000:	f3 c0       	rjmp	.+486    	; 0x11e8 <__fp_nan>

00001002 <__divsf3x>:
    1002:	39 d1       	rcall	.+626    	; 0x1276 <__fp_split3>
    1004:	98 f3       	brcs	.-26     	; 0xfec <__divsf3+0x4>

00001006 <__divsf3_pse>:
    1006:	99 23       	and	r25, r25
    1008:	c9 f3       	breq	.-14     	; 0xffc <__divsf3+0x14>
    100a:	55 23       	and	r21, r21
    100c:	b1 f3       	breq	.-20     	; 0xffa <__divsf3+0x12>
    100e:	95 1b       	sub	r25, r21
    1010:	55 0b       	sbc	r21, r21
    1012:	bb 27       	eor	r27, r27
    1014:	aa 27       	eor	r26, r26
    1016:	62 17       	cp	r22, r18
    1018:	73 07       	cpc	r23, r19
    101a:	84 07       	cpc	r24, r20
    101c:	38 f0       	brcs	.+14     	; 0x102c <__divsf3_pse+0x26>
    101e:	9f 5f       	subi	r25, 0xFF	; 255
    1020:	5f 4f       	sbci	r21, 0xFF	; 255
    1022:	22 0f       	add	r18, r18
    1024:	33 1f       	adc	r19, r19
    1026:	44 1f       	adc	r20, r20
    1028:	aa 1f       	adc	r26, r26
    102a:	a9 f3       	breq	.-22     	; 0x1016 <__divsf3_pse+0x10>
    102c:	33 d0       	rcall	.+102    	; 0x1094 <__divsf3_pse+0x8e>
    102e:	0e 2e       	mov	r0, r30
    1030:	3a f0       	brmi	.+14     	; 0x1040 <__divsf3_pse+0x3a>
    1032:	e0 e8       	ldi	r30, 0x80	; 128
    1034:	30 d0       	rcall	.+96     	; 0x1096 <__divsf3_pse+0x90>
    1036:	91 50       	subi	r25, 0x01	; 1
    1038:	50 40       	sbci	r21, 0x00	; 0
    103a:	e6 95       	lsr	r30
    103c:	00 1c       	adc	r0, r0
    103e:	ca f7       	brpl	.-14     	; 0x1032 <__divsf3_pse+0x2c>
    1040:	29 d0       	rcall	.+82     	; 0x1094 <__divsf3_pse+0x8e>
    1042:	fe 2f       	mov	r31, r30
    1044:	27 d0       	rcall	.+78     	; 0x1094 <__divsf3_pse+0x8e>
    1046:	66 0f       	add	r22, r22
    1048:	77 1f       	adc	r23, r23
    104a:	88 1f       	adc	r24, r24
    104c:	bb 1f       	adc	r27, r27
    104e:	26 17       	cp	r18, r22
    1050:	37 07       	cpc	r19, r23
    1052:	48 07       	cpc	r20, r24
    1054:	ab 07       	cpc	r26, r27
    1056:	b0 e8       	ldi	r27, 0x80	; 128
    1058:	09 f0       	breq	.+2      	; 0x105c <__divsf3_pse+0x56>
    105a:	bb 0b       	sbc	r27, r27
    105c:	80 2d       	mov	r24, r0
    105e:	bf 01       	movw	r22, r30
    1060:	ff 27       	eor	r31, r31
    1062:	93 58       	subi	r25, 0x83	; 131
    1064:	5f 4f       	sbci	r21, 0xFF	; 255
    1066:	2a f0       	brmi	.+10     	; 0x1072 <__divsf3_pse+0x6c>
    1068:	9e 3f       	cpi	r25, 0xFE	; 254
    106a:	51 05       	cpc	r21, r1
    106c:	68 f0       	brcs	.+26     	; 0x1088 <__divsf3_pse+0x82>
    106e:	b6 c0       	rjmp	.+364    	; 0x11dc <__fp_inf>
    1070:	25 c1       	rjmp	.+586    	; 0x12bc <__fp_szero>
    1072:	5f 3f       	cpi	r21, 0xFF	; 255
    1074:	ec f3       	brlt	.-6      	; 0x1070 <__divsf3_pse+0x6a>
    1076:	98 3e       	cpi	r25, 0xE8	; 232
    1078:	dc f3       	brlt	.-10     	; 0x1070 <__divsf3_pse+0x6a>
    107a:	86 95       	lsr	r24
    107c:	77 95       	ror	r23
    107e:	67 95       	ror	r22
    1080:	b7 95       	ror	r27
    1082:	f7 95       	ror	r31
    1084:	9f 5f       	subi	r25, 0xFF	; 255
    1086:	c9 f7       	brne	.-14     	; 0x107a <__divsf3_pse+0x74>
    1088:	88 0f       	add	r24, r24
    108a:	91 1d       	adc	r25, r1
    108c:	96 95       	lsr	r25
    108e:	87 95       	ror	r24
    1090:	97 f9       	bld	r25, 7
    1092:	08 95       	ret
    1094:	e1 e0       	ldi	r30, 0x01	; 1
    1096:	66 0f       	add	r22, r22
    1098:	77 1f       	adc	r23, r23
    109a:	88 1f       	adc	r24, r24
    109c:	bb 1f       	adc	r27, r27
    109e:	62 17       	cp	r22, r18
    10a0:	73 07       	cpc	r23, r19
    10a2:	84 07       	cpc	r24, r20
    10a4:	ba 07       	cpc	r27, r26
    10a6:	20 f0       	brcs	.+8      	; 0x10b0 <__divsf3_pse+0xaa>
    10a8:	62 1b       	sub	r22, r18
    10aa:	73 0b       	sbc	r23, r19
    10ac:	84 0b       	sbc	r24, r20
    10ae:	ba 0b       	sbc	r27, r26
    10b0:	ee 1f       	adc	r30, r30
    10b2:	88 f7       	brcc	.-30     	; 0x1096 <__divsf3_pse+0x90>
    10b4:	e0 95       	com	r30
    10b6:	08 95       	ret

000010b8 <__fixsfsi>:
    10b8:	04 d0       	rcall	.+8      	; 0x10c2 <__fixunssfsi>
    10ba:	68 94       	set
    10bc:	b1 11       	cpse	r27, r1
    10be:	fe c0       	rjmp	.+508    	; 0x12bc <__fp_szero>
    10c0:	08 95       	ret

000010c2 <__fixunssfsi>:
    10c2:	e1 d0       	rcall	.+450    	; 0x1286 <__fp_splitA>
    10c4:	88 f0       	brcs	.+34     	; 0x10e8 <__fixunssfsi+0x26>
    10c6:	9f 57       	subi	r25, 0x7F	; 127
    10c8:	90 f0       	brcs	.+36     	; 0x10ee <__fixunssfsi+0x2c>
    10ca:	b9 2f       	mov	r27, r25
    10cc:	99 27       	eor	r25, r25
    10ce:	b7 51       	subi	r27, 0x17	; 23
    10d0:	a0 f0       	brcs	.+40     	; 0x10fa <__fixunssfsi+0x38>
    10d2:	d1 f0       	breq	.+52     	; 0x1108 <__fixunssfsi+0x46>
    10d4:	66 0f       	add	r22, r22
    10d6:	77 1f       	adc	r23, r23
    10d8:	88 1f       	adc	r24, r24
    10da:	99 1f       	adc	r25, r25
    10dc:	1a f0       	brmi	.+6      	; 0x10e4 <__fixunssfsi+0x22>
    10de:	ba 95       	dec	r27
    10e0:	c9 f7       	brne	.-14     	; 0x10d4 <__fixunssfsi+0x12>
    10e2:	12 c0       	rjmp	.+36     	; 0x1108 <__fixunssfsi+0x46>
    10e4:	b1 30       	cpi	r27, 0x01	; 1
    10e6:	81 f0       	breq	.+32     	; 0x1108 <__fixunssfsi+0x46>
    10e8:	e8 d0       	rcall	.+464    	; 0x12ba <__fp_zero>
    10ea:	b1 e0       	ldi	r27, 0x01	; 1
    10ec:	08 95       	ret
    10ee:	e5 c0       	rjmp	.+458    	; 0x12ba <__fp_zero>
    10f0:	67 2f       	mov	r22, r23
    10f2:	78 2f       	mov	r23, r24
    10f4:	88 27       	eor	r24, r24
    10f6:	b8 5f       	subi	r27, 0xF8	; 248
    10f8:	39 f0       	breq	.+14     	; 0x1108 <__fixunssfsi+0x46>
    10fa:	b9 3f       	cpi	r27, 0xF9	; 249
    10fc:	cc f3       	brlt	.-14     	; 0x10f0 <__fixunssfsi+0x2e>
    10fe:	86 95       	lsr	r24
    1100:	77 95       	ror	r23
    1102:	67 95       	ror	r22
    1104:	b3 95       	inc	r27
    1106:	d9 f7       	brne	.-10     	; 0x10fe <__fixunssfsi+0x3c>
    1108:	3e f4       	brtc	.+14     	; 0x1118 <__fixunssfsi+0x56>
    110a:	90 95       	com	r25
    110c:	80 95       	com	r24
    110e:	70 95       	com	r23
    1110:	61 95       	neg	r22
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	8f 4f       	sbci	r24, 0xFF	; 255
    1116:	9f 4f       	sbci	r25, 0xFF	; 255
    1118:	08 95       	ret

0000111a <__floatunsisf>:
    111a:	e8 94       	clt
    111c:	09 c0       	rjmp	.+18     	; 0x1130 <__floatsisf+0x12>

0000111e <__floatsisf>:
    111e:	97 fb       	bst	r25, 7
    1120:	3e f4       	brtc	.+14     	; 0x1130 <__floatsisf+0x12>
    1122:	90 95       	com	r25
    1124:	80 95       	com	r24
    1126:	70 95       	com	r23
    1128:	61 95       	neg	r22
    112a:	7f 4f       	sbci	r23, 0xFF	; 255
    112c:	8f 4f       	sbci	r24, 0xFF	; 255
    112e:	9f 4f       	sbci	r25, 0xFF	; 255
    1130:	99 23       	and	r25, r25
    1132:	a9 f0       	breq	.+42     	; 0x115e <__floatsisf+0x40>
    1134:	f9 2f       	mov	r31, r25
    1136:	96 e9       	ldi	r25, 0x96	; 150
    1138:	bb 27       	eor	r27, r27
    113a:	93 95       	inc	r25
    113c:	f6 95       	lsr	r31
    113e:	87 95       	ror	r24
    1140:	77 95       	ror	r23
    1142:	67 95       	ror	r22
    1144:	b7 95       	ror	r27
    1146:	f1 11       	cpse	r31, r1
    1148:	f8 cf       	rjmp	.-16     	; 0x113a <__floatsisf+0x1c>
    114a:	fa f4       	brpl	.+62     	; 0x118a <__floatsisf+0x6c>
    114c:	bb 0f       	add	r27, r27
    114e:	11 f4       	brne	.+4      	; 0x1154 <__floatsisf+0x36>
    1150:	60 ff       	sbrs	r22, 0
    1152:	1b c0       	rjmp	.+54     	; 0x118a <__floatsisf+0x6c>
    1154:	6f 5f       	subi	r22, 0xFF	; 255
    1156:	7f 4f       	sbci	r23, 0xFF	; 255
    1158:	8f 4f       	sbci	r24, 0xFF	; 255
    115a:	9f 4f       	sbci	r25, 0xFF	; 255
    115c:	16 c0       	rjmp	.+44     	; 0x118a <__floatsisf+0x6c>
    115e:	88 23       	and	r24, r24
    1160:	11 f0       	breq	.+4      	; 0x1166 <__floatsisf+0x48>
    1162:	96 e9       	ldi	r25, 0x96	; 150
    1164:	11 c0       	rjmp	.+34     	; 0x1188 <__floatsisf+0x6a>
    1166:	77 23       	and	r23, r23
    1168:	21 f0       	breq	.+8      	; 0x1172 <__floatsisf+0x54>
    116a:	9e e8       	ldi	r25, 0x8E	; 142
    116c:	87 2f       	mov	r24, r23
    116e:	76 2f       	mov	r23, r22
    1170:	05 c0       	rjmp	.+10     	; 0x117c <__floatsisf+0x5e>
    1172:	66 23       	and	r22, r22
    1174:	71 f0       	breq	.+28     	; 0x1192 <__floatsisf+0x74>
    1176:	96 e8       	ldi	r25, 0x86	; 134
    1178:	86 2f       	mov	r24, r22
    117a:	70 e0       	ldi	r23, 0x00	; 0
    117c:	60 e0       	ldi	r22, 0x00	; 0
    117e:	2a f0       	brmi	.+10     	; 0x118a <__floatsisf+0x6c>
    1180:	9a 95       	dec	r25
    1182:	66 0f       	add	r22, r22
    1184:	77 1f       	adc	r23, r23
    1186:	88 1f       	adc	r24, r24
    1188:	da f7       	brpl	.-10     	; 0x1180 <__floatsisf+0x62>
    118a:	88 0f       	add	r24, r24
    118c:	96 95       	lsr	r25
    118e:	87 95       	ror	r24
    1190:	97 f9       	bld	r25, 7
    1192:	08 95       	ret

00001194 <__fp_cmp>:
    1194:	99 0f       	add	r25, r25
    1196:	00 08       	sbc	r0, r0
    1198:	55 0f       	add	r21, r21
    119a:	aa 0b       	sbc	r26, r26
    119c:	e0 e8       	ldi	r30, 0x80	; 128
    119e:	fe ef       	ldi	r31, 0xFE	; 254
    11a0:	16 16       	cp	r1, r22
    11a2:	17 06       	cpc	r1, r23
    11a4:	e8 07       	cpc	r30, r24
    11a6:	f9 07       	cpc	r31, r25
    11a8:	c0 f0       	brcs	.+48     	; 0x11da <__fp_cmp+0x46>
    11aa:	12 16       	cp	r1, r18
    11ac:	13 06       	cpc	r1, r19
    11ae:	e4 07       	cpc	r30, r20
    11b0:	f5 07       	cpc	r31, r21
    11b2:	98 f0       	brcs	.+38     	; 0x11da <__fp_cmp+0x46>
    11b4:	62 1b       	sub	r22, r18
    11b6:	73 0b       	sbc	r23, r19
    11b8:	84 0b       	sbc	r24, r20
    11ba:	95 0b       	sbc	r25, r21
    11bc:	39 f4       	brne	.+14     	; 0x11cc <__fp_cmp+0x38>
    11be:	0a 26       	eor	r0, r26
    11c0:	61 f0       	breq	.+24     	; 0x11da <__fp_cmp+0x46>
    11c2:	23 2b       	or	r18, r19
    11c4:	24 2b       	or	r18, r20
    11c6:	25 2b       	or	r18, r21
    11c8:	21 f4       	brne	.+8      	; 0x11d2 <__fp_cmp+0x3e>
    11ca:	08 95       	ret
    11cc:	0a 26       	eor	r0, r26
    11ce:	09 f4       	brne	.+2      	; 0x11d2 <__fp_cmp+0x3e>
    11d0:	a1 40       	sbci	r26, 0x01	; 1
    11d2:	a6 95       	lsr	r26
    11d4:	8f ef       	ldi	r24, 0xFF	; 255
    11d6:	81 1d       	adc	r24, r1
    11d8:	81 1d       	adc	r24, r1
    11da:	08 95       	ret

000011dc <__fp_inf>:
    11dc:	97 f9       	bld	r25, 7
    11de:	9f 67       	ori	r25, 0x7F	; 127
    11e0:	80 e8       	ldi	r24, 0x80	; 128
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	60 e0       	ldi	r22, 0x00	; 0
    11e6:	08 95       	ret

000011e8 <__fp_nan>:
    11e8:	9f ef       	ldi	r25, 0xFF	; 255
    11ea:	80 ec       	ldi	r24, 0xC0	; 192
    11ec:	08 95       	ret

000011ee <__fp_powser>:
    11ee:	df 93       	push	r29
    11f0:	cf 93       	push	r28
    11f2:	1f 93       	push	r17
    11f4:	0f 93       	push	r16
    11f6:	ff 92       	push	r15
    11f8:	ef 92       	push	r14
    11fa:	df 92       	push	r13
    11fc:	7b 01       	movw	r14, r22
    11fe:	8c 01       	movw	r16, r24
    1200:	68 94       	set
    1202:	05 c0       	rjmp	.+10     	; 0x120e <__fp_powser+0x20>
    1204:	da 2e       	mov	r13, r26
    1206:	ef 01       	movw	r28, r30
    1208:	76 d0       	rcall	.+236    	; 0x12f6 <__mulsf3x>
    120a:	fe 01       	movw	r30, r28
    120c:	e8 94       	clt
    120e:	a5 91       	lpm	r26, Z+
    1210:	25 91       	lpm	r18, Z+
    1212:	35 91       	lpm	r19, Z+
    1214:	45 91       	lpm	r20, Z+
    1216:	55 91       	lpm	r21, Z+
    1218:	ae f3       	brts	.-22     	; 0x1204 <__fp_powser+0x16>
    121a:	ef 01       	movw	r28, r30
    121c:	2c de       	rcall	.-936    	; 0xe76 <__addsf3x>
    121e:	fe 01       	movw	r30, r28
    1220:	97 01       	movw	r18, r14
    1222:	a8 01       	movw	r20, r16
    1224:	da 94       	dec	r13
    1226:	79 f7       	brne	.-34     	; 0x1206 <__fp_powser+0x18>
    1228:	df 90       	pop	r13
    122a:	ef 90       	pop	r14
    122c:	ff 90       	pop	r15
    122e:	0f 91       	pop	r16
    1230:	1f 91       	pop	r17
    1232:	cf 91       	pop	r28
    1234:	df 91       	pop	r29
    1236:	08 95       	ret

00001238 <__fp_pscA>:
    1238:	00 24       	eor	r0, r0
    123a:	0a 94       	dec	r0
    123c:	16 16       	cp	r1, r22
    123e:	17 06       	cpc	r1, r23
    1240:	18 06       	cpc	r1, r24
    1242:	09 06       	cpc	r0, r25
    1244:	08 95       	ret

00001246 <__fp_pscB>:
    1246:	00 24       	eor	r0, r0
    1248:	0a 94       	dec	r0
    124a:	12 16       	cp	r1, r18
    124c:	13 06       	cpc	r1, r19
    124e:	14 06       	cpc	r1, r20
    1250:	05 06       	cpc	r0, r21
    1252:	08 95       	ret

00001254 <__fp_round>:
    1254:	09 2e       	mov	r0, r25
    1256:	03 94       	inc	r0
    1258:	00 0c       	add	r0, r0
    125a:	11 f4       	brne	.+4      	; 0x1260 <__fp_round+0xc>
    125c:	88 23       	and	r24, r24
    125e:	52 f0       	brmi	.+20     	; 0x1274 <__fp_round+0x20>
    1260:	bb 0f       	add	r27, r27
    1262:	40 f4       	brcc	.+16     	; 0x1274 <__fp_round+0x20>
    1264:	bf 2b       	or	r27, r31
    1266:	11 f4       	brne	.+4      	; 0x126c <__fp_round+0x18>
    1268:	60 ff       	sbrs	r22, 0
    126a:	04 c0       	rjmp	.+8      	; 0x1274 <__fp_round+0x20>
    126c:	6f 5f       	subi	r22, 0xFF	; 255
    126e:	7f 4f       	sbci	r23, 0xFF	; 255
    1270:	8f 4f       	sbci	r24, 0xFF	; 255
    1272:	9f 4f       	sbci	r25, 0xFF	; 255
    1274:	08 95       	ret

00001276 <__fp_split3>:
    1276:	57 fd       	sbrc	r21, 7
    1278:	90 58       	subi	r25, 0x80	; 128
    127a:	44 0f       	add	r20, r20
    127c:	55 1f       	adc	r21, r21
    127e:	59 f0       	breq	.+22     	; 0x1296 <__fp_splitA+0x10>
    1280:	5f 3f       	cpi	r21, 0xFF	; 255
    1282:	71 f0       	breq	.+28     	; 0x12a0 <__fp_splitA+0x1a>
    1284:	47 95       	ror	r20

00001286 <__fp_splitA>:
    1286:	88 0f       	add	r24, r24
    1288:	97 fb       	bst	r25, 7
    128a:	99 1f       	adc	r25, r25
    128c:	61 f0       	breq	.+24     	; 0x12a6 <__fp_splitA+0x20>
    128e:	9f 3f       	cpi	r25, 0xFF	; 255
    1290:	79 f0       	breq	.+30     	; 0x12b0 <__fp_splitA+0x2a>
    1292:	87 95       	ror	r24
    1294:	08 95       	ret
    1296:	12 16       	cp	r1, r18
    1298:	13 06       	cpc	r1, r19
    129a:	14 06       	cpc	r1, r20
    129c:	55 1f       	adc	r21, r21
    129e:	f2 cf       	rjmp	.-28     	; 0x1284 <__fp_split3+0xe>
    12a0:	46 95       	lsr	r20
    12a2:	f1 df       	rcall	.-30     	; 0x1286 <__fp_splitA>
    12a4:	08 c0       	rjmp	.+16     	; 0x12b6 <__fp_splitA+0x30>
    12a6:	16 16       	cp	r1, r22
    12a8:	17 06       	cpc	r1, r23
    12aa:	18 06       	cpc	r1, r24
    12ac:	99 1f       	adc	r25, r25
    12ae:	f1 cf       	rjmp	.-30     	; 0x1292 <__fp_splitA+0xc>
    12b0:	86 95       	lsr	r24
    12b2:	71 05       	cpc	r23, r1
    12b4:	61 05       	cpc	r22, r1
    12b6:	08 94       	sec
    12b8:	08 95       	ret

000012ba <__fp_zero>:
    12ba:	e8 94       	clt

000012bc <__fp_szero>:
    12bc:	bb 27       	eor	r27, r27
    12be:	66 27       	eor	r22, r22
    12c0:	77 27       	eor	r23, r23
    12c2:	cb 01       	movw	r24, r22
    12c4:	97 f9       	bld	r25, 7
    12c6:	08 95       	ret

000012c8 <__gesf2>:
    12c8:	65 df       	rcall	.-310    	; 0x1194 <__fp_cmp>
    12ca:	08 f4       	brcc	.+2      	; 0x12ce <__gesf2+0x6>
    12cc:	8f ef       	ldi	r24, 0xFF	; 255
    12ce:	08 95       	ret

000012d0 <inverse>:
    12d0:	9b 01       	movw	r18, r22
    12d2:	ac 01       	movw	r20, r24
    12d4:	60 e0       	ldi	r22, 0x00	; 0
    12d6:	70 e0       	ldi	r23, 0x00	; 0
    12d8:	80 e8       	ldi	r24, 0x80	; 128
    12da:	9f e3       	ldi	r25, 0x3F	; 63
    12dc:	85 ce       	rjmp	.-758    	; 0xfe8 <__divsf3>

000012de <__mulsf3>:
    12de:	0b d0       	rcall	.+22     	; 0x12f6 <__mulsf3x>
    12e0:	b9 cf       	rjmp	.-142    	; 0x1254 <__fp_round>
    12e2:	aa df       	rcall	.-172    	; 0x1238 <__fp_pscA>
    12e4:	28 f0       	brcs	.+10     	; 0x12f0 <__mulsf3+0x12>
    12e6:	af df       	rcall	.-162    	; 0x1246 <__fp_pscB>
    12e8:	18 f0       	brcs	.+6      	; 0x12f0 <__mulsf3+0x12>
    12ea:	95 23       	and	r25, r21
    12ec:	09 f0       	breq	.+2      	; 0x12f0 <__mulsf3+0x12>
    12ee:	76 cf       	rjmp	.-276    	; 0x11dc <__fp_inf>
    12f0:	7b cf       	rjmp	.-266    	; 0x11e8 <__fp_nan>
    12f2:	11 24       	eor	r1, r1
    12f4:	e3 cf       	rjmp	.-58     	; 0x12bc <__fp_szero>

000012f6 <__mulsf3x>:
    12f6:	bf df       	rcall	.-130    	; 0x1276 <__fp_split3>
    12f8:	a0 f3       	brcs	.-24     	; 0x12e2 <__mulsf3+0x4>

000012fa <__mulsf3_pse>:
    12fa:	95 9f       	mul	r25, r21
    12fc:	d1 f3       	breq	.-12     	; 0x12f2 <__mulsf3+0x14>
    12fe:	95 0f       	add	r25, r21
    1300:	50 e0       	ldi	r21, 0x00	; 0
    1302:	55 1f       	adc	r21, r21
    1304:	62 9f       	mul	r22, r18
    1306:	f0 01       	movw	r30, r0
    1308:	72 9f       	mul	r23, r18
    130a:	bb 27       	eor	r27, r27
    130c:	f0 0d       	add	r31, r0
    130e:	b1 1d       	adc	r27, r1
    1310:	63 9f       	mul	r22, r19
    1312:	aa 27       	eor	r26, r26
    1314:	f0 0d       	add	r31, r0
    1316:	b1 1d       	adc	r27, r1
    1318:	aa 1f       	adc	r26, r26
    131a:	64 9f       	mul	r22, r20
    131c:	66 27       	eor	r22, r22
    131e:	b0 0d       	add	r27, r0
    1320:	a1 1d       	adc	r26, r1
    1322:	66 1f       	adc	r22, r22
    1324:	82 9f       	mul	r24, r18
    1326:	22 27       	eor	r18, r18
    1328:	b0 0d       	add	r27, r0
    132a:	a1 1d       	adc	r26, r1
    132c:	62 1f       	adc	r22, r18
    132e:	73 9f       	mul	r23, r19
    1330:	b0 0d       	add	r27, r0
    1332:	a1 1d       	adc	r26, r1
    1334:	62 1f       	adc	r22, r18
    1336:	83 9f       	mul	r24, r19
    1338:	a0 0d       	add	r26, r0
    133a:	61 1d       	adc	r22, r1
    133c:	22 1f       	adc	r18, r18
    133e:	74 9f       	mul	r23, r20
    1340:	33 27       	eor	r19, r19
    1342:	a0 0d       	add	r26, r0
    1344:	61 1d       	adc	r22, r1
    1346:	23 1f       	adc	r18, r19
    1348:	84 9f       	mul	r24, r20
    134a:	60 0d       	add	r22, r0
    134c:	21 1d       	adc	r18, r1
    134e:	82 2f       	mov	r24, r18
    1350:	76 2f       	mov	r23, r22
    1352:	6a 2f       	mov	r22, r26
    1354:	11 24       	eor	r1, r1
    1356:	9f 57       	subi	r25, 0x7F	; 127
    1358:	50 40       	sbci	r21, 0x00	; 0
    135a:	8a f0       	brmi	.+34     	; 0x137e <__mulsf3_pse+0x84>
    135c:	e1 f0       	breq	.+56     	; 0x1396 <__mulsf3_pse+0x9c>
    135e:	88 23       	and	r24, r24
    1360:	4a f0       	brmi	.+18     	; 0x1374 <__mulsf3_pse+0x7a>
    1362:	ee 0f       	add	r30, r30
    1364:	ff 1f       	adc	r31, r31
    1366:	bb 1f       	adc	r27, r27
    1368:	66 1f       	adc	r22, r22
    136a:	77 1f       	adc	r23, r23
    136c:	88 1f       	adc	r24, r24
    136e:	91 50       	subi	r25, 0x01	; 1
    1370:	50 40       	sbci	r21, 0x00	; 0
    1372:	a9 f7       	brne	.-22     	; 0x135e <__mulsf3_pse+0x64>
    1374:	9e 3f       	cpi	r25, 0xFE	; 254
    1376:	51 05       	cpc	r21, r1
    1378:	70 f0       	brcs	.+28     	; 0x1396 <__mulsf3_pse+0x9c>
    137a:	30 cf       	rjmp	.-416    	; 0x11dc <__fp_inf>
    137c:	9f cf       	rjmp	.-194    	; 0x12bc <__fp_szero>
    137e:	5f 3f       	cpi	r21, 0xFF	; 255
    1380:	ec f3       	brlt	.-6      	; 0x137c <__mulsf3_pse+0x82>
    1382:	98 3e       	cpi	r25, 0xE8	; 232
    1384:	dc f3       	brlt	.-10     	; 0x137c <__mulsf3_pse+0x82>
    1386:	86 95       	lsr	r24
    1388:	77 95       	ror	r23
    138a:	67 95       	ror	r22
    138c:	b7 95       	ror	r27
    138e:	f7 95       	ror	r31
    1390:	e7 95       	ror	r30
    1392:	9f 5f       	subi	r25, 0xFF	; 255
    1394:	c1 f7       	brne	.-16     	; 0x1386 <__mulsf3_pse+0x8c>
    1396:	fe 2b       	or	r31, r30
    1398:	88 0f       	add	r24, r24
    139a:	91 1d       	adc	r25, r1
    139c:	96 95       	lsr	r25
    139e:	87 95       	ror	r24
    13a0:	97 f9       	bld	r25, 7
    13a2:	08 95       	ret

000013a4 <square>:
    13a4:	9b 01       	movw	r18, r22
    13a6:	ac 01       	movw	r20, r24
    13a8:	9a cf       	rjmp	.-204    	; 0x12de <__mulsf3>

000013aa <vfprintf>:
    13aa:	a3 e1       	ldi	r26, 0x13	; 19
    13ac:	b0 e0       	ldi	r27, 0x00	; 0
    13ae:	ea ed       	ldi	r30, 0xDA	; 218
    13b0:	f9 e0       	ldi	r31, 0x09	; 9
    13b2:	57 c3       	rjmp	.+1710   	; 0x1a62 <__prologue_saves__>
    13b4:	7c 01       	movw	r14, r24
    13b6:	1b 01       	movw	r2, r22
    13b8:	6a 01       	movw	r12, r20
    13ba:	fc 01       	movw	r30, r24
    13bc:	17 82       	std	Z+7, r1	; 0x07
    13be:	16 82       	std	Z+6, r1	; 0x06
    13c0:	83 81       	ldd	r24, Z+3	; 0x03
    13c2:	81 ff       	sbrs	r24, 1
    13c4:	49 c3       	rjmp	.+1682   	; 0x1a58 <vfprintf+0x6ae>
    13c6:	be 01       	movw	r22, r28
    13c8:	6f 5f       	subi	r22, 0xFF	; 255
    13ca:	7f 4f       	sbci	r23, 0xFF	; 255
    13cc:	4b 01       	movw	r8, r22
    13ce:	f7 01       	movw	r30, r14
    13d0:	93 81       	ldd	r25, Z+3	; 0x03
    13d2:	f1 01       	movw	r30, r2
    13d4:	93 fd       	sbrc	r25, 3
    13d6:	85 91       	lpm	r24, Z+
    13d8:	93 ff       	sbrs	r25, 3
    13da:	81 91       	ld	r24, Z+
    13dc:	1f 01       	movw	r2, r30
    13de:	88 23       	and	r24, r24
    13e0:	09 f4       	brne	.+2      	; 0x13e4 <vfprintf+0x3a>
    13e2:	36 c3       	rjmp	.+1644   	; 0x1a50 <vfprintf+0x6a6>
    13e4:	85 32       	cpi	r24, 0x25	; 37
    13e6:	39 f4       	brne	.+14     	; 0x13f6 <vfprintf+0x4c>
    13e8:	93 fd       	sbrc	r25, 3
    13ea:	85 91       	lpm	r24, Z+
    13ec:	93 ff       	sbrs	r25, 3
    13ee:	81 91       	ld	r24, Z+
    13f0:	1f 01       	movw	r2, r30
    13f2:	85 32       	cpi	r24, 0x25	; 37
    13f4:	31 f4       	brne	.+12     	; 0x1402 <vfprintf+0x58>
    13f6:	b7 01       	movw	r22, r14
    13f8:	90 e0       	ldi	r25, 0x00	; 0
    13fa:	58 d4       	rcall	.+2224   	; 0x1cac <fputc>
    13fc:	56 01       	movw	r10, r12
    13fe:	65 01       	movw	r12, r10
    1400:	e6 cf       	rjmp	.-52     	; 0x13ce <vfprintf+0x24>
    1402:	10 e0       	ldi	r17, 0x00	; 0
    1404:	51 2c       	mov	r5, r1
    1406:	20 e0       	ldi	r18, 0x00	; 0
    1408:	20 32       	cpi	r18, 0x20	; 32
    140a:	a0 f4       	brcc	.+40     	; 0x1434 <vfprintf+0x8a>
    140c:	8b 32       	cpi	r24, 0x2B	; 43
    140e:	69 f0       	breq	.+26     	; 0x142a <vfprintf+0x80>
    1410:	30 f4       	brcc	.+12     	; 0x141e <vfprintf+0x74>
    1412:	80 32       	cpi	r24, 0x20	; 32
    1414:	59 f0       	breq	.+22     	; 0x142c <vfprintf+0x82>
    1416:	83 32       	cpi	r24, 0x23	; 35
    1418:	69 f4       	brne	.+26     	; 0x1434 <vfprintf+0x8a>
    141a:	20 61       	ori	r18, 0x10	; 16
    141c:	2c c0       	rjmp	.+88     	; 0x1476 <vfprintf+0xcc>
    141e:	8d 32       	cpi	r24, 0x2D	; 45
    1420:	39 f0       	breq	.+14     	; 0x1430 <vfprintf+0x86>
    1422:	80 33       	cpi	r24, 0x30	; 48
    1424:	39 f4       	brne	.+14     	; 0x1434 <vfprintf+0x8a>
    1426:	21 60       	ori	r18, 0x01	; 1
    1428:	26 c0       	rjmp	.+76     	; 0x1476 <vfprintf+0xcc>
    142a:	22 60       	ori	r18, 0x02	; 2
    142c:	24 60       	ori	r18, 0x04	; 4
    142e:	23 c0       	rjmp	.+70     	; 0x1476 <vfprintf+0xcc>
    1430:	28 60       	ori	r18, 0x08	; 8
    1432:	21 c0       	rjmp	.+66     	; 0x1476 <vfprintf+0xcc>
    1434:	27 fd       	sbrc	r18, 7
    1436:	27 c0       	rjmp	.+78     	; 0x1486 <vfprintf+0xdc>
    1438:	30 ed       	ldi	r19, 0xD0	; 208
    143a:	38 0f       	add	r19, r24
    143c:	3a 30       	cpi	r19, 0x0A	; 10
    143e:	78 f4       	brcc	.+30     	; 0x145e <vfprintf+0xb4>
    1440:	26 ff       	sbrs	r18, 6
    1442:	06 c0       	rjmp	.+12     	; 0x1450 <vfprintf+0xa6>
    1444:	fa e0       	ldi	r31, 0x0A	; 10
    1446:	1f 9f       	mul	r17, r31
    1448:	30 0d       	add	r19, r0
    144a:	11 24       	eor	r1, r1
    144c:	13 2f       	mov	r17, r19
    144e:	13 c0       	rjmp	.+38     	; 0x1476 <vfprintf+0xcc>
    1450:	6a e0       	ldi	r22, 0x0A	; 10
    1452:	56 9e       	mul	r5, r22
    1454:	30 0d       	add	r19, r0
    1456:	11 24       	eor	r1, r1
    1458:	53 2e       	mov	r5, r19
    145a:	20 62       	ori	r18, 0x20	; 32
    145c:	0c c0       	rjmp	.+24     	; 0x1476 <vfprintf+0xcc>
    145e:	8e 32       	cpi	r24, 0x2E	; 46
    1460:	21 f4       	brne	.+8      	; 0x146a <vfprintf+0xc0>
    1462:	26 fd       	sbrc	r18, 6
    1464:	f5 c2       	rjmp	.+1514   	; 0x1a50 <vfprintf+0x6a6>
    1466:	20 64       	ori	r18, 0x40	; 64
    1468:	06 c0       	rjmp	.+12     	; 0x1476 <vfprintf+0xcc>
    146a:	8c 36       	cpi	r24, 0x6C	; 108
    146c:	11 f4       	brne	.+4      	; 0x1472 <vfprintf+0xc8>
    146e:	20 68       	ori	r18, 0x80	; 128
    1470:	02 c0       	rjmp	.+4      	; 0x1476 <vfprintf+0xcc>
    1472:	88 36       	cpi	r24, 0x68	; 104
    1474:	41 f4       	brne	.+16     	; 0x1486 <vfprintf+0xdc>
    1476:	f1 01       	movw	r30, r2
    1478:	93 fd       	sbrc	r25, 3
    147a:	85 91       	lpm	r24, Z+
    147c:	93 ff       	sbrs	r25, 3
    147e:	81 91       	ld	r24, Z+
    1480:	1f 01       	movw	r2, r30
    1482:	81 11       	cpse	r24, r1
    1484:	c1 cf       	rjmp	.-126    	; 0x1408 <vfprintf+0x5e>
    1486:	9b eb       	ldi	r25, 0xBB	; 187
    1488:	98 0f       	add	r25, r24
    148a:	93 30       	cpi	r25, 0x03	; 3
    148c:	18 f4       	brcc	.+6      	; 0x1494 <vfprintf+0xea>
    148e:	20 61       	ori	r18, 0x10	; 16
    1490:	80 5e       	subi	r24, 0xE0	; 224
    1492:	06 c0       	rjmp	.+12     	; 0x14a0 <vfprintf+0xf6>
    1494:	9b e9       	ldi	r25, 0x9B	; 155
    1496:	98 0f       	add	r25, r24
    1498:	93 30       	cpi	r25, 0x03	; 3
    149a:	08 f0       	brcs	.+2      	; 0x149e <vfprintf+0xf4>
    149c:	9a c1       	rjmp	.+820    	; 0x17d2 <vfprintf+0x428>
    149e:	2f 7e       	andi	r18, 0xEF	; 239
    14a0:	26 ff       	sbrs	r18, 6
    14a2:	16 e0       	ldi	r17, 0x06	; 6
    14a4:	2f 73       	andi	r18, 0x3F	; 63
    14a6:	72 2e       	mov	r7, r18
    14a8:	85 36       	cpi	r24, 0x65	; 101
    14aa:	21 f4       	brne	.+8      	; 0x14b4 <vfprintf+0x10a>
    14ac:	f2 2f       	mov	r31, r18
    14ae:	f0 64       	ori	r31, 0x40	; 64
    14b0:	7f 2e       	mov	r7, r31
    14b2:	08 c0       	rjmp	.+16     	; 0x14c4 <vfprintf+0x11a>
    14b4:	86 36       	cpi	r24, 0x66	; 102
    14b6:	21 f4       	brne	.+8      	; 0x14c0 <vfprintf+0x116>
    14b8:	62 2f       	mov	r22, r18
    14ba:	60 68       	ori	r22, 0x80	; 128
    14bc:	76 2e       	mov	r7, r22
    14be:	02 c0       	rjmp	.+4      	; 0x14c4 <vfprintf+0x11a>
    14c0:	11 11       	cpse	r17, r1
    14c2:	11 50       	subi	r17, 0x01	; 1
    14c4:	77 fe       	sbrs	r7, 7
    14c6:	07 c0       	rjmp	.+14     	; 0x14d6 <vfprintf+0x12c>
    14c8:	1c 33       	cpi	r17, 0x3C	; 60
    14ca:	48 f4       	brcc	.+18     	; 0x14de <vfprintf+0x134>
    14cc:	44 24       	eor	r4, r4
    14ce:	43 94       	inc	r4
    14d0:	41 0e       	add	r4, r17
    14d2:	27 e0       	ldi	r18, 0x07	; 7
    14d4:	0b c0       	rjmp	.+22     	; 0x14ec <vfprintf+0x142>
    14d6:	18 30       	cpi	r17, 0x08	; 8
    14d8:	30 f4       	brcc	.+12     	; 0x14e6 <vfprintf+0x13c>
    14da:	21 2f       	mov	r18, r17
    14dc:	06 c0       	rjmp	.+12     	; 0x14ea <vfprintf+0x140>
    14de:	27 e0       	ldi	r18, 0x07	; 7
    14e0:	4c e3       	ldi	r20, 0x3C	; 60
    14e2:	44 2e       	mov	r4, r20
    14e4:	03 c0       	rjmp	.+6      	; 0x14ec <vfprintf+0x142>
    14e6:	27 e0       	ldi	r18, 0x07	; 7
    14e8:	17 e0       	ldi	r17, 0x07	; 7
    14ea:	41 2c       	mov	r4, r1
    14ec:	56 01       	movw	r10, r12
    14ee:	74 e0       	ldi	r23, 0x04	; 4
    14f0:	a7 0e       	add	r10, r23
    14f2:	b1 1c       	adc	r11, r1
    14f4:	f6 01       	movw	r30, r12
    14f6:	60 81       	ld	r22, Z
    14f8:	71 81       	ldd	r23, Z+1	; 0x01
    14fa:	82 81       	ldd	r24, Z+2	; 0x02
    14fc:	93 81       	ldd	r25, Z+3	; 0x03
    14fe:	04 2d       	mov	r16, r4
    1500:	a4 01       	movw	r20, r8
    1502:	e6 d2       	rcall	.+1484   	; 0x1ad0 <__ftoa_engine>
    1504:	6c 01       	movw	r12, r24
    1506:	09 81       	ldd	r16, Y+1	; 0x01
    1508:	00 ff       	sbrs	r16, 0
    150a:	02 c0       	rjmp	.+4      	; 0x1510 <vfprintf+0x166>
    150c:	03 ff       	sbrs	r16, 3
    150e:	06 c0       	rjmp	.+12     	; 0x151c <vfprintf+0x172>
    1510:	71 fc       	sbrc	r7, 1
    1512:	07 c0       	rjmp	.+14     	; 0x1522 <vfprintf+0x178>
    1514:	72 fc       	sbrc	r7, 2
    1516:	08 c0       	rjmp	.+16     	; 0x1528 <vfprintf+0x17e>
    1518:	61 2c       	mov	r6, r1
    151a:	08 c0       	rjmp	.+16     	; 0x152c <vfprintf+0x182>
    151c:	3d e2       	ldi	r19, 0x2D	; 45
    151e:	63 2e       	mov	r6, r19
    1520:	05 c0       	rjmp	.+10     	; 0x152c <vfprintf+0x182>
    1522:	2b e2       	ldi	r18, 0x2B	; 43
    1524:	62 2e       	mov	r6, r18
    1526:	02 c0       	rjmp	.+4      	; 0x152c <vfprintf+0x182>
    1528:	90 e2       	ldi	r25, 0x20	; 32
    152a:	69 2e       	mov	r6, r25
    152c:	80 2f       	mov	r24, r16
    152e:	8c 70       	andi	r24, 0x0C	; 12
    1530:	81 f1       	breq	.+96     	; 0x1592 <vfprintf+0x1e8>
    1532:	66 20       	and	r6, r6
    1534:	11 f0       	breq	.+4      	; 0x153a <vfprintf+0x190>
    1536:	84 e0       	ldi	r24, 0x04	; 4
    1538:	01 c0       	rjmp	.+2      	; 0x153c <vfprintf+0x192>
    153a:	83 e0       	ldi	r24, 0x03	; 3
    153c:	85 15       	cp	r24, r5
    153e:	10 f0       	brcs	.+4      	; 0x1544 <vfprintf+0x19a>
    1540:	51 2c       	mov	r5, r1
    1542:	0a c0       	rjmp	.+20     	; 0x1558 <vfprintf+0x1ae>
    1544:	58 1a       	sub	r5, r24
    1546:	73 fc       	sbrc	r7, 3
    1548:	07 c0       	rjmp	.+14     	; 0x1558 <vfprintf+0x1ae>
    154a:	b7 01       	movw	r22, r14
    154c:	80 e2       	ldi	r24, 0x20	; 32
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	ad d3       	rcall	.+1882   	; 0x1cac <fputc>
    1552:	5a 94       	dec	r5
    1554:	d1 f7       	brne	.-12     	; 0x154a <vfprintf+0x1a0>
    1556:	f4 cf       	rjmp	.-24     	; 0x1540 <vfprintf+0x196>
    1558:	66 20       	and	r6, r6
    155a:	21 f0       	breq	.+8      	; 0x1564 <vfprintf+0x1ba>
    155c:	b7 01       	movw	r22, r14
    155e:	86 2d       	mov	r24, r6
    1560:	90 e0       	ldi	r25, 0x00	; 0
    1562:	a4 d3       	rcall	.+1864   	; 0x1cac <fputc>
    1564:	03 fd       	sbrc	r16, 3
    1566:	03 c0       	rjmp	.+6      	; 0x156e <vfprintf+0x1c4>
    1568:	06 e6       	ldi	r16, 0x66	; 102
    156a:	10 e0       	ldi	r17, 0x00	; 0
    156c:	02 c0       	rjmp	.+4      	; 0x1572 <vfprintf+0x1c8>
    156e:	02 e6       	ldi	r16, 0x62	; 98
    1570:	10 e0       	ldi	r17, 0x00	; 0
    1572:	f7 2d       	mov	r31, r7
    1574:	f0 71       	andi	r31, 0x10	; 16
    1576:	7f 2e       	mov	r7, r31
    1578:	f8 01       	movw	r30, r16
    157a:	84 91       	lpm	r24, Z
    157c:	88 23       	and	r24, r24
    157e:	09 f4       	brne	.+2      	; 0x1582 <vfprintf+0x1d8>
    1580:	5e c2       	rjmp	.+1212   	; 0x1a3e <vfprintf+0x694>
    1582:	71 10       	cpse	r7, r1
    1584:	80 52       	subi	r24, 0x20	; 32
    1586:	b7 01       	movw	r22, r14
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	90 d3       	rcall	.+1824   	; 0x1cac <fputc>
    158c:	0f 5f       	subi	r16, 0xFF	; 255
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	f3 cf       	rjmp	.-26     	; 0x1578 <vfprintf+0x1ce>
    1592:	77 fe       	sbrs	r7, 7
    1594:	0f c0       	rjmp	.+30     	; 0x15b4 <vfprintf+0x20a>
    1596:	4c 0c       	add	r4, r12
    1598:	04 ff       	sbrs	r16, 4
    159a:	04 c0       	rjmp	.+8      	; 0x15a4 <vfprintf+0x1fa>
    159c:	8a 81       	ldd	r24, Y+2	; 0x02
    159e:	81 33       	cpi	r24, 0x31	; 49
    15a0:	09 f4       	brne	.+2      	; 0x15a4 <vfprintf+0x1fa>
    15a2:	4a 94       	dec	r4
    15a4:	14 14       	cp	r1, r4
    15a6:	74 f5       	brge	.+92     	; 0x1604 <vfprintf+0x25a>
    15a8:	f8 e0       	ldi	r31, 0x08	; 8
    15aa:	f4 15       	cp	r31, r4
    15ac:	78 f5       	brcc	.+94     	; 0x160c <vfprintf+0x262>
    15ae:	88 e0       	ldi	r24, 0x08	; 8
    15b0:	48 2e       	mov	r4, r24
    15b2:	2c c0       	rjmp	.+88     	; 0x160c <vfprintf+0x262>
    15b4:	76 fc       	sbrc	r7, 6
    15b6:	2a c0       	rjmp	.+84     	; 0x160c <vfprintf+0x262>
    15b8:	81 2f       	mov	r24, r17
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	8c 15       	cp	r24, r12
    15be:	9d 05       	cpc	r25, r13
    15c0:	9c f0       	brlt	.+38     	; 0x15e8 <vfprintf+0x23e>
    15c2:	6c ef       	ldi	r22, 0xFC	; 252
    15c4:	c6 16       	cp	r12, r22
    15c6:	6f ef       	ldi	r22, 0xFF	; 255
    15c8:	d6 06       	cpc	r13, r22
    15ca:	74 f0       	brlt	.+28     	; 0x15e8 <vfprintf+0x23e>
    15cc:	77 2d       	mov	r23, r7
    15ce:	70 68       	ori	r23, 0x80	; 128
    15d0:	77 2e       	mov	r7, r23
    15d2:	0a c0       	rjmp	.+20     	; 0x15e8 <vfprintf+0x23e>
    15d4:	e2 e0       	ldi	r30, 0x02	; 2
    15d6:	f0 e0       	ldi	r31, 0x00	; 0
    15d8:	ec 0f       	add	r30, r28
    15da:	fd 1f       	adc	r31, r29
    15dc:	e1 0f       	add	r30, r17
    15de:	f1 1d       	adc	r31, r1
    15e0:	80 81       	ld	r24, Z
    15e2:	80 33       	cpi	r24, 0x30	; 48
    15e4:	19 f4       	brne	.+6      	; 0x15ec <vfprintf+0x242>
    15e6:	11 50       	subi	r17, 0x01	; 1
    15e8:	11 11       	cpse	r17, r1
    15ea:	f4 cf       	rjmp	.-24     	; 0x15d4 <vfprintf+0x22a>
    15ec:	77 fe       	sbrs	r7, 7
    15ee:	0e c0       	rjmp	.+28     	; 0x160c <vfprintf+0x262>
    15f0:	44 24       	eor	r4, r4
    15f2:	43 94       	inc	r4
    15f4:	41 0e       	add	r4, r17
    15f6:	81 2f       	mov	r24, r17
    15f8:	90 e0       	ldi	r25, 0x00	; 0
    15fa:	c8 16       	cp	r12, r24
    15fc:	d9 06       	cpc	r13, r25
    15fe:	2c f4       	brge	.+10     	; 0x160a <vfprintf+0x260>
    1600:	1c 19       	sub	r17, r12
    1602:	04 c0       	rjmp	.+8      	; 0x160c <vfprintf+0x262>
    1604:	44 24       	eor	r4, r4
    1606:	43 94       	inc	r4
    1608:	01 c0       	rjmp	.+2      	; 0x160c <vfprintf+0x262>
    160a:	10 e0       	ldi	r17, 0x00	; 0
    160c:	77 fe       	sbrs	r7, 7
    160e:	07 c0       	rjmp	.+14     	; 0x161e <vfprintf+0x274>
    1610:	1c 14       	cp	r1, r12
    1612:	1d 04       	cpc	r1, r13
    1614:	3c f4       	brge	.+14     	; 0x1624 <vfprintf+0x27a>
    1616:	96 01       	movw	r18, r12
    1618:	2f 5f       	subi	r18, 0xFF	; 255
    161a:	3f 4f       	sbci	r19, 0xFF	; 255
    161c:	05 c0       	rjmp	.+10     	; 0x1628 <vfprintf+0x27e>
    161e:	25 e0       	ldi	r18, 0x05	; 5
    1620:	30 e0       	ldi	r19, 0x00	; 0
    1622:	02 c0       	rjmp	.+4      	; 0x1628 <vfprintf+0x27e>
    1624:	21 e0       	ldi	r18, 0x01	; 1
    1626:	30 e0       	ldi	r19, 0x00	; 0
    1628:	66 20       	and	r6, r6
    162a:	11 f0       	breq	.+4      	; 0x1630 <vfprintf+0x286>
    162c:	2f 5f       	subi	r18, 0xFF	; 255
    162e:	3f 4f       	sbci	r19, 0xFF	; 255
    1630:	11 23       	and	r17, r17
    1632:	31 f0       	breq	.+12     	; 0x1640 <vfprintf+0x296>
    1634:	41 2f       	mov	r20, r17
    1636:	50 e0       	ldi	r21, 0x00	; 0
    1638:	4f 5f       	subi	r20, 0xFF	; 255
    163a:	5f 4f       	sbci	r21, 0xFF	; 255
    163c:	24 0f       	add	r18, r20
    163e:	35 1f       	adc	r19, r21
    1640:	45 2d       	mov	r20, r5
    1642:	50 e0       	ldi	r21, 0x00	; 0
    1644:	24 17       	cp	r18, r20
    1646:	35 07       	cpc	r19, r21
    1648:	14 f4       	brge	.+4      	; 0x164e <vfprintf+0x2a4>
    164a:	52 1a       	sub	r5, r18
    164c:	01 c0       	rjmp	.+2      	; 0x1650 <vfprintf+0x2a6>
    164e:	51 2c       	mov	r5, r1
    1650:	87 2d       	mov	r24, r7
    1652:	89 70       	andi	r24, 0x09	; 9
    1654:	41 f4       	brne	.+16     	; 0x1666 <vfprintf+0x2bc>
    1656:	55 20       	and	r5, r5
    1658:	31 f0       	breq	.+12     	; 0x1666 <vfprintf+0x2bc>
    165a:	b7 01       	movw	r22, r14
    165c:	80 e2       	ldi	r24, 0x20	; 32
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	25 d3       	rcall	.+1610   	; 0x1cac <fputc>
    1662:	5a 94       	dec	r5
    1664:	f8 cf       	rjmp	.-16     	; 0x1656 <vfprintf+0x2ac>
    1666:	66 20       	and	r6, r6
    1668:	21 f0       	breq	.+8      	; 0x1672 <vfprintf+0x2c8>
    166a:	b7 01       	movw	r22, r14
    166c:	86 2d       	mov	r24, r6
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	1d d3       	rcall	.+1594   	; 0x1cac <fputc>
    1672:	73 fc       	sbrc	r7, 3
    1674:	08 c0       	rjmp	.+16     	; 0x1686 <vfprintf+0x2dc>
    1676:	55 20       	and	r5, r5
    1678:	31 f0       	breq	.+12     	; 0x1686 <vfprintf+0x2dc>
    167a:	b7 01       	movw	r22, r14
    167c:	80 e3       	ldi	r24, 0x30	; 48
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	15 d3       	rcall	.+1578   	; 0x1cac <fputc>
    1682:	5a 94       	dec	r5
    1684:	f8 cf       	rjmp	.-16     	; 0x1676 <vfprintf+0x2cc>
    1686:	77 fe       	sbrs	r7, 7
    1688:	5d c0       	rjmp	.+186    	; 0x1744 <vfprintf+0x39a>
    168a:	9c 2d       	mov	r25, r12
    168c:	8d 2d       	mov	r24, r13
    168e:	d7 fe       	sbrs	r13, 7
    1690:	02 c0       	rjmp	.+4      	; 0x1696 <vfprintf+0x2ec>
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	69 2e       	mov	r6, r25
    1698:	78 2e       	mov	r7, r24
    169a:	40 e0       	ldi	r20, 0x00	; 0
    169c:	50 e0       	ldi	r21, 0x00	; 0
    169e:	c6 01       	movw	r24, r12
    16a0:	84 19       	sub	r24, r4
    16a2:	91 09       	sbc	r25, r1
    16a4:	9d 87       	std	Y+13, r25	; 0x0d
    16a6:	8c 87       	std	Y+12, r24	; 0x0c
    16a8:	96 01       	movw	r18, r12
    16aa:	26 19       	sub	r18, r6
    16ac:	37 09       	sbc	r19, r7
    16ae:	28 0d       	add	r18, r8
    16b0:	39 1d       	adc	r19, r9
    16b2:	81 2f       	mov	r24, r17
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	ee 27       	eor	r30, r30
    16b8:	ff 27       	eor	r31, r31
    16ba:	e8 1b       	sub	r30, r24
    16bc:	f9 0b       	sbc	r31, r25
    16be:	ff 87       	std	Y+15, r31	; 0x0f
    16c0:	ee 87       	std	Y+14, r30	; 0x0e
    16c2:	ff ef       	ldi	r31, 0xFF	; 255
    16c4:	6f 16       	cp	r6, r31
    16c6:	7f 06       	cpc	r7, r31
    16c8:	61 f4       	brne	.+24     	; 0x16e2 <vfprintf+0x338>
    16ca:	b7 01       	movw	r22, r14
    16cc:	8e e2       	ldi	r24, 0x2E	; 46
    16ce:	90 e0       	ldi	r25, 0x00	; 0
    16d0:	2b 8b       	std	Y+19, r18	; 0x13
    16d2:	3a 8b       	std	Y+18, r19	; 0x12
    16d4:	48 8b       	std	Y+16, r20	; 0x10
    16d6:	59 8b       	std	Y+17, r21	; 0x11
    16d8:	e9 d2       	rcall	.+1490   	; 0x1cac <fputc>
    16da:	59 89       	ldd	r21, Y+17	; 0x11
    16dc:	48 89       	ldd	r20, Y+16	; 0x10
    16de:	3a 89       	ldd	r19, Y+18	; 0x12
    16e0:	2b 89       	ldd	r18, Y+19	; 0x13
    16e2:	c6 14       	cp	r12, r6
    16e4:	d7 04       	cpc	r13, r7
    16e6:	54 f0       	brlt	.+20     	; 0x16fc <vfprintf+0x352>
    16e8:	6c 85       	ldd	r22, Y+12	; 0x0c
    16ea:	7d 85       	ldd	r23, Y+13	; 0x0d
    16ec:	66 15       	cp	r22, r6
    16ee:	77 05       	cpc	r23, r7
    16f0:	2c f4       	brge	.+10     	; 0x16fc <vfprintf+0x352>
    16f2:	f9 01       	movw	r30, r18
    16f4:	e4 0f       	add	r30, r20
    16f6:	f5 1f       	adc	r31, r21
    16f8:	81 81       	ldd	r24, Z+1	; 0x01
    16fa:	01 c0       	rjmp	.+2      	; 0x16fe <vfprintf+0x354>
    16fc:	80 e3       	ldi	r24, 0x30	; 48
    16fe:	71 e0       	ldi	r23, 0x01	; 1
    1700:	67 1a       	sub	r6, r23
    1702:	71 08       	sbc	r7, r1
    1704:	4f 5f       	subi	r20, 0xFF	; 255
    1706:	5f 4f       	sbci	r21, 0xFF	; 255
    1708:	ee 85       	ldd	r30, Y+14	; 0x0e
    170a:	ff 85       	ldd	r31, Y+15	; 0x0f
    170c:	6e 16       	cp	r6, r30
    170e:	7f 06       	cpc	r7, r31
    1710:	64 f0       	brlt	.+24     	; 0x172a <vfprintf+0x380>
    1712:	b7 01       	movw	r22, r14
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	2b 8b       	std	Y+19, r18	; 0x13
    1718:	3a 8b       	std	Y+18, r19	; 0x12
    171a:	48 8b       	std	Y+16, r20	; 0x10
    171c:	59 8b       	std	Y+17, r21	; 0x11
    171e:	c6 d2       	rcall	.+1420   	; 0x1cac <fputc>
    1720:	2b 89       	ldd	r18, Y+19	; 0x13
    1722:	3a 89       	ldd	r19, Y+18	; 0x12
    1724:	48 89       	ldd	r20, Y+16	; 0x10
    1726:	59 89       	ldd	r21, Y+17	; 0x11
    1728:	cc cf       	rjmp	.-104    	; 0x16c2 <vfprintf+0x318>
    172a:	6c 14       	cp	r6, r12
    172c:	7d 04       	cpc	r7, r13
    172e:	39 f4       	brne	.+14     	; 0x173e <vfprintf+0x394>
    1730:	9a 81       	ldd	r25, Y+2	; 0x02
    1732:	96 33       	cpi	r25, 0x36	; 54
    1734:	18 f4       	brcc	.+6      	; 0x173c <vfprintf+0x392>
    1736:	95 33       	cpi	r25, 0x35	; 53
    1738:	11 f4       	brne	.+4      	; 0x173e <vfprintf+0x394>
    173a:	04 ff       	sbrs	r16, 4
    173c:	81 e3       	ldi	r24, 0x31	; 49
    173e:	b7 01       	movw	r22, r14
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	45 c0       	rjmp	.+138    	; 0x17ce <vfprintf+0x424>
    1744:	8a 81       	ldd	r24, Y+2	; 0x02
    1746:	81 33       	cpi	r24, 0x31	; 49
    1748:	09 f0       	breq	.+2      	; 0x174c <vfprintf+0x3a2>
    174a:	0f 7e       	andi	r16, 0xEF	; 239
    174c:	b7 01       	movw	r22, r14
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	ad d2       	rcall	.+1370   	; 0x1cac <fputc>
    1752:	11 11       	cpse	r17, r1
    1754:	05 c0       	rjmp	.+10     	; 0x1760 <vfprintf+0x3b6>
    1756:	74 fe       	sbrs	r7, 4
    1758:	16 c0       	rjmp	.+44     	; 0x1786 <vfprintf+0x3dc>
    175a:	85 e4       	ldi	r24, 0x45	; 69
    175c:	90 e0       	ldi	r25, 0x00	; 0
    175e:	15 c0       	rjmp	.+42     	; 0x178a <vfprintf+0x3e0>
    1760:	b7 01       	movw	r22, r14
    1762:	8e e2       	ldi	r24, 0x2E	; 46
    1764:	90 e0       	ldi	r25, 0x00	; 0
    1766:	a2 d2       	rcall	.+1348   	; 0x1cac <fputc>
    1768:	82 e0       	ldi	r24, 0x02	; 2
    176a:	66 24       	eor	r6, r6
    176c:	63 94       	inc	r6
    176e:	68 0e       	add	r6, r24
    1770:	f4 01       	movw	r30, r8
    1772:	e8 0f       	add	r30, r24
    1774:	f1 1d       	adc	r31, r1
    1776:	80 81       	ld	r24, Z
    1778:	b7 01       	movw	r22, r14
    177a:	90 e0       	ldi	r25, 0x00	; 0
    177c:	97 d2       	rcall	.+1326   	; 0x1cac <fputc>
    177e:	11 50       	subi	r17, 0x01	; 1
    1780:	51 f3       	breq	.-44     	; 0x1756 <vfprintf+0x3ac>
    1782:	86 2d       	mov	r24, r6
    1784:	f2 cf       	rjmp	.-28     	; 0x176a <vfprintf+0x3c0>
    1786:	85 e6       	ldi	r24, 0x65	; 101
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	b7 01       	movw	r22, r14
    178c:	8f d2       	rcall	.+1310   	; 0x1cac <fputc>
    178e:	d7 fc       	sbrc	r13, 7
    1790:	05 c0       	rjmp	.+10     	; 0x179c <vfprintf+0x3f2>
    1792:	c1 14       	cp	r12, r1
    1794:	d1 04       	cpc	r13, r1
    1796:	39 f4       	brne	.+14     	; 0x17a6 <vfprintf+0x3fc>
    1798:	04 ff       	sbrs	r16, 4
    179a:	05 c0       	rjmp	.+10     	; 0x17a6 <vfprintf+0x3fc>
    179c:	d1 94       	neg	r13
    179e:	c1 94       	neg	r12
    17a0:	d1 08       	sbc	r13, r1
    17a2:	8d e2       	ldi	r24, 0x2D	; 45
    17a4:	01 c0       	rjmp	.+2      	; 0x17a8 <vfprintf+0x3fe>
    17a6:	8b e2       	ldi	r24, 0x2B	; 43
    17a8:	b7 01       	movw	r22, r14
    17aa:	90 e0       	ldi	r25, 0x00	; 0
    17ac:	7f d2       	rcall	.+1278   	; 0x1cac <fputc>
    17ae:	80 e3       	ldi	r24, 0x30	; 48
    17b0:	6a e0       	ldi	r22, 0x0A	; 10
    17b2:	c6 16       	cp	r12, r22
    17b4:	d1 04       	cpc	r13, r1
    17b6:	2c f0       	brlt	.+10     	; 0x17c2 <vfprintf+0x418>
    17b8:	8f 5f       	subi	r24, 0xFF	; 255
    17ba:	fa e0       	ldi	r31, 0x0A	; 10
    17bc:	cf 1a       	sub	r12, r31
    17be:	d1 08       	sbc	r13, r1
    17c0:	f7 cf       	rjmp	.-18     	; 0x17b0 <vfprintf+0x406>
    17c2:	b7 01       	movw	r22, r14
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	72 d2       	rcall	.+1252   	; 0x1cac <fputc>
    17c8:	b7 01       	movw	r22, r14
    17ca:	c6 01       	movw	r24, r12
    17cc:	c0 96       	adiw	r24, 0x30	; 48
    17ce:	6e d2       	rcall	.+1244   	; 0x1cac <fputc>
    17d0:	36 c1       	rjmp	.+620    	; 0x1a3e <vfprintf+0x694>
    17d2:	83 36       	cpi	r24, 0x63	; 99
    17d4:	31 f0       	breq	.+12     	; 0x17e2 <vfprintf+0x438>
    17d6:	83 37       	cpi	r24, 0x73	; 115
    17d8:	79 f0       	breq	.+30     	; 0x17f8 <vfprintf+0x44e>
    17da:	83 35       	cpi	r24, 0x53	; 83
    17dc:	09 f0       	breq	.+2      	; 0x17e0 <vfprintf+0x436>
    17de:	54 c0       	rjmp	.+168    	; 0x1888 <vfprintf+0x4de>
    17e0:	20 c0       	rjmp	.+64     	; 0x1822 <vfprintf+0x478>
    17e2:	56 01       	movw	r10, r12
    17e4:	72 e0       	ldi	r23, 0x02	; 2
    17e6:	a7 0e       	add	r10, r23
    17e8:	b1 1c       	adc	r11, r1
    17ea:	f6 01       	movw	r30, r12
    17ec:	80 81       	ld	r24, Z
    17ee:	89 83       	std	Y+1, r24	; 0x01
    17f0:	01 e0       	ldi	r16, 0x01	; 1
    17f2:	10 e0       	ldi	r17, 0x00	; 0
    17f4:	64 01       	movw	r12, r8
    17f6:	13 c0       	rjmp	.+38     	; 0x181e <vfprintf+0x474>
    17f8:	56 01       	movw	r10, r12
    17fa:	f2 e0       	ldi	r31, 0x02	; 2
    17fc:	af 0e       	add	r10, r31
    17fe:	b1 1c       	adc	r11, r1
    1800:	f6 01       	movw	r30, r12
    1802:	c0 80       	ld	r12, Z
    1804:	d1 80       	ldd	r13, Z+1	; 0x01
    1806:	26 ff       	sbrs	r18, 6
    1808:	03 c0       	rjmp	.+6      	; 0x1810 <vfprintf+0x466>
    180a:	61 2f       	mov	r22, r17
    180c:	70 e0       	ldi	r23, 0x00	; 0
    180e:	02 c0       	rjmp	.+4      	; 0x1814 <vfprintf+0x46a>
    1810:	6f ef       	ldi	r22, 0xFF	; 255
    1812:	7f ef       	ldi	r23, 0xFF	; 255
    1814:	c6 01       	movw	r24, r12
    1816:	2b 8b       	std	Y+19, r18	; 0x13
    1818:	3e d2       	rcall	.+1148   	; 0x1c96 <strnlen>
    181a:	8c 01       	movw	r16, r24
    181c:	2b 89       	ldd	r18, Y+19	; 0x13
    181e:	2f 77       	andi	r18, 0x7F	; 127
    1820:	14 c0       	rjmp	.+40     	; 0x184a <vfprintf+0x4a0>
    1822:	56 01       	movw	r10, r12
    1824:	f2 e0       	ldi	r31, 0x02	; 2
    1826:	af 0e       	add	r10, r31
    1828:	b1 1c       	adc	r11, r1
    182a:	f6 01       	movw	r30, r12
    182c:	c0 80       	ld	r12, Z
    182e:	d1 80       	ldd	r13, Z+1	; 0x01
    1830:	26 ff       	sbrs	r18, 6
    1832:	03 c0       	rjmp	.+6      	; 0x183a <vfprintf+0x490>
    1834:	61 2f       	mov	r22, r17
    1836:	70 e0       	ldi	r23, 0x00	; 0
    1838:	02 c0       	rjmp	.+4      	; 0x183e <vfprintf+0x494>
    183a:	6f ef       	ldi	r22, 0xFF	; 255
    183c:	7f ef       	ldi	r23, 0xFF	; 255
    183e:	c6 01       	movw	r24, r12
    1840:	2b 8b       	std	Y+19, r18	; 0x13
    1842:	1e d2       	rcall	.+1084   	; 0x1c80 <strnlen_P>
    1844:	8c 01       	movw	r16, r24
    1846:	2b 89       	ldd	r18, Y+19	; 0x13
    1848:	20 68       	ori	r18, 0x80	; 128
    184a:	72 2e       	mov	r7, r18
    184c:	23 fd       	sbrc	r18, 3
    184e:	18 c0       	rjmp	.+48     	; 0x1880 <vfprintf+0x4d6>
    1850:	85 2d       	mov	r24, r5
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	08 17       	cp	r16, r24
    1856:	19 07       	cpc	r17, r25
    1858:	98 f4       	brcc	.+38     	; 0x1880 <vfprintf+0x4d6>
    185a:	b7 01       	movw	r22, r14
    185c:	80 e2       	ldi	r24, 0x20	; 32
    185e:	90 e0       	ldi	r25, 0x00	; 0
    1860:	25 d2       	rcall	.+1098   	; 0x1cac <fputc>
    1862:	5a 94       	dec	r5
    1864:	f5 cf       	rjmp	.-22     	; 0x1850 <vfprintf+0x4a6>
    1866:	f6 01       	movw	r30, r12
    1868:	77 fc       	sbrc	r7, 7
    186a:	85 91       	lpm	r24, Z+
    186c:	77 fe       	sbrs	r7, 7
    186e:	81 91       	ld	r24, Z+
    1870:	6f 01       	movw	r12, r30
    1872:	b7 01       	movw	r22, r14
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	1a d2       	rcall	.+1076   	; 0x1cac <fputc>
    1878:	51 10       	cpse	r5, r1
    187a:	5a 94       	dec	r5
    187c:	01 50       	subi	r16, 0x01	; 1
    187e:	11 09       	sbc	r17, r1
    1880:	01 15       	cp	r16, r1
    1882:	11 05       	cpc	r17, r1
    1884:	81 f7       	brne	.-32     	; 0x1866 <vfprintf+0x4bc>
    1886:	db c0       	rjmp	.+438    	; 0x1a3e <vfprintf+0x694>
    1888:	84 36       	cpi	r24, 0x64	; 100
    188a:	11 f0       	breq	.+4      	; 0x1890 <vfprintf+0x4e6>
    188c:	89 36       	cpi	r24, 0x69	; 105
    188e:	49 f5       	brne	.+82     	; 0x18e2 <vfprintf+0x538>
    1890:	56 01       	movw	r10, r12
    1892:	27 ff       	sbrs	r18, 7
    1894:	09 c0       	rjmp	.+18     	; 0x18a8 <vfprintf+0x4fe>
    1896:	f4 e0       	ldi	r31, 0x04	; 4
    1898:	af 0e       	add	r10, r31
    189a:	b1 1c       	adc	r11, r1
    189c:	f6 01       	movw	r30, r12
    189e:	60 81       	ld	r22, Z
    18a0:	71 81       	ldd	r23, Z+1	; 0x01
    18a2:	82 81       	ldd	r24, Z+2	; 0x02
    18a4:	93 81       	ldd	r25, Z+3	; 0x03
    18a6:	0a c0       	rjmp	.+20     	; 0x18bc <vfprintf+0x512>
    18a8:	f2 e0       	ldi	r31, 0x02	; 2
    18aa:	af 0e       	add	r10, r31
    18ac:	b1 1c       	adc	r11, r1
    18ae:	f6 01       	movw	r30, r12
    18b0:	60 81       	ld	r22, Z
    18b2:	71 81       	ldd	r23, Z+1	; 0x01
    18b4:	88 27       	eor	r24, r24
    18b6:	77 fd       	sbrc	r23, 7
    18b8:	80 95       	com	r24
    18ba:	98 2f       	mov	r25, r24
    18bc:	02 2f       	mov	r16, r18
    18be:	0f 76       	andi	r16, 0x6F	; 111
    18c0:	97 ff       	sbrs	r25, 7
    18c2:	08 c0       	rjmp	.+16     	; 0x18d4 <vfprintf+0x52a>
    18c4:	90 95       	com	r25
    18c6:	80 95       	com	r24
    18c8:	70 95       	com	r23
    18ca:	61 95       	neg	r22
    18cc:	7f 4f       	sbci	r23, 0xFF	; 255
    18ce:	8f 4f       	sbci	r24, 0xFF	; 255
    18d0:	9f 4f       	sbci	r25, 0xFF	; 255
    18d2:	00 68       	ori	r16, 0x80	; 128
    18d4:	2a e0       	ldi	r18, 0x0A	; 10
    18d6:	30 e0       	ldi	r19, 0x00	; 0
    18d8:	a4 01       	movw	r20, r8
    18da:	2b d2       	rcall	.+1110   	; 0x1d32 <__ultoa_invert>
    18dc:	c8 2e       	mov	r12, r24
    18de:	c8 18       	sub	r12, r8
    18e0:	3d c0       	rjmp	.+122    	; 0x195c <vfprintf+0x5b2>
    18e2:	02 2f       	mov	r16, r18
    18e4:	85 37       	cpi	r24, 0x75	; 117
    18e6:	21 f4       	brne	.+8      	; 0x18f0 <vfprintf+0x546>
    18e8:	0f 7e       	andi	r16, 0xEF	; 239
    18ea:	2a e0       	ldi	r18, 0x0A	; 10
    18ec:	30 e0       	ldi	r19, 0x00	; 0
    18ee:	1d c0       	rjmp	.+58     	; 0x192a <vfprintf+0x580>
    18f0:	09 7f       	andi	r16, 0xF9	; 249
    18f2:	8f 36       	cpi	r24, 0x6F	; 111
    18f4:	91 f0       	breq	.+36     	; 0x191a <vfprintf+0x570>
    18f6:	18 f4       	brcc	.+6      	; 0x18fe <vfprintf+0x554>
    18f8:	88 35       	cpi	r24, 0x58	; 88
    18fa:	59 f0       	breq	.+22     	; 0x1912 <vfprintf+0x568>
    18fc:	a9 c0       	rjmp	.+338    	; 0x1a50 <vfprintf+0x6a6>
    18fe:	80 37       	cpi	r24, 0x70	; 112
    1900:	19 f0       	breq	.+6      	; 0x1908 <vfprintf+0x55e>
    1902:	88 37       	cpi	r24, 0x78	; 120
    1904:	11 f0       	breq	.+4      	; 0x190a <vfprintf+0x560>
    1906:	a4 c0       	rjmp	.+328    	; 0x1a50 <vfprintf+0x6a6>
    1908:	00 61       	ori	r16, 0x10	; 16
    190a:	04 ff       	sbrs	r16, 4
    190c:	09 c0       	rjmp	.+18     	; 0x1920 <vfprintf+0x576>
    190e:	04 60       	ori	r16, 0x04	; 4
    1910:	07 c0       	rjmp	.+14     	; 0x1920 <vfprintf+0x576>
    1912:	24 ff       	sbrs	r18, 4
    1914:	08 c0       	rjmp	.+16     	; 0x1926 <vfprintf+0x57c>
    1916:	06 60       	ori	r16, 0x06	; 6
    1918:	06 c0       	rjmp	.+12     	; 0x1926 <vfprintf+0x57c>
    191a:	28 e0       	ldi	r18, 0x08	; 8
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	05 c0       	rjmp	.+10     	; 0x192a <vfprintf+0x580>
    1920:	20 e1       	ldi	r18, 0x10	; 16
    1922:	30 e0       	ldi	r19, 0x00	; 0
    1924:	02 c0       	rjmp	.+4      	; 0x192a <vfprintf+0x580>
    1926:	20 e1       	ldi	r18, 0x10	; 16
    1928:	32 e0       	ldi	r19, 0x02	; 2
    192a:	56 01       	movw	r10, r12
    192c:	07 ff       	sbrs	r16, 7
    192e:	09 c0       	rjmp	.+18     	; 0x1942 <vfprintf+0x598>
    1930:	f4 e0       	ldi	r31, 0x04	; 4
    1932:	af 0e       	add	r10, r31
    1934:	b1 1c       	adc	r11, r1
    1936:	f6 01       	movw	r30, r12
    1938:	60 81       	ld	r22, Z
    193a:	71 81       	ldd	r23, Z+1	; 0x01
    193c:	82 81       	ldd	r24, Z+2	; 0x02
    193e:	93 81       	ldd	r25, Z+3	; 0x03
    1940:	08 c0       	rjmp	.+16     	; 0x1952 <vfprintf+0x5a8>
    1942:	f2 e0       	ldi	r31, 0x02	; 2
    1944:	af 0e       	add	r10, r31
    1946:	b1 1c       	adc	r11, r1
    1948:	f6 01       	movw	r30, r12
    194a:	60 81       	ld	r22, Z
    194c:	71 81       	ldd	r23, Z+1	; 0x01
    194e:	80 e0       	ldi	r24, 0x00	; 0
    1950:	90 e0       	ldi	r25, 0x00	; 0
    1952:	a4 01       	movw	r20, r8
    1954:	ee d1       	rcall	.+988    	; 0x1d32 <__ultoa_invert>
    1956:	c8 2e       	mov	r12, r24
    1958:	c8 18       	sub	r12, r8
    195a:	0f 77       	andi	r16, 0x7F	; 127
    195c:	06 ff       	sbrs	r16, 6
    195e:	0b c0       	rjmp	.+22     	; 0x1976 <vfprintf+0x5cc>
    1960:	20 2f       	mov	r18, r16
    1962:	2e 7f       	andi	r18, 0xFE	; 254
    1964:	c1 16       	cp	r12, r17
    1966:	50 f4       	brcc	.+20     	; 0x197c <vfprintf+0x5d2>
    1968:	04 ff       	sbrs	r16, 4
    196a:	0a c0       	rjmp	.+20     	; 0x1980 <vfprintf+0x5d6>
    196c:	02 fd       	sbrc	r16, 2
    196e:	08 c0       	rjmp	.+16     	; 0x1980 <vfprintf+0x5d6>
    1970:	20 2f       	mov	r18, r16
    1972:	2e 7e       	andi	r18, 0xEE	; 238
    1974:	05 c0       	rjmp	.+10     	; 0x1980 <vfprintf+0x5d6>
    1976:	dc 2c       	mov	r13, r12
    1978:	20 2f       	mov	r18, r16
    197a:	03 c0       	rjmp	.+6      	; 0x1982 <vfprintf+0x5d8>
    197c:	dc 2c       	mov	r13, r12
    197e:	01 c0       	rjmp	.+2      	; 0x1982 <vfprintf+0x5d8>
    1980:	d1 2e       	mov	r13, r17
    1982:	24 ff       	sbrs	r18, 4
    1984:	0d c0       	rjmp	.+26     	; 0x19a0 <vfprintf+0x5f6>
    1986:	fe 01       	movw	r30, r28
    1988:	ec 0d       	add	r30, r12
    198a:	f1 1d       	adc	r31, r1
    198c:	80 81       	ld	r24, Z
    198e:	80 33       	cpi	r24, 0x30	; 48
    1990:	11 f4       	brne	.+4      	; 0x1996 <vfprintf+0x5ec>
    1992:	29 7e       	andi	r18, 0xE9	; 233
    1994:	09 c0       	rjmp	.+18     	; 0x19a8 <vfprintf+0x5fe>
    1996:	22 ff       	sbrs	r18, 2
    1998:	06 c0       	rjmp	.+12     	; 0x19a6 <vfprintf+0x5fc>
    199a:	d3 94       	inc	r13
    199c:	d3 94       	inc	r13
    199e:	04 c0       	rjmp	.+8      	; 0x19a8 <vfprintf+0x5fe>
    19a0:	82 2f       	mov	r24, r18
    19a2:	86 78       	andi	r24, 0x86	; 134
    19a4:	09 f0       	breq	.+2      	; 0x19a8 <vfprintf+0x5fe>
    19a6:	d3 94       	inc	r13
    19a8:	23 fd       	sbrc	r18, 3
    19aa:	12 c0       	rjmp	.+36     	; 0x19d0 <vfprintf+0x626>
    19ac:	20 ff       	sbrs	r18, 0
    19ae:	06 c0       	rjmp	.+12     	; 0x19bc <vfprintf+0x612>
    19b0:	1c 2d       	mov	r17, r12
    19b2:	d5 14       	cp	r13, r5
    19b4:	18 f4       	brcc	.+6      	; 0x19bc <vfprintf+0x612>
    19b6:	15 0d       	add	r17, r5
    19b8:	1d 19       	sub	r17, r13
    19ba:	d5 2c       	mov	r13, r5
    19bc:	d5 14       	cp	r13, r5
    19be:	60 f4       	brcc	.+24     	; 0x19d8 <vfprintf+0x62e>
    19c0:	b7 01       	movw	r22, r14
    19c2:	80 e2       	ldi	r24, 0x20	; 32
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	2b 8b       	std	Y+19, r18	; 0x13
    19c8:	71 d1       	rcall	.+738    	; 0x1cac <fputc>
    19ca:	d3 94       	inc	r13
    19cc:	2b 89       	ldd	r18, Y+19	; 0x13
    19ce:	f6 cf       	rjmp	.-20     	; 0x19bc <vfprintf+0x612>
    19d0:	d5 14       	cp	r13, r5
    19d2:	10 f4       	brcc	.+4      	; 0x19d8 <vfprintf+0x62e>
    19d4:	5d 18       	sub	r5, r13
    19d6:	01 c0       	rjmp	.+2      	; 0x19da <vfprintf+0x630>
    19d8:	51 2c       	mov	r5, r1
    19da:	24 ff       	sbrs	r18, 4
    19dc:	11 c0       	rjmp	.+34     	; 0x1a00 <vfprintf+0x656>
    19de:	b7 01       	movw	r22, r14
    19e0:	80 e3       	ldi	r24, 0x30	; 48
    19e2:	90 e0       	ldi	r25, 0x00	; 0
    19e4:	2b 8b       	std	Y+19, r18	; 0x13
    19e6:	62 d1       	rcall	.+708    	; 0x1cac <fputc>
    19e8:	2b 89       	ldd	r18, Y+19	; 0x13
    19ea:	22 ff       	sbrs	r18, 2
    19ec:	16 c0       	rjmp	.+44     	; 0x1a1a <vfprintf+0x670>
    19ee:	21 ff       	sbrs	r18, 1
    19f0:	03 c0       	rjmp	.+6      	; 0x19f8 <vfprintf+0x64e>
    19f2:	88 e5       	ldi	r24, 0x58	; 88
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	02 c0       	rjmp	.+4      	; 0x19fc <vfprintf+0x652>
    19f8:	88 e7       	ldi	r24, 0x78	; 120
    19fa:	90 e0       	ldi	r25, 0x00	; 0
    19fc:	b7 01       	movw	r22, r14
    19fe:	0c c0       	rjmp	.+24     	; 0x1a18 <vfprintf+0x66e>
    1a00:	82 2f       	mov	r24, r18
    1a02:	86 78       	andi	r24, 0x86	; 134
    1a04:	51 f0       	breq	.+20     	; 0x1a1a <vfprintf+0x670>
    1a06:	21 fd       	sbrc	r18, 1
    1a08:	02 c0       	rjmp	.+4      	; 0x1a0e <vfprintf+0x664>
    1a0a:	80 e2       	ldi	r24, 0x20	; 32
    1a0c:	01 c0       	rjmp	.+2      	; 0x1a10 <vfprintf+0x666>
    1a0e:	8b e2       	ldi	r24, 0x2B	; 43
    1a10:	27 fd       	sbrc	r18, 7
    1a12:	8d e2       	ldi	r24, 0x2D	; 45
    1a14:	b7 01       	movw	r22, r14
    1a16:	90 e0       	ldi	r25, 0x00	; 0
    1a18:	49 d1       	rcall	.+658    	; 0x1cac <fputc>
    1a1a:	c1 16       	cp	r12, r17
    1a1c:	30 f4       	brcc	.+12     	; 0x1a2a <vfprintf+0x680>
    1a1e:	b7 01       	movw	r22, r14
    1a20:	80 e3       	ldi	r24, 0x30	; 48
    1a22:	90 e0       	ldi	r25, 0x00	; 0
    1a24:	43 d1       	rcall	.+646    	; 0x1cac <fputc>
    1a26:	11 50       	subi	r17, 0x01	; 1
    1a28:	f8 cf       	rjmp	.-16     	; 0x1a1a <vfprintf+0x670>
    1a2a:	ca 94       	dec	r12
    1a2c:	f4 01       	movw	r30, r8
    1a2e:	ec 0d       	add	r30, r12
    1a30:	f1 1d       	adc	r31, r1
    1a32:	80 81       	ld	r24, Z
    1a34:	b7 01       	movw	r22, r14
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	39 d1       	rcall	.+626    	; 0x1cac <fputc>
    1a3a:	c1 10       	cpse	r12, r1
    1a3c:	f6 cf       	rjmp	.-20     	; 0x1a2a <vfprintf+0x680>
    1a3e:	55 20       	and	r5, r5
    1a40:	09 f4       	brne	.+2      	; 0x1a44 <vfprintf+0x69a>
    1a42:	dd cc       	rjmp	.-1606   	; 0x13fe <vfprintf+0x54>
    1a44:	b7 01       	movw	r22, r14
    1a46:	80 e2       	ldi	r24, 0x20	; 32
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	30 d1       	rcall	.+608    	; 0x1cac <fputc>
    1a4c:	5a 94       	dec	r5
    1a4e:	f7 cf       	rjmp	.-18     	; 0x1a3e <vfprintf+0x694>
    1a50:	f7 01       	movw	r30, r14
    1a52:	86 81       	ldd	r24, Z+6	; 0x06
    1a54:	97 81       	ldd	r25, Z+7	; 0x07
    1a56:	02 c0       	rjmp	.+4      	; 0x1a5c <vfprintf+0x6b2>
    1a58:	8f ef       	ldi	r24, 0xFF	; 255
    1a5a:	9f ef       	ldi	r25, 0xFF	; 255
    1a5c:	63 96       	adiw	r28, 0x13	; 19
    1a5e:	e2 e1       	ldi	r30, 0x12	; 18
    1a60:	1c c0       	rjmp	.+56     	; 0x1a9a <__epilogue_restores__>

00001a62 <__prologue_saves__>:
    1a62:	2f 92       	push	r2
    1a64:	3f 92       	push	r3
    1a66:	4f 92       	push	r4
    1a68:	5f 92       	push	r5
    1a6a:	6f 92       	push	r6
    1a6c:	7f 92       	push	r7
    1a6e:	8f 92       	push	r8
    1a70:	9f 92       	push	r9
    1a72:	af 92       	push	r10
    1a74:	bf 92       	push	r11
    1a76:	cf 92       	push	r12
    1a78:	df 92       	push	r13
    1a7a:	ef 92       	push	r14
    1a7c:	ff 92       	push	r15
    1a7e:	0f 93       	push	r16
    1a80:	1f 93       	push	r17
    1a82:	cf 93       	push	r28
    1a84:	df 93       	push	r29
    1a86:	cd b7       	in	r28, 0x3d	; 61
    1a88:	de b7       	in	r29, 0x3e	; 62
    1a8a:	ca 1b       	sub	r28, r26
    1a8c:	db 0b       	sbc	r29, r27
    1a8e:	0f b6       	in	r0, 0x3f	; 63
    1a90:	f8 94       	cli
    1a92:	de bf       	out	0x3e, r29	; 62
    1a94:	0f be       	out	0x3f, r0	; 63
    1a96:	cd bf       	out	0x3d, r28	; 61
    1a98:	09 94       	ijmp

00001a9a <__epilogue_restores__>:
    1a9a:	2a 88       	ldd	r2, Y+18	; 0x12
    1a9c:	39 88       	ldd	r3, Y+17	; 0x11
    1a9e:	48 88       	ldd	r4, Y+16	; 0x10
    1aa0:	5f 84       	ldd	r5, Y+15	; 0x0f
    1aa2:	6e 84       	ldd	r6, Y+14	; 0x0e
    1aa4:	7d 84       	ldd	r7, Y+13	; 0x0d
    1aa6:	8c 84       	ldd	r8, Y+12	; 0x0c
    1aa8:	9b 84       	ldd	r9, Y+11	; 0x0b
    1aaa:	aa 84       	ldd	r10, Y+10	; 0x0a
    1aac:	b9 84       	ldd	r11, Y+9	; 0x09
    1aae:	c8 84       	ldd	r12, Y+8	; 0x08
    1ab0:	df 80       	ldd	r13, Y+7	; 0x07
    1ab2:	ee 80       	ldd	r14, Y+6	; 0x06
    1ab4:	fd 80       	ldd	r15, Y+5	; 0x05
    1ab6:	0c 81       	ldd	r16, Y+4	; 0x04
    1ab8:	1b 81       	ldd	r17, Y+3	; 0x03
    1aba:	aa 81       	ldd	r26, Y+2	; 0x02
    1abc:	b9 81       	ldd	r27, Y+1	; 0x01
    1abe:	ce 0f       	add	r28, r30
    1ac0:	d1 1d       	adc	r29, r1
    1ac2:	0f b6       	in	r0, 0x3f	; 63
    1ac4:	f8 94       	cli
    1ac6:	de bf       	out	0x3e, r29	; 62
    1ac8:	0f be       	out	0x3f, r0	; 63
    1aca:	cd bf       	out	0x3d, r28	; 61
    1acc:	ed 01       	movw	r28, r26
    1ace:	08 95       	ret

00001ad0 <__ftoa_engine>:
    1ad0:	28 30       	cpi	r18, 0x08	; 8
    1ad2:	08 f0       	brcs	.+2      	; 0x1ad6 <__ftoa_engine+0x6>
    1ad4:	27 e0       	ldi	r18, 0x07	; 7
    1ad6:	33 27       	eor	r19, r19
    1ad8:	da 01       	movw	r26, r20
    1ada:	99 0f       	add	r25, r25
    1adc:	31 1d       	adc	r19, r1
    1ade:	87 fd       	sbrc	r24, 7
    1ae0:	91 60       	ori	r25, 0x01	; 1
    1ae2:	00 96       	adiw	r24, 0x00	; 0
    1ae4:	61 05       	cpc	r22, r1
    1ae6:	71 05       	cpc	r23, r1
    1ae8:	39 f4       	brne	.+14     	; 0x1af8 <__ftoa_engine+0x28>
    1aea:	32 60       	ori	r19, 0x02	; 2
    1aec:	2e 5f       	subi	r18, 0xFE	; 254
    1aee:	3d 93       	st	X+, r19
    1af0:	30 e3       	ldi	r19, 0x30	; 48
    1af2:	2a 95       	dec	r18
    1af4:	e1 f7       	brne	.-8      	; 0x1aee <__ftoa_engine+0x1e>
    1af6:	08 95       	ret
    1af8:	9f 3f       	cpi	r25, 0xFF	; 255
    1afa:	30 f0       	brcs	.+12     	; 0x1b08 <__ftoa_engine+0x38>
    1afc:	80 38       	cpi	r24, 0x80	; 128
    1afe:	71 05       	cpc	r23, r1
    1b00:	61 05       	cpc	r22, r1
    1b02:	09 f0       	breq	.+2      	; 0x1b06 <__ftoa_engine+0x36>
    1b04:	3c 5f       	subi	r19, 0xFC	; 252
    1b06:	3c 5f       	subi	r19, 0xFC	; 252
    1b08:	3d 93       	st	X+, r19
    1b0a:	91 30       	cpi	r25, 0x01	; 1
    1b0c:	08 f0       	brcs	.+2      	; 0x1b10 <__ftoa_engine+0x40>
    1b0e:	80 68       	ori	r24, 0x80	; 128
    1b10:	91 1d       	adc	r25, r1
    1b12:	df 93       	push	r29
    1b14:	cf 93       	push	r28
    1b16:	1f 93       	push	r17
    1b18:	0f 93       	push	r16
    1b1a:	ff 92       	push	r15
    1b1c:	ef 92       	push	r14
    1b1e:	19 2f       	mov	r17, r25
    1b20:	98 7f       	andi	r25, 0xF8	; 248
    1b22:	96 95       	lsr	r25
    1b24:	e9 2f       	mov	r30, r25
    1b26:	96 95       	lsr	r25
    1b28:	96 95       	lsr	r25
    1b2a:	e9 0f       	add	r30, r25
    1b2c:	ff 27       	eor	r31, r31
    1b2e:	ec 53       	subi	r30, 0x3C	; 60
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	99 27       	eor	r25, r25
    1b34:	33 27       	eor	r19, r19
    1b36:	ee 24       	eor	r14, r14
    1b38:	ff 24       	eor	r15, r15
    1b3a:	a7 01       	movw	r20, r14
    1b3c:	e7 01       	movw	r28, r14
    1b3e:	05 90       	lpm	r0, Z+
    1b40:	08 94       	sec
    1b42:	07 94       	ror	r0
    1b44:	28 f4       	brcc	.+10     	; 0x1b50 <__ftoa_engine+0x80>
    1b46:	36 0f       	add	r19, r22
    1b48:	e7 1e       	adc	r14, r23
    1b4a:	f8 1e       	adc	r15, r24
    1b4c:	49 1f       	adc	r20, r25
    1b4e:	51 1d       	adc	r21, r1
    1b50:	66 0f       	add	r22, r22
    1b52:	77 1f       	adc	r23, r23
    1b54:	88 1f       	adc	r24, r24
    1b56:	99 1f       	adc	r25, r25
    1b58:	06 94       	lsr	r0
    1b5a:	a1 f7       	brne	.-24     	; 0x1b44 <__ftoa_engine+0x74>
    1b5c:	05 90       	lpm	r0, Z+
    1b5e:	07 94       	ror	r0
    1b60:	28 f4       	brcc	.+10     	; 0x1b6c <__ftoa_engine+0x9c>
    1b62:	e7 0e       	add	r14, r23
    1b64:	f8 1e       	adc	r15, r24
    1b66:	49 1f       	adc	r20, r25
    1b68:	56 1f       	adc	r21, r22
    1b6a:	c1 1d       	adc	r28, r1
    1b6c:	77 0f       	add	r23, r23
    1b6e:	88 1f       	adc	r24, r24
    1b70:	99 1f       	adc	r25, r25
    1b72:	66 1f       	adc	r22, r22
    1b74:	06 94       	lsr	r0
    1b76:	a1 f7       	brne	.-24     	; 0x1b60 <__ftoa_engine+0x90>
    1b78:	05 90       	lpm	r0, Z+
    1b7a:	07 94       	ror	r0
    1b7c:	28 f4       	brcc	.+10     	; 0x1b88 <__ftoa_engine+0xb8>
    1b7e:	f8 0e       	add	r15, r24
    1b80:	49 1f       	adc	r20, r25
    1b82:	56 1f       	adc	r21, r22
    1b84:	c7 1f       	adc	r28, r23
    1b86:	d1 1d       	adc	r29, r1
    1b88:	88 0f       	add	r24, r24
    1b8a:	99 1f       	adc	r25, r25
    1b8c:	66 1f       	adc	r22, r22
    1b8e:	77 1f       	adc	r23, r23
    1b90:	06 94       	lsr	r0
    1b92:	a1 f7       	brne	.-24     	; 0x1b7c <__ftoa_engine+0xac>
    1b94:	05 90       	lpm	r0, Z+
    1b96:	07 94       	ror	r0
    1b98:	20 f4       	brcc	.+8      	; 0x1ba2 <__ftoa_engine+0xd2>
    1b9a:	49 0f       	add	r20, r25
    1b9c:	56 1f       	adc	r21, r22
    1b9e:	c7 1f       	adc	r28, r23
    1ba0:	d8 1f       	adc	r29, r24
    1ba2:	99 0f       	add	r25, r25
    1ba4:	66 1f       	adc	r22, r22
    1ba6:	77 1f       	adc	r23, r23
    1ba8:	88 1f       	adc	r24, r24
    1baa:	06 94       	lsr	r0
    1bac:	a9 f7       	brne	.-22     	; 0x1b98 <__ftoa_engine+0xc8>
    1bae:	84 91       	lpm	r24, Z
    1bb0:	10 95       	com	r17
    1bb2:	17 70       	andi	r17, 0x07	; 7
    1bb4:	41 f0       	breq	.+16     	; 0x1bc6 <__ftoa_engine+0xf6>
    1bb6:	d6 95       	lsr	r29
    1bb8:	c7 95       	ror	r28
    1bba:	57 95       	ror	r21
    1bbc:	47 95       	ror	r20
    1bbe:	f7 94       	ror	r15
    1bc0:	e7 94       	ror	r14
    1bc2:	1a 95       	dec	r17
    1bc4:	c1 f7       	brne	.-16     	; 0x1bb6 <__ftoa_engine+0xe6>
    1bc6:	ea e6       	ldi	r30, 0x6A	; 106
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	68 94       	set
    1bcc:	15 90       	lpm	r1, Z+
    1bce:	15 91       	lpm	r17, Z+
    1bd0:	35 91       	lpm	r19, Z+
    1bd2:	65 91       	lpm	r22, Z+
    1bd4:	95 91       	lpm	r25, Z+
    1bd6:	05 90       	lpm	r0, Z+
    1bd8:	7f e2       	ldi	r23, 0x2F	; 47
    1bda:	73 95       	inc	r23
    1bdc:	e1 18       	sub	r14, r1
    1bde:	f1 0a       	sbc	r15, r17
    1be0:	43 0b       	sbc	r20, r19
    1be2:	56 0b       	sbc	r21, r22
    1be4:	c9 0b       	sbc	r28, r25
    1be6:	d0 09       	sbc	r29, r0
    1be8:	c0 f7       	brcc	.-16     	; 0x1bda <__ftoa_engine+0x10a>
    1bea:	e1 0c       	add	r14, r1
    1bec:	f1 1e       	adc	r15, r17
    1bee:	43 1f       	adc	r20, r19
    1bf0:	56 1f       	adc	r21, r22
    1bf2:	c9 1f       	adc	r28, r25
    1bf4:	d0 1d       	adc	r29, r0
    1bf6:	7e f4       	brtc	.+30     	; 0x1c16 <__ftoa_engine+0x146>
    1bf8:	70 33       	cpi	r23, 0x30	; 48
    1bfa:	11 f4       	brne	.+4      	; 0x1c00 <__ftoa_engine+0x130>
    1bfc:	8a 95       	dec	r24
    1bfe:	e6 cf       	rjmp	.-52     	; 0x1bcc <__ftoa_engine+0xfc>
    1c00:	e8 94       	clt
    1c02:	01 50       	subi	r16, 0x01	; 1
    1c04:	30 f0       	brcs	.+12     	; 0x1c12 <__ftoa_engine+0x142>
    1c06:	08 0f       	add	r16, r24
    1c08:	0a f4       	brpl	.+2      	; 0x1c0c <__ftoa_engine+0x13c>
    1c0a:	00 27       	eor	r16, r16
    1c0c:	02 17       	cp	r16, r18
    1c0e:	08 f4       	brcc	.+2      	; 0x1c12 <__ftoa_engine+0x142>
    1c10:	20 2f       	mov	r18, r16
    1c12:	23 95       	inc	r18
    1c14:	02 2f       	mov	r16, r18
    1c16:	7a 33       	cpi	r23, 0x3A	; 58
    1c18:	28 f0       	brcs	.+10     	; 0x1c24 <__ftoa_engine+0x154>
    1c1a:	79 e3       	ldi	r23, 0x39	; 57
    1c1c:	7d 93       	st	X+, r23
    1c1e:	2a 95       	dec	r18
    1c20:	e9 f7       	brne	.-6      	; 0x1c1c <__ftoa_engine+0x14c>
    1c22:	10 c0       	rjmp	.+32     	; 0x1c44 <__ftoa_engine+0x174>
    1c24:	7d 93       	st	X+, r23
    1c26:	2a 95       	dec	r18
    1c28:	89 f6       	brne	.-94     	; 0x1bcc <__ftoa_engine+0xfc>
    1c2a:	06 94       	lsr	r0
    1c2c:	97 95       	ror	r25
    1c2e:	67 95       	ror	r22
    1c30:	37 95       	ror	r19
    1c32:	17 95       	ror	r17
    1c34:	17 94       	ror	r1
    1c36:	e1 18       	sub	r14, r1
    1c38:	f1 0a       	sbc	r15, r17
    1c3a:	43 0b       	sbc	r20, r19
    1c3c:	56 0b       	sbc	r21, r22
    1c3e:	c9 0b       	sbc	r28, r25
    1c40:	d0 09       	sbc	r29, r0
    1c42:	98 f0       	brcs	.+38     	; 0x1c6a <__ftoa_engine+0x19a>
    1c44:	23 95       	inc	r18
    1c46:	7e 91       	ld	r23, -X
    1c48:	73 95       	inc	r23
    1c4a:	7a 33       	cpi	r23, 0x3A	; 58
    1c4c:	08 f0       	brcs	.+2      	; 0x1c50 <__ftoa_engine+0x180>
    1c4e:	70 e3       	ldi	r23, 0x30	; 48
    1c50:	7c 93       	st	X, r23
    1c52:	20 13       	cpse	r18, r16
    1c54:	b8 f7       	brcc	.-18     	; 0x1c44 <__ftoa_engine+0x174>
    1c56:	7e 91       	ld	r23, -X
    1c58:	70 61       	ori	r23, 0x10	; 16
    1c5a:	7d 93       	st	X+, r23
    1c5c:	30 f0       	brcs	.+12     	; 0x1c6a <__ftoa_engine+0x19a>
    1c5e:	83 95       	inc	r24
    1c60:	71 e3       	ldi	r23, 0x31	; 49
    1c62:	7d 93       	st	X+, r23
    1c64:	70 e3       	ldi	r23, 0x30	; 48
    1c66:	2a 95       	dec	r18
    1c68:	e1 f7       	brne	.-8      	; 0x1c62 <__ftoa_engine+0x192>
    1c6a:	11 24       	eor	r1, r1
    1c6c:	ef 90       	pop	r14
    1c6e:	ff 90       	pop	r15
    1c70:	0f 91       	pop	r16
    1c72:	1f 91       	pop	r17
    1c74:	cf 91       	pop	r28
    1c76:	df 91       	pop	r29
    1c78:	99 27       	eor	r25, r25
    1c7a:	87 fd       	sbrc	r24, 7
    1c7c:	90 95       	com	r25
    1c7e:	08 95       	ret

00001c80 <strnlen_P>:
    1c80:	fc 01       	movw	r30, r24
    1c82:	05 90       	lpm	r0, Z+
    1c84:	61 50       	subi	r22, 0x01	; 1
    1c86:	70 40       	sbci	r23, 0x00	; 0
    1c88:	01 10       	cpse	r0, r1
    1c8a:	d8 f7       	brcc	.-10     	; 0x1c82 <strnlen_P+0x2>
    1c8c:	80 95       	com	r24
    1c8e:	90 95       	com	r25
    1c90:	8e 0f       	add	r24, r30
    1c92:	9f 1f       	adc	r25, r31
    1c94:	08 95       	ret

00001c96 <strnlen>:
    1c96:	fc 01       	movw	r30, r24
    1c98:	61 50       	subi	r22, 0x01	; 1
    1c9a:	70 40       	sbci	r23, 0x00	; 0
    1c9c:	01 90       	ld	r0, Z+
    1c9e:	01 10       	cpse	r0, r1
    1ca0:	d8 f7       	brcc	.-10     	; 0x1c98 <strnlen+0x2>
    1ca2:	80 95       	com	r24
    1ca4:	90 95       	com	r25
    1ca6:	8e 0f       	add	r24, r30
    1ca8:	9f 1f       	adc	r25, r31
    1caa:	08 95       	ret

00001cac <fputc>:
    1cac:	0f 93       	push	r16
    1cae:	1f 93       	push	r17
    1cb0:	cf 93       	push	r28
    1cb2:	df 93       	push	r29
    1cb4:	18 2f       	mov	r17, r24
    1cb6:	09 2f       	mov	r16, r25
    1cb8:	eb 01       	movw	r28, r22
    1cba:	8b 81       	ldd	r24, Y+3	; 0x03
    1cbc:	81 fd       	sbrc	r24, 1
    1cbe:	03 c0       	rjmp	.+6      	; 0x1cc6 <fputc+0x1a>
    1cc0:	8f ef       	ldi	r24, 0xFF	; 255
    1cc2:	9f ef       	ldi	r25, 0xFF	; 255
    1cc4:	20 c0       	rjmp	.+64     	; 0x1d06 <fputc+0x5a>
    1cc6:	82 ff       	sbrs	r24, 2
    1cc8:	10 c0       	rjmp	.+32     	; 0x1cea <fputc+0x3e>
    1cca:	4e 81       	ldd	r20, Y+6	; 0x06
    1ccc:	5f 81       	ldd	r21, Y+7	; 0x07
    1cce:	2c 81       	ldd	r18, Y+4	; 0x04
    1cd0:	3d 81       	ldd	r19, Y+5	; 0x05
    1cd2:	42 17       	cp	r20, r18
    1cd4:	53 07       	cpc	r21, r19
    1cd6:	7c f4       	brge	.+30     	; 0x1cf6 <fputc+0x4a>
    1cd8:	e8 81       	ld	r30, Y
    1cda:	f9 81       	ldd	r31, Y+1	; 0x01
    1cdc:	9f 01       	movw	r18, r30
    1cde:	2f 5f       	subi	r18, 0xFF	; 255
    1ce0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ce2:	39 83       	std	Y+1, r19	; 0x01
    1ce4:	28 83       	st	Y, r18
    1ce6:	10 83       	st	Z, r17
    1ce8:	06 c0       	rjmp	.+12     	; 0x1cf6 <fputc+0x4a>
    1cea:	e8 85       	ldd	r30, Y+8	; 0x08
    1cec:	f9 85       	ldd	r31, Y+9	; 0x09
    1cee:	81 2f       	mov	r24, r17
    1cf0:	09 95       	icall
    1cf2:	89 2b       	or	r24, r25
    1cf4:	29 f7       	brne	.-54     	; 0x1cc0 <fputc+0x14>
    1cf6:	2e 81       	ldd	r18, Y+6	; 0x06
    1cf8:	3f 81       	ldd	r19, Y+7	; 0x07
    1cfa:	2f 5f       	subi	r18, 0xFF	; 255
    1cfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1cfe:	3f 83       	std	Y+7, r19	; 0x07
    1d00:	2e 83       	std	Y+6, r18	; 0x06
    1d02:	81 2f       	mov	r24, r17
    1d04:	90 2f       	mov	r25, r16
    1d06:	df 91       	pop	r29
    1d08:	cf 91       	pop	r28
    1d0a:	1f 91       	pop	r17
    1d0c:	0f 91       	pop	r16
    1d0e:	08 95       	ret

00001d10 <printf>:
    1d10:	a0 e0       	ldi	r26, 0x00	; 0
    1d12:	b0 e0       	ldi	r27, 0x00	; 0
    1d14:	ed e8       	ldi	r30, 0x8D	; 141
    1d16:	fe e0       	ldi	r31, 0x0E	; 14
    1d18:	b4 ce       	rjmp	.-664    	; 0x1a82 <__prologue_saves__+0x20>
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	35 96       	adiw	r30, 0x05	; 5
    1d1e:	61 91       	ld	r22, Z+
    1d20:	71 91       	ld	r23, Z+
    1d22:	af 01       	movw	r20, r30
    1d24:	80 91 9c 01 	lds	r24, 0x019C
    1d28:	90 91 9d 01 	lds	r25, 0x019D
    1d2c:	3e db       	rcall	.-2436   	; 0x13aa <vfprintf>
    1d2e:	e2 e0       	ldi	r30, 0x02	; 2
    1d30:	c4 ce       	rjmp	.-632    	; 0x1aba <__epilogue_restores__+0x20>

00001d32 <__ultoa_invert>:
    1d32:	fa 01       	movw	r30, r20
    1d34:	aa 27       	eor	r26, r26
    1d36:	28 30       	cpi	r18, 0x08	; 8
    1d38:	51 f1       	breq	.+84     	; 0x1d8e <__ultoa_invert+0x5c>
    1d3a:	20 31       	cpi	r18, 0x10	; 16
    1d3c:	81 f1       	breq	.+96     	; 0x1d9e <__ultoa_invert+0x6c>
    1d3e:	e8 94       	clt
    1d40:	6f 93       	push	r22
    1d42:	6e 7f       	andi	r22, 0xFE	; 254
    1d44:	6e 5f       	subi	r22, 0xFE	; 254
    1d46:	7f 4f       	sbci	r23, 0xFF	; 255
    1d48:	8f 4f       	sbci	r24, 0xFF	; 255
    1d4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d4c:	af 4f       	sbci	r26, 0xFF	; 255
    1d4e:	b1 e0       	ldi	r27, 0x01	; 1
    1d50:	3e d0       	rcall	.+124    	; 0x1dce <__ultoa_invert+0x9c>
    1d52:	b4 e0       	ldi	r27, 0x04	; 4
    1d54:	3c d0       	rcall	.+120    	; 0x1dce <__ultoa_invert+0x9c>
    1d56:	67 0f       	add	r22, r23
    1d58:	78 1f       	adc	r23, r24
    1d5a:	89 1f       	adc	r24, r25
    1d5c:	9a 1f       	adc	r25, r26
    1d5e:	a1 1d       	adc	r26, r1
    1d60:	68 0f       	add	r22, r24
    1d62:	79 1f       	adc	r23, r25
    1d64:	8a 1f       	adc	r24, r26
    1d66:	91 1d       	adc	r25, r1
    1d68:	a1 1d       	adc	r26, r1
    1d6a:	6a 0f       	add	r22, r26
    1d6c:	71 1d       	adc	r23, r1
    1d6e:	81 1d       	adc	r24, r1
    1d70:	91 1d       	adc	r25, r1
    1d72:	a1 1d       	adc	r26, r1
    1d74:	20 d0       	rcall	.+64     	; 0x1db6 <__ultoa_invert+0x84>
    1d76:	09 f4       	brne	.+2      	; 0x1d7a <__ultoa_invert+0x48>
    1d78:	68 94       	set
    1d7a:	3f 91       	pop	r19
    1d7c:	2a e0       	ldi	r18, 0x0A	; 10
    1d7e:	26 9f       	mul	r18, r22
    1d80:	11 24       	eor	r1, r1
    1d82:	30 19       	sub	r19, r0
    1d84:	30 5d       	subi	r19, 0xD0	; 208
    1d86:	31 93       	st	Z+, r19
    1d88:	de f6       	brtc	.-74     	; 0x1d40 <__ultoa_invert+0xe>
    1d8a:	cf 01       	movw	r24, r30
    1d8c:	08 95       	ret
    1d8e:	46 2f       	mov	r20, r22
    1d90:	47 70       	andi	r20, 0x07	; 7
    1d92:	40 5d       	subi	r20, 0xD0	; 208
    1d94:	41 93       	st	Z+, r20
    1d96:	b3 e0       	ldi	r27, 0x03	; 3
    1d98:	0f d0       	rcall	.+30     	; 0x1db8 <__ultoa_invert+0x86>
    1d9a:	c9 f7       	brne	.-14     	; 0x1d8e <__ultoa_invert+0x5c>
    1d9c:	f6 cf       	rjmp	.-20     	; 0x1d8a <__ultoa_invert+0x58>
    1d9e:	46 2f       	mov	r20, r22
    1da0:	4f 70       	andi	r20, 0x0F	; 15
    1da2:	40 5d       	subi	r20, 0xD0	; 208
    1da4:	4a 33       	cpi	r20, 0x3A	; 58
    1da6:	18 f0       	brcs	.+6      	; 0x1dae <__ultoa_invert+0x7c>
    1da8:	49 5d       	subi	r20, 0xD9	; 217
    1daa:	31 fd       	sbrc	r19, 1
    1dac:	40 52       	subi	r20, 0x20	; 32
    1dae:	41 93       	st	Z+, r20
    1db0:	02 d0       	rcall	.+4      	; 0x1db6 <__ultoa_invert+0x84>
    1db2:	a9 f7       	brne	.-22     	; 0x1d9e <__ultoa_invert+0x6c>
    1db4:	ea cf       	rjmp	.-44     	; 0x1d8a <__ultoa_invert+0x58>
    1db6:	b4 e0       	ldi	r27, 0x04	; 4
    1db8:	a6 95       	lsr	r26
    1dba:	97 95       	ror	r25
    1dbc:	87 95       	ror	r24
    1dbe:	77 95       	ror	r23
    1dc0:	67 95       	ror	r22
    1dc2:	ba 95       	dec	r27
    1dc4:	c9 f7       	brne	.-14     	; 0x1db8 <__ultoa_invert+0x86>
    1dc6:	00 97       	sbiw	r24, 0x00	; 0
    1dc8:	61 05       	cpc	r22, r1
    1dca:	71 05       	cpc	r23, r1
    1dcc:	08 95       	ret
    1dce:	9b 01       	movw	r18, r22
    1dd0:	ac 01       	movw	r20, r24
    1dd2:	0a 2e       	mov	r0, r26
    1dd4:	06 94       	lsr	r0
    1dd6:	57 95       	ror	r21
    1dd8:	47 95       	ror	r20
    1dda:	37 95       	ror	r19
    1ddc:	27 95       	ror	r18
    1dde:	ba 95       	dec	r27
    1de0:	c9 f7       	brne	.-14     	; 0x1dd4 <__ultoa_invert+0xa2>
    1de2:	62 0f       	add	r22, r18
    1de4:	73 1f       	adc	r23, r19
    1de6:	84 1f       	adc	r24, r20
    1de8:	95 1f       	adc	r25, r21
    1dea:	a0 1d       	adc	r26, r0
    1dec:	08 95       	ret

00001dee <_exit>:
    1dee:	f8 94       	cli

00001df0 <__stop_program>:
    1df0:	ff cf       	rjmp	.-2      	; 0x1df0 <__stop_program>
